{"version":3,"file":"index.mjs","sources":["../../src/autofiles/ShaderConfig.ts","../../src/render/shader/ShaderLib.ts","../../../../node_modules/tslib/tslib.es6.js","../../src/core/RunEnvironment.ts","../../src/core/HideFlags.ts","../../src/core/Feng3dObject.ts","../../src/component/Component.ts","../../src/assets/AssetType.ts","../../src/core/BoundingBox.ts","../../src/core/Node3D.ts","../../src/component/Component3D.ts","../../src/component/Behaviour.ts","../../src/Menu.ts","../../src/animation/AnimationClip.ts","../../src/animation/PropertyClip.ts","../../src/animation/Animation.ts","../../src/animators/skeleton/Skeleton.ts","../../src/core/ScriptComponent.ts","../../src/core/Entity.ts","../../src/animators/skeleton/SkeletonComponent.ts","../../src/core/AssetData.ts","../../src/geometry/GeometryUtils.ts","../../src/geometry/Geometry.ts","../../src/light/shadow/ShadowType.ts","../../src/light/pickers/LightPicker.ts","../../src/utils/ImageUtil.ts","../../src/render/data/TextureInfo.ts","../../src/textures/Texture2D.ts","../../src/textures/TextureCube.ts","../../src/materials/Material.ts","../../src/core/RayCastable.ts","../../src/core/Renderable.ts","../../src/animators/skeleton/SkinnedMeshRenderer.ts","../../src/utils/Ticker.ts","../../src/assets/FileAsset.ts","../../src/assets/FolderAsset.ts","../../src/utils/Path.ts","../../src/assets/rs/ReadRS.ts","../../src/assets/rs/ReadWriteRS.ts","../../src/audio/AudioListener.ts","../../src/audio/AudioSource.ts","../../src/cameras/Projection.ts","../../src/cameras/lenses/LensBase.ts","../../src/cameras/lenses/OrthographicLens.ts","../../src/cameras/lenses/PerspectiveLens.ts","../../src/cameras/Camera.ts","../../src/component/BillboardComponent.ts","../../src/component/CartoonComponent.ts","../../src/component/Graphics.ts","../../src/component/HoldSizeComponent.ts","../../src/component/OutLineComponent.ts","../../src/component/WireframeComponent.ts","../../src/controllers/ControllerBase.ts","../../src/controllers/FPSController.ts","../../src/controllers/LookAtController.ts","../../src/controllers/HoverController.ts","../../src/core/MeshRenderer.ts","../../src/pick/Raycaster.ts","../../src/core/Mouse3DManager.ts","../../src/core/Script.ts","../../src/core/TransformLayout.ts","../../src/primitives/PlaneGeometry.ts","../../src/textures/RenderTargetTexture2D.ts","../../src/render/FrameBufferObject.ts","../../src/light/LightType.ts","../../src/light/Light.ts","../../src/light/DirectionalLight.ts","../../src/render/renderer/ForwardRenderer.ts","../../src/render/renderer/OutlineRenderer.ts","../../src/render/renderer/ShadowRenderer.ts","../../src/render/renderer/WireframeRenderer.ts","../../src/light/PointLight.ts","../../src/light/SpotLight.ts","../../src/skybox/SkyBox.ts","../../src/scene/ScenePickCache.ts","../../src/scene/Scene.ts","../../src/skybox/SkyboxRenderer.ts","../../src/core/View.ts","../../src/geometry/CustomGeometry.ts","../../src/geometry/PointGeometry.ts","../../src/geometry/SegmentGeometry.ts","../../src/materials/ColorMaterial.ts","../../src/materials/PointMaterial.ts","../../src/materials/SegmentMaterial.ts","../../src/materials/StandardMaterial.ts","../../src/materials/TextureMaterial.ts","../../src/primitives/CapsuleGeometry.ts","../../src/primitives/CylinderGeometry.ts","../../src/primitives/ConeGeometry.ts","../../src/primitives/CubeGeometry.ts","../../src/primitives/ParametricGeometry.ts","../../src/primitives/QuadGeometry.ts","../../src/primitives/SphereGeometry.ts","../../src/primitives/TorusGeometry.ts","../../src/render/renderer/MouseRenderer.ts","../../src/scene/SceneUtil.ts","../../src/setting.ts","../../src/skybox/SkyBoxRenderer.ts","../../src/textures/CanvasTexture2D.ts","../../src/textures/ImageDataTexture2D.ts","../../src/textures/ImageTexture2D.ts","../../src/textures/VideoTexture2D.ts","../../src/utils/Uuid.ts","../../src/utils/FunctionWarp.ts","../../src/utils/debug.ts","../../src/utils/Pool.ts","../../src/utils/RegExps.ts","../../src/utils/Stats.ts","../../src/water/Water.ts","../../src/water/WaterMaterial.ts"],"sourcesContent":["import { shaderlib } from \"@feng3d/renderer\";\r\n\r\nshaderlib.shaderConfig = {\r\n\t\"shaders\": {\r\n\t\t\"color\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nuniform vec4 u_diffuseInput;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    gl_FragColor = u_diffuseInput;\\r\\n}\\r\\n\",\r\n\t\t\t\"vertex\": \"attribute vec3 a_position;\\r\\n\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec4 worldPosition = u_modelMatrix * vec4(a_position, 1.0);\\r\\n    gl_Position = u_viewProjection * worldPosition;\\r\\n}\"\r\n\t\t},\r\n\t\t\"mouse\": {\r\n\t\t\t\"fragment\": \"precision highp float;\\r\\n\\r\\nuniform int u_objectID;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    //支持 255*255*255*255 个索引\\r\\n    const float invColor = 1.0/255.0;\\r\\n    float temp = float(u_objectID);\\r\\n    temp = floor(temp) * invColor;\\r\\n    gl_FragColor.x = fract(temp);\\r\\n    temp = floor(temp) * invColor;\\r\\n    gl_FragColor.y = fract(temp);\\r\\n    temp = floor(temp) * invColor;\\r\\n    gl_FragColor.z = fract(temp);\\r\\n    temp = floor(temp) * invColor;\\r\\n    gl_FragColor.w = fract(temp);\\r\\n}\",\r\n\t\t\t\"vertex\": \"attribute vec3 a_position;\\r\\n\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec4 worldPosition = u_modelMatrix * vec4(a_position, 1.0);\\r\\n    gl_Position = u_viewProjection * worldPosition;\\r\\n}\"\r\n\t\t},\r\n\t\t\"outline\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nuniform vec4 u_outlineColor;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    gl_FragColor = u_outlineColor;\\r\\n}\",\r\n\t\t\t\"vertex\": \"precision mediump float;  \\r\\n\\r\\n//坐标属性\\r\\nattribute vec3 a_position;\\r\\nattribute vec3 a_normal;\\r\\n\\r\\n#include<uv_pars_vert>\\r\\n\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_ITModelMatrix;\\r\\nuniform vec3 u_cameraPos;\\r\\nuniform mat4 u_viewProjection;\\r\\nuniform float u_scaleByDepth;\\r\\nuniform float u_outlineMorphFactor;\\r\\n\\r\\n#include<skeleton_pars_vert>\\r\\n#include<particle_pars_vert>\\r\\n\\r\\nuniform float u_outlineSize;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    vec4 position = vec4(a_position, 1.0);\\r\\n\\r\\n    #include<uv_vert>\\r\\n\\r\\n    #include<skeleton_vert>\\r\\n    #include<particle_vert>\\r\\n    \\r\\n    vec3 normal = a_normal;\\r\\n\\r\\n    //全局坐标\\r\\n    vec4 worldPosition = u_modelMatrix * position;\\r\\n    //全局法线\\r\\n    vec3 globalNormal = normalize((u_ITModelMatrix * vec4(normal, 0.0)).xyz);\\r\\n\\r\\n    float depth = distance(worldPosition.xyz , u_cameraPos.xyz);\\r\\n    \\r\\n    vec3 offsetDir = mix(globalNormal, normalize(worldPosition.xyz), u_outlineMorphFactor);\\r\\n    //摄像机远近保持粗细一致\\r\\n    offsetDir = offsetDir * depth * u_scaleByDepth;\\r\\n    //描边宽度\\r\\n    offsetDir = offsetDir * u_outlineSize;\\r\\n\\r\\n    worldPosition.xyz = worldPosition.xyz + offsetDir;//\\r\\n\\r\\n    //计算投影坐标\\r\\n    gl_Position = u_viewProjection * worldPosition;\\r\\n}\"\r\n\t\t},\r\n\t\t\"Particles_Additive\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\nuniform vec4 _TintColor;\\r\\nuniform sampler2D _MainTex;\\r\\nuniform vec4 _MainTex_ST;\\r\\n\\r\\n#include<particle_pars_frag>\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec4 finalColor = vec4(1.0, 1.0, 1.0, 1.0);\\r\\n\\r\\n    #include<particle_frag>\\r\\n\\r\\n    vec2 uv = v_uv;\\r\\n    uv = uv * _MainTex_ST.xy + _MainTex_ST.zw;\\r\\n    finalColor = 2.0 * finalColor * _TintColor * texture2D(_MainTex, uv);\\r\\n\\r\\n    gl_FragColor = finalColor;\\r\\n}\",\r\n\t\t\t\"vertex\": \"precision mediump float;  \\r\\n\\r\\n//坐标属性\\r\\nattribute vec3 a_position;\\r\\nattribute vec2 a_uv;\\r\\n\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_ITModelMatrix;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n#include<particle_pars_vert>\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    vec4 position = vec4(a_position, 1.0);\\r\\n    //输出uv\\r\\n    v_uv = a_uv;\\r\\n    \\r\\n    #include<particle_vert>\\r\\n\\r\\n    //获取全局坐标\\r\\n    vec4 worldPosition = u_modelMatrix * position;\\r\\n    //计算投影坐标\\r\\n    gl_Position = u_viewProjection * worldPosition;\\r\\n}\"\r\n\t\t},\r\n\t\t\"Particles_AlphaBlendedPremultiply\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\nuniform sampler2D _MainTex;\\r\\nuniform vec4 _MainTex_ST;\\r\\n\\r\\n#include<particle_pars_frag>\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec4 finalColor = vec4(1.0, 1.0, 1.0, 1.0);\\r\\n\\r\\n    #include<particle_frag>\\r\\n\\r\\n    vec2 uv = v_uv;\\r\\n    uv = uv * _MainTex_ST.xy + _MainTex_ST.zw;\\r\\n\\r\\n    finalColor = finalColor *  texture2D(_MainTex, uv) * finalColor.a;\\r\\n    gl_FragColor = finalColor;\\r\\n}\",\r\n\t\t\t\"vertex\": \"precision mediump float;  \\r\\n\\r\\n//坐标属性\\r\\nattribute vec3 a_position;\\r\\nattribute vec2 a_uv;\\r\\n\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_ITModelMatrix;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n#include<particle_pars_vert>\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    vec4 position = vec4(a_position, 1.0);\\r\\n    //输出uv\\r\\n    v_uv = a_uv;\\r\\n    \\r\\n    #include<particle_vert>\\r\\n\\r\\n    //获取全局坐标\\r\\n    vec4 worldPosition = u_modelMatrix * position;\\r\\n    //计算投影坐标\\r\\n    gl_Position = u_viewProjection * worldPosition;\\r\\n}\"\r\n\t\t},\r\n\t\t\"point\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nvarying vec4 v_color;\\r\\nuniform vec4 u_color;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    gl_FragColor = v_color * u_color;\\r\\n}\\r\\n\",\r\n\t\t\t\"vertex\": \"attribute vec3 a_position;\\r\\nattribute vec4 a_color;\\r\\n\\r\\nuniform float u_PointSize;\\r\\n\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\nvarying vec4 v_color;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    vec4 worldPosition = u_modelMatrix * vec4(a_position, 1.0);\\r\\n    gl_Position = u_viewProjection * worldPosition;\\r\\n    gl_PointSize = u_PointSize;\\r\\n\\r\\n    v_color = a_color;\\r\\n}\"\r\n\t\t},\r\n\t\t\"segment\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nvarying vec4 v_color;\\r\\n\\r\\nuniform vec4 u_segmentColor;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    gl_FragColor = v_color * u_segmentColor;\\r\\n}\",\r\n\t\t\t\"vertex\": \"attribute vec3 a_position;\\r\\nattribute vec4 a_color;\\r\\n\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\nvarying vec4 v_color;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    gl_Position = u_viewProjection * u_modelMatrix * vec4(a_position, 1.0);\\r\\n    v_color = a_color;\\r\\n}\"\r\n\t\t},\r\n\t\t\"shadow\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nvarying vec3 v_worldPosition;\\r\\n\\r\\nuniform int u_lightType;\\r\\nuniform vec3 u_lightPosition;\\r\\nuniform float u_shadowCameraNear;\\r\\nuniform float u_shadowCameraFar;\\r\\n\\r\\n// @see https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderChunk/packing.glsl\\r\\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\\r\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\r\\nconst float ShiftRight8 = 1. / 256.;\\r\\nvec4 packDepthToRGBA( const in float v ) \\r\\n{\\r\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\r\\n\\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\\r\\n\\treturn r * PackUpscale;\\r\\n}\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    vec3 lightToPosition = (v_worldPosition - u_lightPosition);\\r\\n    float dp = ( length( lightToPosition ) - u_shadowCameraNear ) / ( u_shadowCameraFar - u_shadowCameraNear ); // need to clamp?\\r\\n    gl_FragColor = packDepthToRGBA( dp );\\r\\n}\",\r\n\t\t\t\"vertex\": \"precision mediump float;  \\r\\n\\r\\nattribute vec3 a_position;\\r\\n\\r\\n#include<uv_pars_vert>\\r\\n\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\n#include<skeleton_pars_vert>\\r\\n#include<particle_pars_vert>\\r\\n\\r\\nvarying vec3 v_worldPosition;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    vec4 position = vec4(a_position, 1.0);\\r\\n\\r\\n    #include<uv_vert>\\r\\n\\r\\n    #include<skeleton_vert>\\r\\n    #include<particle_vert>\\r\\n\\r\\n    vec4 worldPosition = u_modelMatrix * position;\\r\\n    gl_Position = u_viewProjection * worldPosition;\\r\\n    v_worldPosition = worldPosition.xyz;\\r\\n}\"\r\n\t\t},\r\n\t\t\"skybox\": {\r\n\t\t\t\"fragment\": \"precision highp float;\\r\\n\\r\\nuniform samplerCube s_skyboxTexture;\\r\\nuniform vec3 u_cameraPos;\\r\\n\\r\\nvarying vec3 v_worldPos;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec3 cameraDir = normalize(u_cameraPos.xyz - v_worldPos);\\r\\n    gl_FragColor = textureCube(s_skyboxTexture, -cameraDir);\\r\\n}\",\r\n\t\t\t\"vertex\": \"attribute vec3 a_position;\\r\\n\\r\\nuniform vec3 u_cameraPos;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\nuniform float u_skyBoxSize;\\r\\n\\r\\nvarying vec3 v_worldPos;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec3 worldPos = a_position.xyz * u_skyBoxSize + u_cameraPos.xyz;\\r\\n    gl_Position = u_viewProjection * vec4(worldPos.xyz, 1.0);\\r\\n    v_worldPos = worldPos;\\r\\n}\"\r\n\t\t},\r\n\t\t\"standard\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\nvarying vec3 v_worldPosition;\\r\\nuniform vec3 u_cameraPos;\\r\\n\\r\\n#include<color_pars_frag>\\r\\n\\r\\n#include<normal_pars_frag>\\r\\n#include<diffuse_pars_frag>\\r\\n#include<alphatest_pars_frag>\\r\\n\\r\\n#include<ambient_pars_frag>\\r\\n#include<specular_pars_frag>\\r\\n#include<lights_pars_frag>\\r\\n\\r\\n#include<envmap_pars_frag>\\r\\n#include<particle_pars_frag>\\r\\n#include<fog_pars_frag>\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec4 finalColor = vec4(1.0,1.0,1.0,1.0);\\r\\n\\r\\n    #include<color_frag>\\r\\n\\r\\n    #include<normal_frag>\\r\\n    #include<diffuse_frag>\\r\\n    #include<alphatest_frag>\\r\\n\\r\\n    #include<ambient_frag>\\r\\n    #include<specular_frag>\\r\\n    #include<lights_frag>\\r\\n\\r\\n    #include<envmap_frag>\\r\\n    #include<particle_frag>\\r\\n    #include<fog_frag>\\r\\n\\r\\n    gl_FragColor = finalColor;\\r\\n}\",\r\n\t\t\t\"vertex\": \"precision mediump float;  \\r\\n\\r\\n#include<position_pars_vert>\\r\\n#include<normal_pars_vert>\\r\\n#include<tangent_pars_vert>\\r\\n#include<color_pars_vert>\\r\\n//\\r\\n#include<skeleton_pars_vert>\\r\\n#include<particle_pars_vert>\\r\\n//\\r\\n#include<worldposition_pars_vert>\\r\\n#include<project_pars_vert>\\r\\n//\\r\\n#include<uv_pars_vert>\\r\\n#include<normalmap_pars_vert>\\r\\n//\\r\\n#include<lights_pars_vert>\\r\\n#include<pointsize_pars_vert>\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    // 初始化\\r\\n    #include<position_vert>\\r\\n    #include<normal_vert>\\r\\n    #include<tangent_vert>\\r\\n    #include<color_vert>\\r\\n    #include<uv_vert>\\r\\n    // 动画\\r\\n    #include<skeleton_vert>\\r\\n    #include<particle_vert>\\r\\n    // 投影\\r\\n    #include<worldposition_vert>\\r\\n    #include<project_vert>\\r\\n    // \\r\\n    #include<normalmap_vert>\\r\\n    //\\r\\n    #include<lights_vert>\\r\\n    #include<pointsize_vert>\\r\\n}\"\r\n\t\t},\r\n\t\t\"terrain\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\nvarying vec3 v_worldPosition;\\r\\nuniform vec3 u_cameraPos;\\r\\n\\r\\n#include<normal_pars_frag>\\r\\n#include<diffuse_pars_frag>\\r\\n#include<alphatest_pars_frag>\\r\\n\\r\\n#include<terrain_pars_frag>\\r\\n\\r\\n#include<ambient_pars_frag>\\r\\n#include<specular_pars_frag>\\r\\n#include<lights_pars_frag>\\r\\n\\r\\n#include<envmap_pars_frag>\\r\\n#include<fog_pars_frag>\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec4 finalColor = vec4(1.0, 1.0, 1.0, 1.0);\\r\\n\\r\\n    #include<normal_frag>\\r\\n    #include<diffuse_frag>\\r\\n    #include<alphatest_frag>\\r\\n\\r\\n    #include<terrain_frag>\\r\\n\\r\\n    #include<ambient_frag>\\r\\n    #include<specular_frag>\\r\\n    #include<lights_frag>\\r\\n\\r\\n    #include<envmap_frag>\\r\\n    #include<fog_frag>\\r\\n\\r\\n    gl_FragColor = finalColor;\\r\\n}\",\r\n\t\t\t\"vertex\": \"precision mediump float;  \\r\\n\\r\\n#include<position_pars_vert>\\r\\n#include<normal_pars_vert>\\r\\n#include<tangent_pars_vert>\\r\\n#include<uv_pars_vert>\\r\\n//\\r\\n#include<worldposition_pars_vert>\\r\\n#include<project_pars_vert>\\r\\n//\\r\\n#include<normalmap_pars_vert>\\r\\n//\\r\\n#include<lights_pars_vert>\\r\\n#include<pointsize_pars_vert>\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    // 初始化\\r\\n    #include<position_vert>\\r\\n    #include<normal_vert>\\r\\n    #include<tangent_vert>\\r\\n    #include<uv_vert>\\r\\n    // 投影\\r\\n    #include<worldposition_vert>\\r\\n    #include<project_vert>\\r\\n    // \\r\\n    #include<normalmap_vert>\\r\\n    //\\r\\n    #include<lights_vert>\\r\\n    #include<pointsize_vert>\\r\\n}\"\r\n\t\t},\r\n\t\t\"texture\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nuniform sampler2D s_texture;\\r\\nvarying vec2 v_uv;\\r\\n\\r\\nuniform vec4 u_color;\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n    vec4 color = texture2D(s_texture, v_uv);\\r\\n    gl_FragColor = color * u_color;\\r\\n}\\r\\n\",\r\n\t\t\t\"vertex\": \"attribute vec3 a_position;\\r\\nattribute vec2 a_uv;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    gl_Position = u_viewProjection * u_modelMatrix * vec4(a_position, 1.0);\\r\\n    v_uv = a_uv;\\r\\n}\"\r\n\t\t},\r\n\t\t\"water\": {\r\n\t\t\t\"fragment\": \"precision mediump float;  \\r\\n\\r\\nuniform vec3 u_cameraPos;\\r\\n\\r\\nvarying vec4 v_mirrorCoord;\\r\\nvarying vec4 v_worldPosition;\\r\\n\\r\\nuniform sampler2D s_mirrorSampler;\\r\\nuniform sampler2D s_normalSampler;\\r\\n\\r\\nuniform float u_alpha;\\r\\nuniform float u_time;\\r\\nuniform float u_size;\\r\\nuniform float u_distortionScale;\\r\\nuniform vec3 u_sunColor;\\r\\nuniform vec3 u_sunDirection;\\r\\nuniform vec3 u_waterColor;\\r\\n\\r\\nvec4 getNoise( vec2 uv ) \\r\\n{\\r\\n\\tvec2 uv0 = ( uv / 103.0 ) + vec2(u_time / 17.0, u_time / 29.0);\\r\\n\\tvec2 uv1 = uv / 107.0-vec2( u_time / -19.0, u_time / 31.0 );\\r\\n\\tvec2 uv2 = uv / vec2( 8907.0, 9803.0 ) + vec2( u_time / 101.0, u_time / 97.0 );\\r\\n\\tvec2 uv3 = uv / vec2( 1091.0, 1027.0 ) - vec2( u_time / 109.0, u_time / -113.0 );\\r\\n\\tvec4 noise = texture2D( s_normalSampler, uv0 ) +\\r\\n\\t\\ttexture2D( s_normalSampler, uv1 ) +\\r\\n\\t\\ttexture2D( s_normalSampler, uv2 ) +\\r\\n\\t\\ttexture2D( s_normalSampler, uv3 );\\r\\n\\treturn noise * 0.5 - 1.0;\\r\\n}\\r\\n\\r\\nvoid sunLight( const vec3 surfaceNormal, const vec3 eyeDirection, float shiny, float spec, float diffuse, inout vec3 diffuseColor, inout vec3 specularColor ) \\r\\n{\\r\\n\\tvec3 reflection = normalize( reflect( -u_sunDirection, surfaceNormal ) );\\r\\n\\tfloat direction = max( 0.0, dot( eyeDirection, reflection ) );\\r\\n\\tspecularColor += pow( direction, shiny ) * u_sunColor * spec;\\r\\n\\tdiffuseColor += max( dot( u_sunDirection, surfaceNormal ), 0.0 ) * u_sunColor * diffuse;\\r\\n}\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n\\tvec4 noise = getNoise( v_worldPosition.xz * u_size );\\r\\n\\tvec3 surfaceNormal = normalize( noise.xzy * vec3( 1.5, 1.0, 1.5 ) );\\r\\n\\tvec3 diffuseLight = vec3(0.0);\\r\\n\\tvec3 specularLight = vec3(0.0);\\r\\n\\tvec3 worldToEye = u_cameraPos-v_worldPosition.xyz;\\r\\n\\tvec3 eyeDirection = normalize( worldToEye );\\r\\n\\tsunLight( surfaceNormal, eyeDirection, 100.0, 2.0, 0.5, diffuseLight, specularLight );\\r\\n\\tfloat distance = length(worldToEye);\\r\\n\\tvec2 distortion = surfaceNormal.xz * ( 0.001 + 1.0 / distance ) * u_distortionScale;\\r\\n\\tvec3 reflectionSample = vec3( texture2D( s_mirrorSampler, v_mirrorCoord.xy / v_mirrorCoord.z + distortion ) );\\r\\n\\tfloat theta = max( dot( eyeDirection, surfaceNormal ), 0.0 );\\r\\n\\tfloat rf0 = 0.3;\\r\\n\\tfloat reflectance = rf0 + ( 1.0 - rf0 ) * pow( ( 1.0 - theta ), 5.0 );\\r\\n\\tvec3 scatter = max( 0.0, dot( surfaceNormal, eyeDirection ) ) * u_waterColor;\\r\\n\\r\\n\\tfloat shadowMask = 1.0;\\r\\n\\t// float shadowMask = getShadowMask();\\r\\n\\r\\n\\tvec3 albedo = mix( ( u_sunColor * diffuseLight * 0.3 + scatter ) * shadowMask, ( vec3( 0.1 ) + reflectionSample * 0.9 + reflectionSample * specularLight ), reflectance);\\r\\n\\tvec3 outgoingLight = albedo;\\r\\n\\tgl_FragColor = vec4( outgoingLight, u_alpha );\\r\\n\\r\\n\\t// debug\\r\\n\\t// gl_FragColor = texture2D( s_mirrorSampler, (v_mirrorCoord.xy / v_mirrorCoord.z + 1.0) / 2.0 );\\r\\n\\t// gl_FragColor = vec4( reflectionSample, 1.0 );\\r\\n\\t// gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\r\\n}\",\r\n\t\t\t\"vertex\": \"attribute vec3 a_position;\\r\\n\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\nuniform mat4 u_textureMatrix;\\r\\n\\r\\nvarying vec4 v_mirrorCoord;\\r\\nvarying vec4 v_worldPosition;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n\\tvec4 position = vec4(a_position, 1.0);\\r\\n\\t//获取全局坐标\\r\\n    vec4 worldPosition = u_modelMatrix * position;\\r\\n    //计算投影坐标\\r\\n    gl_Position = u_viewProjection * worldPosition;\\r\\n\\t\\r\\n\\tv_worldPosition = worldPosition;\\r\\n\\tv_mirrorCoord = u_textureMatrix * worldPosition;\\r\\n}\"\r\n\t\t},\r\n\t\t\"wireframe\": {\r\n\t\t\t\"fragment\": \"precision mediump float;\\r\\n\\r\\nuniform vec4 u_wireframeColor;\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    gl_FragColor = u_wireframeColor;\\r\\n}\",\r\n\t\t\t\"vertex\": \"precision mediump float;  \\r\\n\\r\\nattribute vec3 a_position;\\r\\nattribute vec4 a_color;\\r\\n\\r\\n#include<uv_pars_vert>\\r\\n\\r\\nuniform mat4 u_modelMatrix;\\r\\nuniform mat4 u_viewProjection;\\r\\n\\r\\n#include<skeleton_pars_vert>\\r\\n#include<particle_pars_vert>\\r\\n\\r\\nvoid main() \\r\\n{\\r\\n    vec4 position = vec4(a_position, 1.0);\\r\\n\\r\\n    #include<uv_vert>\\r\\n\\r\\n    #include<skeleton_vert>\\r\\n    #include<particle_vert>\\r\\n\\r\\n    gl_Position = u_viewProjection * u_modelMatrix * position;\\r\\n}\"\r\n\t\t}\r\n\t},\r\n\t\"modules\": {\r\n\t\t\"alphatest_frag\": \"if(diffuseColor.w < u_alphaThreshold) discard;\",\r\n\t\t\"alphatest_pars_frag\": \"uniform float u_alphaThreshold;\",\r\n\t\t\"ambient_frag\": \"//环境光\\r\\nvec3 ambientColor = u_ambient.w * u_ambient.xyz * u_sceneAmbientColor.xyz * u_sceneAmbientColor.w;\\r\\nambientColor = ambientColor * texture2D(s_ambient, v_uv).xyz;\",\r\n\t\t\"ambient_pars_frag\": \"uniform vec4 u_sceneAmbientColor;\\r\\n\\r\\n//环境\\r\\nuniform vec4 u_ambient;\\r\\nuniform sampler2D s_ambient;\",\r\n\t\t\"cartoon_pars_frag\": \"#ifdef IS_CARTOON\\r\\n    #ifdef cartoon_Anti_aliasing\\r\\n        #extension GL_OES_standard_derivatives : enable\\r\\n    #endif\\r\\n\\r\\n    uniform vec4 u_diffuseSegment;\\r\\n    uniform vec4 u_diffuseSegmentValue;\\r\\n    uniform float u_specularSegment;\\r\\n\\r\\n    //漫反射\\r\\n    float cartoonLightDiffuse(vec3 normal,vec3 lightDir)\\r\\n    {\\r\\n        float diff = dot(normal, lightDir);\\r\\n        diff = diff * 0.5 + 0.5;\\r\\n\\r\\n        #ifdef cartoon_Anti_aliasing\\r\\n            float w = fwidth(diff) * 2.0;\\r\\n            if (diff < u_diffuseSegment.x + w) \\r\\n            {\\r\\n                diff = mix(u_diffuseSegment.x, u_diffuseSegment.y, smoothstep(u_diffuseSegment.x - w, u_diffuseSegment.x + w, diff));\\r\\n            //  diff = mix(u_diffuseSegment.x, u_diffuseSegment.y, clamp(0.5 * (diff - u_diffuseSegment.x) / w, 0, 1));\\r\\n            } else if (diff < u_diffuseSegment.y + w) \\r\\n            {\\r\\n                diff = mix(u_diffuseSegment.y, u_diffuseSegment.z, smoothstep(u_diffuseSegment.y - w, u_diffuseSegment.y + w, diff));\\r\\n            //  diff = mix(u_diffuseSegment.y, u_diffuseSegment.z, clamp(0.5 * (diff - u_diffuseSegment.y) / w, 0, 1));\\r\\n            } else if (diff < u_diffuseSegment.z + w) \\r\\n            {\\r\\n                diff = mix(u_diffuseSegment.z, u_diffuseSegment.w, smoothstep(u_diffuseSegment.z - w, u_diffuseSegment.z + w, diff));\\r\\n            //  diff = mix(u_diffuseSegment.z, u_diffuseSegment.w, clamp(0.5 * (diff - u_diffuseSegment.z) / w, 0, 1));\\r\\n            } else \\r\\n            {\\r\\n                diff = u_diffuseSegment.w;\\r\\n            }\\r\\n        #else\\r\\n            if (diff < u_diffuseSegment.x) \\r\\n            {\\r\\n                diff = u_diffuseSegmentValue.x;\\r\\n            } else if (diff < u_diffuseSegment.y) \\r\\n            {\\r\\n                diff = u_diffuseSegmentValue.y;\\r\\n            } else if (diff < u_diffuseSegment.z) \\r\\n            {\\r\\n                diff = u_diffuseSegmentValue.z;\\r\\n            } else \\r\\n            {\\r\\n                diff = u_diffuseSegmentValue.w;\\r\\n            }\\r\\n        #endif\\r\\n\\r\\n        return diff;\\r\\n    }\\r\\n\\r\\n    //镜面反射漫反射\\r\\n    float cartoonLightSpecular(vec3 normal,vec3 lightDir,vec3 cameraDir,float glossiness)\\r\\n    {\\r\\n        vec3 halfVec = normalize(lightDir + cameraDir);\\r\\n        float specComp = max(dot(normal,halfVec),0.0);\\r\\n        specComp = pow(specComp, glossiness);\\r\\n\\r\\n        #ifdef cartoon_Anti_aliasing\\r\\n            float w = fwidth(specComp);\\r\\n            if (specComp < u_specularSegment + w) \\r\\n            {\\r\\n                specComp = mix(0.0, 1.0, smoothstep(u_specularSegment - w, u_specularSegment + w, specComp));\\r\\n                // specComp = smoothstep(u_specularSegment - w, u_specularSegment + w, specComp);\\r\\n            } else \\r\\n            {\\r\\n                specComp = 1.0;\\r\\n            }\\r\\n        #else\\r\\n            if(specComp < u_specularSegment)\\r\\n            {\\r\\n                specComp = 0.0;\\r\\n            }else\\r\\n            {\\r\\n                specComp = 1.0;\\r\\n            }\\r\\n        #endif\\r\\n\\r\\n        return specComp;\\r\\n    }\\r\\n#endif\",\r\n\t\t\"color_frag\": \"#ifdef HAS_a_color\\r\\nfinalColor = v_color * finalColor;\\r\\n#endif\\r\\n\",\r\n\t\t\"color_pars_frag\": \"#ifdef HAS_a_color\\r\\nvarying vec4 v_color;\\r\\n#endif\\r\\n\",\r\n\t\t\"color_pars_vert\": \"#ifdef HAS_a_color\\r\\nattribute vec4 a_color;\\r\\n\\r\\nvarying vec4 v_color;\\r\\n#endif\\r\\n\",\r\n\t\t\"color_vert\": \"#ifdef HAS_a_color\\r\\nv_color = a_color;\\r\\n#endif\",\r\n\t\t\"diffuse_frag\": \"//获取漫反射基本颜色\\r\\nvec4 diffuseColor = u_diffuse;\\r\\ndiffuseColor = finalColor * diffuseColor * texture2D(s_diffuse, v_uv);\\r\\n\\r\\nfinalColor = diffuseColor;\",\r\n\t\t\"diffuse_pars_frag\": \"//漫反射\\r\\nuniform vec4 u_diffuse;\\r\\nuniform sampler2D s_diffuse;\",\r\n\t\t\"envmap_frag\": \"finalColor = envmapMethod(finalColor);\",\r\n\t\t\"envmap_pars_frag\": \"uniform samplerCube s_envMap;\\r\\nuniform float u_reflectivity;\\r\\n\\r\\nvec4 envmapMethod(vec4 finalColor)\\r\\n{\\r\\n    vec3 cameraToVertex = normalize( v_worldPosition - u_cameraPos );\\r\\n    vec3 reflectVec = reflect( cameraToVertex, v_normal );\\r\\n    vec4 envColor = textureCube( s_envMap, reflectVec );\\r\\n    finalColor.xyz *= envColor.xyz * u_reflectivity;\\r\\n    return finalColor;\\r\\n}\",\r\n\t\t\"fog_frag\": \"finalColor = fogMethod(finalColor);\",\r\n\t\t\"fog_pars_frag\": \"#define FOGMODE_NONE    0.\\r\\n#define FOGMODE_EXP     1.\\r\\n#define FOGMODE_EXP2    2.\\r\\n#define FOGMODE_LINEAR  3.\\r\\n#define E 2.71828\\r\\n\\r\\nuniform float u_fogMode;\\r\\nuniform float u_fogMinDistance;\\r\\nuniform float u_fogMaxDistance;\\r\\nuniform float u_fogDensity;\\r\\nuniform vec3 u_fogColor;\\r\\n\\r\\nfloat CalcFogFactor(float fogDistance)\\r\\n{\\r\\n\\tfloat fogCoeff = 1.0;\\r\\n\\tif (FOGMODE_LINEAR == u_fogMode)\\r\\n\\t{\\r\\n\\t\\tfogCoeff = (u_fogMaxDistance - fogDistance) / (u_fogMaxDistance - u_fogMinDistance);\\r\\n\\t}\\r\\n\\telse if (FOGMODE_EXP == u_fogMode)\\r\\n\\t{\\r\\n\\t\\tfogCoeff = 1.0 / pow(E, fogDistance * u_fogDensity);\\r\\n\\t}\\r\\n\\telse if (FOGMODE_EXP2 == u_fogMode)\\r\\n\\t{\\r\\n\\t\\tfogCoeff = 1.0 / pow(E, fogDistance * fogDistance * u_fogDensity * u_fogDensity);\\r\\n\\t}\\r\\n\\r\\n\\treturn clamp(fogCoeff, 0.0, 1.0);\\r\\n}\\r\\n\\r\\nvec4 fogMethod(vec4 color)\\r\\n{\\r\\n    vec3 fogDistance = u_cameraPos - v_worldPosition.xyz;\\r\\n\\tfloat fog = CalcFogFactor(length(fogDistance));\\r\\n\\tcolor.rgb = fog * color.rgb + (1.0 - fog) * u_fogColor;\\r\\n    return color;\\r\\n}\",\r\n\t\t\"lights_frag\": \"//渲染灯光\\r\\n#if NUM_LIGHT > 0\\r\\n    finalColor.xyz = lightShading(normal, diffuseColor.xyz, specularColor, ambientColor, glossiness);\\r\\n#endif\",\r\n\t\t\"lights_pars_frag\": \"#if NUM_POINTLIGHT > 0\\r\\n    // 点光源\\r\\n    struct PointLight\\r\\n    {\\r\\n        // 位置\\r\\n        vec3 position;\\r\\n        // 颜色\\r\\n        vec3 color;\\r\\n        // 强度\\r\\n        float intensity;\\r\\n        // 范围\\r\\n        float range;\\r\\n    };\\r\\n    // 点光源列表\\r\\n    uniform PointLight u_pointLights[NUM_POINTLIGHT];\\r\\n#endif\\r\\n\\r\\n#if NUM_SPOT_LIGHTS > 0\\r\\n    // 聚光灯\\r\\n    struct SpotLight\\r\\n    {\\r\\n        // 位置\\r\\n        vec3 position;\\r\\n        // 颜色\\r\\n        vec3 color;\\r\\n        // 强度\\r\\n        float intensity;\\r\\n        // 范围\\r\\n        float range;\\r\\n        // 方向\\r\\n        vec3 direction;\\r\\n        // 椎体cos值\\r\\n        float coneCos;\\r\\n        // 半影cos\\r\\n        float penumbraCos;\\r\\n    };\\r\\n    // 方向光源列表\\r\\n    uniform SpotLight u_spotLights[ NUM_SPOT_LIGHTS ];\\r\\n#endif\\r\\n\\r\\n#if NUM_DIRECTIONALLIGHT > 0\\r\\n    // 方向光源\\r\\n    struct DirectionalLight\\r\\n    {\\r\\n        // 方向\\r\\n        vec3 direction;\\r\\n        // 颜色\\r\\n        vec3 color;\\r\\n        // 强度\\r\\n        float intensity;\\r\\n    };\\r\\n    // 方向光源列表\\r\\n    uniform DirectionalLight u_directionalLights[ NUM_DIRECTIONALLIGHT ];\\r\\n#endif\\r\\n\\r\\n//卡通\\r\\n#include<cartoon_pars_frag>\\r\\n\\r\\n#include<shadowmap_pars_frag>\\r\\n\\r\\n//计算光照漫反射系数\\r\\nfloat calculateLightDiffuse(vec3 normal,vec3 lightDir)\\r\\n{\\r\\n    #ifdef IS_CARTOON\\r\\n        return cartoonLightDiffuse(normal,lightDir);\\r\\n    #else\\r\\n        return clamp(dot(normal,lightDir),0.0,1.0);\\r\\n    #endif\\r\\n}\\r\\n\\r\\n//计算光照镜面反射系数\\r\\nfloat calculateLightSpecular(vec3 normal,vec3 lightDir,vec3 viewDir,float glossiness)\\r\\n{\\r\\n    #ifdef IS_CARTOON\\r\\n        return cartoonLightSpecular(normal,lightDir,viewDir,glossiness);\\r\\n    #else\\r\\n        vec3 halfVec = normalize(lightDir + viewDir);\\r\\n        float specComp = max(dot(normal,halfVec),0.0);\\r\\n        specComp = pow(specComp, glossiness);\\r\\n\\r\\n        return specComp;\\r\\n    #endif\\r\\n}\\r\\n\\r\\n//根据距离计算衰减\\r\\nfloat computeDistanceLightFalloff(float lightDistance, float range)\\r\\n{\\r\\n    #ifdef USEPHYSICALLIGHTFALLOFF\\r\\n        float lightDistanceFalloff = 1.0 / ((lightDistance * lightDistance + 0.0001));\\r\\n    #else\\r\\n        float lightDistanceFalloff = max(0., 1.0 - lightDistance / range);\\r\\n    #endif\\r\\n    \\r\\n    return lightDistanceFalloff;\\r\\n}\\r\\n\\r\\n//渲染点光源\\r\\nvec3 lightShading(vec3 normal, vec3 diffuseColor, vec3 specularColor, vec3 ambientColor, float glossiness)\\r\\n{\\r\\n    //视线方向\\r\\n    vec3 viewDir = normalize(u_cameraPos - v_worldPosition);\\r\\n\\r\\n    vec3 resultColor = vec3(0.0,0.0,0.0);\\r\\n    \\r\\n    #if NUM_POINTLIGHT > 0\\r\\n        PointLight pointLight;\\r\\n        for(int i = 0;i<NUM_POINTLIGHT;i++)\\r\\n        {\\r\\n            pointLight = u_pointLights[i];\\r\\n            //\\r\\n            vec3 lightOffset = pointLight.position - v_worldPosition;\\r\\n            //光照方向\\r\\n            vec3 lightDir = normalize(lightOffset);\\r\\n            //灯光颜色\\r\\n            vec3 lightColor = pointLight.color;\\r\\n            //灯光强度\\r\\n            float lightIntensity = pointLight.intensity;\\r\\n            float falloff = computeDistanceLightFalloff(length(lightOffset), pointLight.range);\\r\\n            float diffuse = calculateLightDiffuse(normal, lightDir);\\r\\n            float specular = calculateLightSpecular(normal, lightDir, viewDir, glossiness);\\r\\n            float shadow = 1.0;\\r\\n            \\r\\n            resultColor += (diffuse * diffuseColor + specular * specularColor) * lightColor * lightIntensity * falloff * shadow;\\r\\n        }\\r\\n    #endif\\r\\n\\r\\n    #if NUM_POINTLIGHT_CASTSHADOW > 0\\r\\n        CastShadowPointLight castShadowPointLight;\\r\\n        for(int i = 0;i<NUM_POINTLIGHT_CASTSHADOW;i++)\\r\\n        {\\r\\n            castShadowPointLight = u_castShadowPointLights[i];\\r\\n            //\\r\\n            vec3 lightOffset = castShadowPointLight.position - v_worldPosition;\\r\\n            //光照方向\\r\\n            vec3 lightDir = normalize(lightOffset);\\r\\n            //灯光颜色\\r\\n            vec3 lightColor = castShadowPointLight.color;\\r\\n            //灯光强度\\r\\n            float lightIntensity = castShadowPointLight.intensity;\\r\\n            float falloff = computeDistanceLightFalloff(length(lightOffset), castShadowPointLight.range);\\r\\n            // 计算阴影\\r\\n            float shadow = getPointShadow( u_pointShadowMaps[ i ], castShadowPointLight.shadowType, castShadowPointLight.shadowMapSize, castShadowPointLight.shadowBias, castShadowPointLight.shadowRadius, -lightOffset, castShadowPointLight.shadowCameraNear, castShadowPointLight.shadowCameraFar );\\r\\n            float diffuse = calculateLightDiffuse(normal, lightDir);\\r\\n            float specular = calculateLightSpecular(normal, lightDir, viewDir, glossiness);\\r\\n            //\\r\\n            resultColor += (diffuse * diffuseColor + specular * specularColor) * lightColor * lightIntensity * falloff * shadow;\\r\\n        }\\r\\n    #endif\\r\\n\\r\\n    #if NUM_SPOT_LIGHTS > 0\\r\\n        SpotLight spotLight;\\r\\n        for(int i = 0; i < NUM_SPOT_LIGHTS; i++)\\r\\n        {\\r\\n            spotLight = u_spotLights[i];\\r\\n            //\\r\\n            vec3 lightOffset = spotLight.position - v_worldPosition;\\r\\n            //光照方向\\r\\n            vec3 lightDir = normalize(lightOffset);\\r\\n            float angleCos = dot(lightDir, -spotLight.direction);\\r\\n            if(angleCos > spotLight.coneCos)\\r\\n            {\\r\\n                float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\r\\n                \\r\\n                //灯光颜色\\r\\n                vec3 lightColor = spotLight.color;\\r\\n                //灯光强度\\r\\n                float lightIntensity = spotLight.intensity;\\r\\n                float falloff = computeDistanceLightFalloff(length(lightOffset) * angleCos, spotLight.range);\\r\\n                float diffuse = calculateLightDiffuse(normal, lightDir);\\r\\n                float specular = calculateLightSpecular(normal, lightDir, viewDir, glossiness);\\r\\n                float shadow = 1.0;\\r\\n                \\r\\n                resultColor += (diffuse * diffuseColor + specular * specularColor) * lightColor * lightIntensity * falloff * shadow * spotEffect;\\r\\n            }            \\r\\n        }\\r\\n    #endif\\r\\n    \\r\\n    #if NUM_SPOT_LIGHTS_CASTSHADOW > 0\\r\\n        CastShadowSpotLight castShadowSpotLight;\\r\\n        for(int i = 0; i < NUM_SPOT_LIGHTS_CASTSHADOW; i++)\\r\\n        {\\r\\n            castShadowSpotLight = u_castShadowSpotLights[i];\\r\\n            //\\r\\n            vec3 lightOffset = castShadowSpotLight.position - v_worldPosition;\\r\\n            //光照方向\\r\\n            vec3 lightDir = normalize(lightOffset);\\r\\n            float angleCos = dot(lightDir, -castShadowSpotLight.direction);\\r\\n            if(angleCos > castShadowSpotLight.coneCos)\\r\\n            {\\r\\n                float spotEffect = smoothstep( castShadowSpotLight.coneCos, castShadowSpotLight.penumbraCos, angleCos );\\r\\n                \\r\\n                //灯光颜色\\r\\n                vec3 lightColor = castShadowSpotLight.color;\\r\\n                //灯光强度\\r\\n                float lightIntensity = castShadowSpotLight.intensity;\\r\\n                float falloff = computeDistanceLightFalloff(length(lightOffset) * angleCos, castShadowSpotLight.range);\\r\\n                float diffuse = calculateLightDiffuse(normal, lightDir);\\r\\n                float specular = calculateLightSpecular(normal, lightDir, viewDir, glossiness);\\r\\n                // 计算阴影\\r\\n                float shadow = getShadow( u_spotShadowMaps[i], castShadowSpotLight.shadowType, castShadowSpotLight.shadowMapSize, castShadowSpotLight.shadowBias, castShadowSpotLight.shadowRadius, v_spotShadowCoord[ i ], -lightOffset, castShadowSpotLight.shadowCameraNear, castShadowSpotLight.shadowCameraFar);\\r\\n                \\r\\n                resultColor += (diffuse * diffuseColor + specular * specularColor) * lightColor * lightIntensity * falloff * shadow * spotEffect;\\r\\n            }            \\r\\n        }\\r\\n    #endif\\r\\n\\r\\n    #if NUM_DIRECTIONALLIGHT > 0\\r\\n        DirectionalLight directionalLight;\\r\\n        for(int i = 0;i<NUM_DIRECTIONALLIGHT;i++)\\r\\n        {\\r\\n            directionalLight = u_directionalLights[i];\\r\\n            //光照方向\\r\\n            vec3 lightDir = normalize(-directionalLight.direction);\\r\\n            //灯光颜色\\r\\n            vec3 lightColor = directionalLight.color;\\r\\n            //灯光强度\\r\\n            float lightIntensity = directionalLight.intensity;\\r\\n\\r\\n            float falloff = 1.0;\\r\\n            float diffuse = calculateLightDiffuse(normal, lightDir);\\r\\n            float specular = calculateLightSpecular(normal, lightDir, viewDir, glossiness);\\r\\n            float shadow = 1.0;\\r\\n            //\\r\\n            resultColor += (diffuse * diffuseColor + specular * specularColor) * lightColor * lightIntensity * falloff * shadow;\\r\\n        }\\r\\n    #endif\\r\\n\\r\\n    #if NUM_DIRECTIONALLIGHT_CASTSHADOW > 0\\r\\n        CastShadowDirectionalLight castShadowDirectionalLight;\\r\\n        for(int i = 0;i<NUM_DIRECTIONALLIGHT_CASTSHADOW;i++)\\r\\n        {\\r\\n            castShadowDirectionalLight = u_castShadowDirectionalLights[i];\\r\\n            //\\r\\n            vec3 lightOffset = castShadowDirectionalLight.position - v_worldPosition;\\r\\n            //光照方向\\r\\n            vec3 lightDir = normalize(-castShadowDirectionalLight.direction);\\r\\n            //灯光颜色\\r\\n            vec3 lightColor = castShadowDirectionalLight.color;\\r\\n            //灯光强度\\r\\n            float lightIntensity = castShadowDirectionalLight.intensity;\\r\\n            // 计算阴影\\r\\n            float shadow = getShadow( u_directionalShadowMaps[i], castShadowDirectionalLight.shadowType, castShadowDirectionalLight.shadowMapSize, castShadowDirectionalLight.shadowBias, castShadowDirectionalLight.shadowRadius, v_directionalShadowCoord[ i ], -lightOffset, castShadowDirectionalLight.shadowCameraNear, castShadowDirectionalLight.shadowCameraFar);\\r\\n            \\r\\n            float falloff = 1.0;\\r\\n            float diffuse = calculateLightDiffuse(normal, lightDir);\\r\\n            float specular = calculateLightSpecular(normal, lightDir, viewDir, glossiness);\\r\\n            //\\r\\n            resultColor += (diffuse * diffuseColor + specular * specularColor) * lightColor * lightIntensity * falloff * shadow;\\r\\n        }\\r\\n    #endif\\r\\n\\r\\n    resultColor += ambientColor * diffuseColor;\\r\\n    return resultColor;\\r\\n}\",\r\n\t\t\"lights_pars_vert\": \"// 灯光声明\\r\\n\\r\\n#if NUM_DIRECTIONALLIGHT_CASTSHADOW > 0\\r\\n    // 方向光源投影矩阵列表\\r\\n    uniform mat4 u_directionalShadowMatrixs[ NUM_DIRECTIONALLIGHT_CASTSHADOW ];\\r\\n    // 方向光源投影uv列表\\r\\n    varying vec4 v_directionalShadowCoord[ NUM_DIRECTIONALLIGHT_CASTSHADOW ];\\r\\n#endif\\r\\n\\r\\n#if NUM_SPOT_LIGHTS_CASTSHADOW > 0\\r\\n    // 聚光灯投影矩阵列表\\r\\n    uniform mat4 u_spotShadowMatrix[ NUM_SPOT_LIGHTS_CASTSHADOW ];\\r\\n    // 聚光灯投影uv列表\\r\\n    varying vec4 v_spotShadowCoord[ NUM_SPOT_LIGHTS_CASTSHADOW ];\\r\\n#endif\",\r\n\t\t\"lights_vert\": \"#if NUM_DIRECTIONALLIGHT_CASTSHADOW > 0\\r\\n    for ( int i = 0; i < NUM_DIRECTIONALLIGHT_CASTSHADOW; i ++ ) \\r\\n    {\\r\\n        v_directionalShadowCoord[ i ] = u_directionalShadowMatrixs[ i ] * worldPosition;\\r\\n    }\\r\\n#endif\\r\\n\\r\\n#if NUM_SPOT_LIGHTS_CASTSHADOW > 0\\r\\n    for ( int i = 0; i < NUM_SPOT_LIGHTS_CASTSHADOW; i ++ ) \\r\\n    {\\r\\n        v_spotShadowCoord[ i ] = u_spotShadowMatrix[ i ] * worldPosition;\\r\\n    }\\r\\n#endif\",\r\n\t\t\"normalmap_pars_vert\": \"uniform mat4 u_ITModelMatrix;\\r\\n\\r\\nvarying vec3 v_normal;\\r\\nvarying vec3 v_tangent;\\r\\nvarying vec3 v_bitangent;\",\r\n\t\t\"normalmap_vert\": \"//计算法线\\r\\nv_normal = normalize((u_ITModelMatrix * vec4(normal, 0.0)).xyz);\\r\\nv_tangent = normalize((u_modelMatrix * vec4(tangent, 0.0)).xyz);\\r\\nv_bitangent = cross(v_normal, v_tangent);\",\r\n\t\t\"normal_frag\": \"//获取法线\\r\\nvec3 normal = texture2D(s_normal,v_uv).xyz * 2.0 - 1.0;\\r\\nnormal = normalize(normal.x * v_tangent + normal.y * v_bitangent + normal.z * v_normal);\",\r\n\t\t\"normal_pars_frag\": \"varying vec3 v_normal;\\r\\nvarying vec3 v_tangent;\\r\\nvarying vec3 v_bitangent;\\r\\n\\r\\n//法线贴图\\r\\nuniform sampler2D s_normal;\",\r\n\t\t\"normal_pars_vert\": \"attribute vec3 a_normal;\",\r\n\t\t\"normal_vert\": \"vec3 normal = a_normal;\",\r\n\t\t\"particle_frag\": \"#ifdef HAS_PARTICLE_ANIMATOR\\r\\n    finalColor = particleAnimation(finalColor);\\r\\n#endif\",\r\n\t\t\"particle_pars_frag\": \"#ifdef HAS_PARTICLE_ANIMATOR\\r\\n    varying vec4 v_particle_color;\\r\\n\\r\\n    vec4 particleAnimation(vec4 color) {\\r\\n\\r\\n        color.xyz = color.xyz * v_particle_color.xyz;\\r\\n        color.xyz = color.xyz * v_particle_color.www;\\r\\n        return color;\\r\\n    }\\r\\n#endif\",\r\n\t\t\"particle_pars_vert\": \"#ifdef HAS_PARTICLE_ANIMATOR\\r\\n    //\\r\\n    attribute vec3 a_particle_position;\\r\\n    attribute vec3 a_particle_scale;\\r\\n    attribute vec3 a_particle_rotation;\\r\\n    attribute vec4 a_particle_color;\\r\\n\\r\\n    #ifdef ENABLED_PARTICLE_SYSTEM_textureSheetAnimation\\r\\n        attribute vec4 a_particle_tilingOffset;\\r\\n        attribute vec2 a_particle_flipUV;\\r\\n    #endif\\r\\n\\r\\n    uniform mat3 u_particle_billboardMatrix;\\r\\n\\r\\n    varying vec4 v_particle_color;\\r\\n\\r\\n    #define RotationOrder_XYZ 0\\r\\n    #define RotationOrder_ZXY 1\\r\\n    #define RotationOrder_ZYX 2\\r\\n    #define RotationOrder_YXZ 3\\r\\n    #define RotationOrder_YZX 4\\r\\n    #define RotationOrder_XZY 5\\r\\n\\r\\n    mat3 makeParticleRotationMatrix(vec3 rotation)\\r\\n    {\\r\\n        float DEG2RAD = 3.1415926 / 180.0;\\r\\n        \\r\\n        float rx = rotation.x * DEG2RAD;\\r\\n        float ry = rotation.y * DEG2RAD;\\r\\n        float rz = rotation.z * DEG2RAD;\\r\\n\\r\\n        float sinX = sin(rx);\\r\\n        float cosX = cos(rx);\\r\\n        float sinY = sin(ry);\\r\\n        float cosY = cos(ry);\\r\\n        float sinZ = sin(rz);\\r\\n        float cosZ = cos(rz);\\r\\n\\r\\n        mat3 tmp;\\r\\n        #ifdef RotationOrder\\r\\n            #if RotationOrder == RotationOrder_XYZ\\r\\n                float ae = cosX * cosZ;\\r\\n                float af = cosX * sinZ;\\r\\n                float be = sinX * cosZ;\\r\\n                float bf = sinX * sinZ;\\r\\n\\r\\n                float te0 = cosY * cosZ;\\r\\n                float te4 = - cosY * sinZ;\\r\\n                float te8 = sinY;\\r\\n\\r\\n                float te1 = af + be * sinY;\\r\\n                float te5 = ae - bf * sinY;\\r\\n                float te9 = - sinX * cosY;\\r\\n\\r\\n                float te2 = bf - ae * sinY;\\r\\n                float te6 = be + af * sinY;\\r\\n                float te10 = cosX * cosY;\\r\\n            #endif\\r\\n            #if RotationOrder == RotationOrder_YXZ\\r\\n                float ce = cosY * cosZ;\\r\\n                float cf = cosY * sinZ;\\r\\n                float de = sinY * cosZ;\\r\\n                float df = sinY * sinZ;\\r\\n\\r\\n                float te0 = ce + df * sinX;\\r\\n                float te4 = de * sinX - cf;\\r\\n                float te8 = cosX * sinY;\\r\\n\\r\\n                float te1 = cosX * sinZ;\\r\\n                float te5 = cosX * cosZ;\\r\\n                float te9 = - sinX;\\r\\n\\r\\n                float te2 = cf * sinX - de;\\r\\n                float te6 = df + ce * sinX;\\r\\n                float te10 = cosX * cosY;\\r\\n            #endif\\r\\n            #if RotationOrder == RotationOrder_ZXY\\r\\n                float ce = cosY * cosZ;\\r\\n                float cf = cosY * sinZ;\\r\\n                float de = sinY * cosZ;\\r\\n                float df = sinY * sinZ;\\r\\n\\r\\n                float te0 = ce - df * sinX;\\r\\n                float te4 = - cosX * sinZ;\\r\\n                float te8 = de + cf * sinX;\\r\\n\\r\\n                float te1 = cf + de * sinX;\\r\\n                float te5 = cosX * cosZ;\\r\\n                float te9 = df - ce * sinX;\\r\\n\\r\\n                float te2 = - cosX * sinY;\\r\\n                float te6 = sinX;\\r\\n                float te10 = cosX * cosY;\\r\\n            #endif\\r\\n            #if RotationOrder == RotationOrder_ZYX\\r\\n                float ae = cosX * cosZ;\\r\\n                float af = cosX * sinZ;\\r\\n                float be = sinX * cosZ;\\r\\n                float bf = sinX * sinZ;\\r\\n\\r\\n                float te0 = cosY * cosZ;\\r\\n                float te4 = be * sinY - af;\\r\\n                float te8 = ae * sinY + bf;\\r\\n\\r\\n                float te1 = cosY * sinZ;\\r\\n                float te5 = bf * sinY + ae;\\r\\n                float te9 = af * sinY - be;\\r\\n\\r\\n                float te2 = - sinY;\\r\\n                float te6 = sinX * cosY;\\r\\n                float te10 = cosX * cosY;\\r\\n            #endif\\r\\n            #if RotationOrder == RotationOrder_YZX\\r\\n                float ac = cosX * cosY;\\r\\n                float ad = cosX * sinY;\\r\\n                float bc = sinX * cosY;\\r\\n                float bd = sinX * sinY;\\r\\n\\r\\n                float te0 = cosY * cosZ;\\r\\n                float te4 = bd - ac * sinZ;\\r\\n                float te8 = bc * sinZ + ad;\\r\\n\\r\\n                float te1 = sinZ;\\r\\n                float te5 = cosX * cosZ;\\r\\n                float te9 = - sinX * cosZ;\\r\\n\\r\\n                float te2 = - sinY * cosZ;\\r\\n                float te6 = ad * sinZ + bc;\\r\\n                float te10 = ac - bd * sinZ;\\r\\n            #endif\\r\\n            #if RotationOrder == RotationOrder_XZY\\r\\n                float ac = cosX * cosY;\\r\\n                float ad = cosX * sinY;\\r\\n                float bc = sinX * cosY;\\r\\n                float bd = sinX * sinY;\\r\\n\\r\\n                float te0 = cosY * cosZ;\\r\\n                float te4 = - sinZ;\\r\\n                float te8 = sinY * cosZ;\\r\\n\\r\\n                float te1 = ac * sinZ + bd;\\r\\n                float te5 = cosX * cosZ;\\r\\n                float te9 = ad * sinZ - bc;\\r\\n\\r\\n                float te2 = bc * sinZ - ad;\\r\\n                float te6 = sinX * cosZ;\\r\\n                float te10 = bd * sinZ + ac;\\r\\n            #endif\\r\\n        #else\\r\\n            // YXZ\\r\\n            float ce = cosY * cosZ;\\r\\n            float cf = cosY * sinZ;\\r\\n            float de = sinY * cosZ;\\r\\n            float df = sinY * sinZ;\\r\\n\\r\\n            float te0 = ce + df * sinX;\\r\\n            float te4 = de * sinX - cf;\\r\\n            float te8 = cosX * sinY;\\r\\n\\r\\n            float te1 = cosX * sinZ;\\r\\n            float te5 = cosX * cosZ;\\r\\n            float te9 = - sinX;\\r\\n\\r\\n            float te2 = cf * sinX - de;\\r\\n            float te6 = df + ce * sinX;\\r\\n            float te10 = cosX * cosY;\\r\\n        #endif\\r\\n        \\r\\n        tmp[0] = vec3(te0, te1, te2);\\r\\n        tmp[1] = vec3(te4, te5, te6);\\r\\n        tmp[2] = vec3(te8, te9, te10);\\r\\n        \\r\\n        return tmp;\\r\\n    }\\r\\n\\r\\n    vec4 particleAnimation(vec4 position) \\r\\n    {\\r\\n        // 计算缩放\\r\\n        position.xyz = position.xyz * a_particle_scale;\\r\\n\\r\\n        // 计算旋转\\r\\n        mat3 rMat = makeParticleRotationMatrix(a_particle_rotation);\\r\\n        position.xyz = rMat * position.xyz;\\r\\n        position.xyz = u_particle_billboardMatrix * position.xyz;\\r\\n\\r\\n        // 位移\\r\\n        position.xyz = position.xyz + a_particle_position;\\r\\n\\r\\n        // 颜色\\r\\n        v_particle_color = a_particle_color;\\r\\n\\r\\n        #ifdef ENABLED_PARTICLE_SYSTEM_textureSheetAnimation\\r\\n            if(a_particle_flipUV.x > 0.5) v_uv.x = 1.0 - v_uv.x;\\r\\n            if(a_particle_flipUV.y > 0.5) v_uv.y = 1.0 - v_uv.y;\\r\\n            v_uv = v_uv * a_particle_tilingOffset.xy + a_particle_tilingOffset.zw;\\r\\n        #endif\\r\\n        \\r\\n        return position;\\r\\n    }\\r\\n#endif\",\r\n\t\t\"particle_vert\": \"#ifdef HAS_PARTICLE_ANIMATOR\\r\\n    position = particleAnimation(position);\\r\\n#endif\",\r\n\t\t\"pointsize_pars_vert\": \"#ifdef IS_POINTS_MODE\\r\\n    uniform float u_PointSize;\\r\\n#endif\",\r\n\t\t\"pointsize_vert\": \"#ifdef IS_POINTS_MODE\\r\\n    gl_PointSize = u_PointSize;\\r\\n#endif\",\r\n\t\t\"position_pars_vert\": \"attribute vec3 a_position;\",\r\n\t\t\"position_vert\": \"vec4 position = vec4(a_position, 1.0);\",\r\n\t\t\"project_pars_vert\": \"uniform mat4 u_viewProjection;\",\r\n\t\t\"project_vert\": \"//计算投影坐标\\r\\ngl_Position = u_viewProjection * worldPosition;\",\r\n\t\t\"shadowmap_pars_frag\": \"#if (NUM_POINTLIGHT_CASTSHADOW > 0) ||  (NUM_DIRECTIONALLIGHT_CASTSHADOW > 0) ||  (NUM_SPOT_LIGHTS_CASTSHADOW > 0)\\r\\n    #if NUM_POINTLIGHT_CASTSHADOW > 0\\r\\n        // 投影的点光源\\r\\n        struct CastShadowPointLight\\r\\n        {\\r\\n            // 位置\\r\\n            vec3 position;\\r\\n            // 颜色\\r\\n            vec3 color;\\r\\n            // 强度\\r\\n            float intensity;\\r\\n            // 范围\\r\\n            float range;\\r\\n            // 阴影类型\\r\\n            int shadowType;\\r\\n            // 阴影偏差，用来解决判断是否为阴影时精度问题\\r\\n            float shadowBias;\\r\\n            // 阴影半径，边缘宽度\\r\\n            float shadowRadius;\\r\\n            // 阴影图尺寸\\r\\n            vec2 shadowMapSize;\\r\\n            float shadowCameraNear;\\r\\n            float shadowCameraFar;\\r\\n        };\\r\\n        // 投影的点光源列表\\r\\n        uniform CastShadowPointLight u_castShadowPointLights[NUM_POINTLIGHT_CASTSHADOW];\\r\\n        // 点光源阴影图\\r\\n        uniform sampler2D u_pointShadowMaps[NUM_POINTLIGHT_CASTSHADOW];\\r\\n    #endif\\r\\n\\r\\n    #if NUM_SPOT_LIGHTS_CASTSHADOW > 0\\r\\n        // 投影的聚光灯\\r\\n        struct CastShadowSpotLight\\r\\n        {\\r\\n            // 位置\\r\\n            vec3 position;\\r\\n            // 颜色\\r\\n            vec3 color;\\r\\n            // 强度\\r\\n            float intensity;\\r\\n            // 范围\\r\\n            float range;\\r\\n            // 方向\\r\\n            vec3 direction;\\r\\n            // 椎体cos值\\r\\n            float coneCos;\\r\\n            // 半影cos\\r\\n            float penumbraCos;\\r\\n\\r\\n            // 阴影类型\\r\\n            int shadowType;\\r\\n            // 阴影偏差，用来解决判断是否为阴影时精度问题\\r\\n            float shadowBias;\\r\\n            // 阴影半径，边缘宽度\\r\\n            float shadowRadius;\\r\\n            // 阴影图尺寸\\r\\n            vec2 shadowMapSize;\\r\\n            float shadowCameraNear;\\r\\n            float shadowCameraFar;\\r\\n        };\\r\\n        // 投影的投影的聚光灯列表\\r\\n        uniform CastShadowSpotLight u_castShadowSpotLights[NUM_SPOT_LIGHTS_CASTSHADOW];\\r\\n        // 投影的聚光灯阴影图\\r\\n        uniform sampler2D u_spotShadowMaps[NUM_SPOT_LIGHTS_CASTSHADOW];\\r\\n        // 方向光源投影uv列表\\r\\n        varying vec4 v_spotShadowCoord[ NUM_SPOT_LIGHTS_CASTSHADOW ];\\r\\n    #endif\\r\\n\\r\\n    #if NUM_DIRECTIONALLIGHT_CASTSHADOW > 0\\r\\n        // 投影的方向光源\\r\\n        struct CastShadowDirectionalLight\\r\\n        {\\r\\n            // 方向\\r\\n            vec3 direction;\\r\\n            // 颜色\\r\\n            vec3 color;\\r\\n            // 强度\\r\\n            float intensity;\\r\\n            // 阴影类型\\r\\n            int shadowType;\\r\\n            // 阴影偏差，用来解决判断是否为阴影时精度问题\\r\\n            float shadowBias;\\r\\n            // 阴影半径，边缘宽度\\r\\n            float shadowRadius;\\r\\n            // 阴影图尺寸\\r\\n            vec2 shadowMapSize;\\r\\n            // 位置\\r\\n            vec3 position;\\r\\n            float shadowCameraNear;\\r\\n            float shadowCameraFar;\\r\\n        };\\r\\n        // 投影的方向光源列表\\r\\n        uniform CastShadowDirectionalLight u_castShadowDirectionalLights[NUM_DIRECTIONALLIGHT_CASTSHADOW];\\r\\n        // 方向光源阴影图\\r\\n        uniform sampler2D u_directionalShadowMaps[NUM_DIRECTIONALLIGHT_CASTSHADOW];\\r\\n        // 方向光源投影uv列表\\r\\n        varying vec4 v_directionalShadowCoord[ NUM_DIRECTIONALLIGHT_CASTSHADOW ];\\r\\n    #endif\\r\\n\\r\\n    // @see https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderChunk/packing.glsl\\r\\n    const float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\\r\\n    const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\r\\n    const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\r\\n    float unpackRGBAToDepth( const in vec4 v ) \\r\\n    {\\r\\n        return dot( v, UnpackFactors );\\r\\n    }\\r\\n\\r\\n    float texture2DCompare( sampler2D depths, vec2 uv, float compare ) \\r\\n    {\\r\\n        return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\r\\n    }\\r\\n\\r\\n    float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) \\r\\n    {\\r\\n        const vec2 offset = vec2( 0.0, 1.0 );\\r\\n\\r\\n        vec2 texelSize = vec2( 1.0 ) / size;\\r\\n        vec2 centroidUV = floor( uv * size + 0.5 ) / size;\\r\\n\\r\\n        float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\r\\n        float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\r\\n        float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\r\\n        float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\r\\n\\r\\n        vec2 f = fract( uv * size + 0.5 );\\r\\n\\r\\n        float a = mix( lb, lt, f.y );\\r\\n        float b = mix( rb, rt, f.y );\\r\\n        float c = mix( a, b, f.x );\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    // 计算阴影值 @see https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\\r\\n    float getShadow( sampler2D shadowMap, int shadowType, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, vec3 lightToPosition, float shadowCameraNear, float shadowCameraFar) \\r\\n    {\\r\\n        float shadow = 1.0;\\r\\n\\r\\n        shadowCoord.xy /= shadowCoord.w;\\r\\n        shadowCoord.xy = (shadowCoord.xy + 1.0) / 2.0;\\r\\n\\r\\n        // dp = normalized distance from light to fragment position\\r\\n        float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\\r\\n        dp += shadowBias;\\r\\n        shadowCoord.z = dp;\\r\\n\\r\\n        // if ( something && something ) breaks ATI OpenGL shader compiler\\r\\n        // if ( all( something, something ) ) using this instead\\r\\n\\r\\n        bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\r\\n        bool inFrustum = all( inFrustumVec );\\r\\n\\r\\n        bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\r\\n\\r\\n        bool frustumTest = all( frustumTestVec );\\r\\n\\r\\n        if ( frustumTest ) \\r\\n        {\\r\\n            if (shadowType == 2)\\r\\n            {\\r\\n                // PCF\\r\\n                vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\r\\n\\r\\n                float dx0 = - texelSize.x * shadowRadius;\\r\\n                float dy0 = - texelSize.y * shadowRadius;\\r\\n                float dx1 = + texelSize.x * shadowRadius;\\r\\n                float dy1 = + texelSize.y * shadowRadius;\\r\\n\\r\\n                shadow = (\\r\\n                    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\r\\n                    texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\r\\n                    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\r\\n                    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\r\\n                    texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\r\\n                    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\r\\n                    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\r\\n                    texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\r\\n                    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\r\\n                ) * ( 1.0 / 9.0 );\\r\\n            }\\r\\n            else if(shadowType == 3)\\r\\n            {\\r\\n                // PCF soft\\r\\n                vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\r\\n\\r\\n                float dx0 = - texelSize.x * shadowRadius;\\r\\n                float dy0 = - texelSize.y * shadowRadius;\\r\\n                float dx1 = + texelSize.x * shadowRadius;\\r\\n                float dy1 = + texelSize.y * shadowRadius;\\r\\n\\r\\n                shadow = (\\r\\n                    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\r\\n                    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\r\\n                    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\r\\n                    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\r\\n                    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\r\\n                    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\r\\n                    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\r\\n                    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\r\\n                    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\r\\n                ) * ( 1.0 / 9.0 );\\r\\n            }\\r\\n            else\\r\\n            {\\r\\n                shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return shadow;\\r\\n    }\\r\\n\\r\\n    // cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\\r\\n    // vector suitable for 2D texture mapping. This code uses the following layout for the\\r\\n    // 2D texture:\\r\\n    //\\r\\n    // xzXZ\\r\\n    //  y Y\\r\\n    //\\r\\n    // Y - Positive y direction\\r\\n    // y - Negative y direction\\r\\n    // X - Positive x direction\\r\\n    // x - Negative x direction\\r\\n    // Z - Positive z direction\\r\\n    // z - Negative z direction\\r\\n    //\\r\\n    // Source and test bed:\\r\\n    // https://gist.github.com/tschw/da10c43c467ce8afd0c4\\r\\n\\r\\n    vec2 cubeToUV( vec3 v, float texelSizeY ) \\r\\n    {\\r\\n        // Number of texels to avoid at the edge of each square\\r\\n        vec3 absV = abs( v );\\r\\n\\r\\n        // Intersect unit cube\\r\\n        float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\r\\n        absV *= scaleToCube;\\r\\n\\r\\n        // Apply scale to avoid seams\\r\\n\\r\\n        // two texels less per square (one texel will do for NEAREST)\\r\\n        v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\r\\n\\r\\n        // Unwrap\\r\\n\\r\\n        // space: -1 ... 1 range for each square\\r\\n        //\\r\\n        // #X##\\t\\tdim    := ( 1/4 , 1/2 )\\r\\n        //  # #\\t\\tcenter := ( 1/2 , 1/2 )\\r\\n        vec2 planar;\\r\\n        float almostOne = 1.0 - 1.5 * texelSizeY;\\r\\n        if ( absV.z >= almostOne ) \\r\\n        {\\r\\n            if ( v.z > 0.0 )\\r\\n            {\\r\\n                planar.x = (0.5 + v.x * 0.5) * 0.25 + 0.75;\\r\\n                planar.y = (0.5 + v.y * 0.5) * 0.5 + 0.5;\\r\\n            }else\\r\\n            {\\r\\n                planar.x = (0.5 - v.x * 0.5) * 0.25 + 0.25;\\r\\n                planar.y = (0.5 + v.y * 0.5) * 0.5 + 0.5;\\r\\n            }\\r\\n        } else if ( absV.x >= almostOne ) \\r\\n        {\\r\\n            if( v.x > 0.0)\\r\\n            {\\r\\n                planar.x = (0.5 - v.z * 0.5) * 0.25 + 0.5;\\r\\n                planar.y = (0.5 + v.y * 0.5) * 0.5 + 0.5;\\r\\n            }else\\r\\n            {\\r\\n                planar.x = (0.5 + v.z * 0.5) * 0.25 + 0.0;\\r\\n                planar.y = (0.5 + v.y * 0.5) * 0.5 + 0.5;\\r\\n            }\\r\\n        } else if ( absV.y >= almostOne ) \\r\\n        {\\r\\n            if( v.y > 0.0)\\r\\n            {\\r\\n                planar.x = (0.5 - v.x * 0.5) * 0.25 + 0.75;\\r\\n                planar.y = (0.5 + v.z * 0.5) * 0.5 + 0.0;\\r\\n            }else\\r\\n            {\\r\\n                planar.x = (0.5 - v.x * 0.5) * 0.25 + 0.25;\\r\\n                planar.y = (0.5 - v.z * 0.5) * 0.5 + 0.0;\\r\\n            }\\r\\n        }\\r\\n        return planar;\\r\\n    }\\r\\n\\r\\n    float getPointShadow( sampler2D shadowMap, int shadowType, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec3 lightToPosition, float shadowCameraNear, float shadowCameraFar ) \\r\\n    {\\r\\n        vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\r\\n\\r\\n        // for point lights, the uniform @vShadowCoord is re-purposed to hold\\r\\n        // the vector from the light to the world-space position of the fragment.\\r\\n        // vec3 lightToPosition = shadowCoord.xyz;\\r\\n\\r\\n        // dp = normalized distance from light to fragment position\\r\\n        float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\\r\\n        dp += shadowBias;\\r\\n\\r\\n        // bd3D = base direction 3D\\r\\n        vec3 bd3D = normalize( lightToPosition );\\r\\n\\r\\n        if(shadowType == 2 || shadowType == 3)\\r\\n        {\\r\\n            vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\r\\n\\r\\n            return (\\r\\n                texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\r\\n                texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\r\\n                texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\r\\n                texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\r\\n                texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\r\\n                texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\r\\n                texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\r\\n                texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\r\\n                texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\r\\n            ) * ( 1.0 / 9.0 );\\r\\n        }else\\r\\n        {\\r\\n            return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\r\\n        }\\r\\n    }\\r\\n#endif\",\r\n\t\t\"skeleton_pars_vert\": \"#ifdef HAS_SKELETON_ANIMATION\\r\\n\\r\\n    attribute vec4 a_skinIndices;\\r\\n    attribute vec4 a_skinWeights;\\r\\n\\r\\n    #ifdef HAS_a_skinIndices1\\r\\n        attribute vec4 a_skinIndices1;\\r\\n        attribute vec4 a_skinWeights1;\\r\\n    #endif\\r\\n\\r\\n    #ifdef NUM_SKELETONJOINT\\r\\n        uniform mat4 u_skeletonGlobalMatriices[NUM_SKELETONJOINT];\\r\\n    #endif\\r\\n\\r\\n    vec4 skeletonAnimation(vec4 position) \\r\\n    {\\r\\n        vec4 totalPosition = vec4(0.0,0.0,0.0,1.0);\\r\\n        for(int i = 0; i < 4; i++)\\r\\n        {\\r\\n            totalPosition += u_skeletonGlobalMatriices[int(a_skinIndices[i])] * position * a_skinWeights[i];\\r\\n        }\\r\\n        #ifdef HAS_a_skinIndices1\\r\\n            for(int i = 0; i < 4; i++)\\r\\n            {\\r\\n                totalPosition += u_skeletonGlobalMatriices[int(a_skinIndices1[i])] * position * a_skinWeights1[i];\\r\\n            }\\r\\n        #endif\\r\\n        position.xyz = totalPosition.xyz;\\r\\n        return position;\\r\\n    }\\r\\n#endif\",\r\n\t\t\"skeleton_vert\": \"#ifdef HAS_SKELETON_ANIMATION\\r\\n    position = skeletonAnimation(position);\\r\\n#endif\",\r\n\t\t\"specular_frag\": \"//获取高光值\\r\\nfloat glossiness = u_glossiness;\\r\\n//获取镜面反射基本颜色\\r\\nvec3 specularColor = u_specular;\\r\\nvec4 specularMapColor = texture2D(s_specular, v_uv);\\r\\nspecularColor.xyz = specularMapColor.xyz;\\r\\nglossiness = glossiness * specularMapColor.w;\",\r\n\t\t\"specular_pars_frag\": \"//镜面反射\\r\\nuniform vec3 u_specular;\\r\\nuniform float u_glossiness;\\r\\nuniform sampler2D s_specular;\",\r\n\t\t\"tangent_pars_vert\": \"attribute vec3 a_tangent;\",\r\n\t\t\"tangent_vert\": \"vec3 tangent = a_tangent;\",\r\n\t\t\"terrainDefault_pars_frag\": \"uniform sampler2D s_splatTexture1;\\r\\nuniform sampler2D s_splatTexture2;\\r\\nuniform sampler2D s_splatTexture3;\\r\\n\\r\\nuniform sampler2D s_blendTexture;\\r\\nuniform vec4 u_splatRepeats;\\r\\n\\r\\nvec4 terrainMethod(vec4 diffuseColor,vec2 v_uv) \\r\\n{\\r\\n    vec4 blend = texture2D(s_blendTexture, v_uv);\\r\\n\\r\\n    vec2 t_uv = v_uv.xy * u_splatRepeats.y;\\r\\n    vec4 tColor = texture2D(s_splatTexture1, t_uv);\\r\\n    diffuseColor = (tColor - diffuseColor) * blend.x + diffuseColor;\\r\\n\\r\\n    t_uv = v_uv.xy * u_splatRepeats.z;\\r\\n    tColor = texture2D(s_splatTexture2, t_uv);\\r\\n    diffuseColor = (tColor - diffuseColor) * blend.y + diffuseColor;\\r\\n\\r\\n    t_uv = v_uv.xy * u_splatRepeats.w;\\r\\n    tColor = texture2D(s_splatTexture3, t_uv);\\r\\n    diffuseColor = (tColor - diffuseColor) * blend.z + diffuseColor;\\r\\n\\r\\n    return diffuseColor;\\r\\n}\",\r\n\t\t\"terrainMerge_pars_frag\": \"//代码实现lod以及线性插值 feng\\r\\n#extension GL_EXT_shader_texture_lod : enable\\r\\n#extension GL_OES_standard_derivatives : enable\\r\\n\\r\\n#define LOD_LINEAR\\r\\n\\r\\nuniform sampler2D s_splatMergeTexture;\\r\\nuniform sampler2D s_blendTexture;\\r\\nuniform vec4 u_splatRepeats;\\r\\n\\r\\nuniform vec2 u_imageSize;\\r\\nuniform vec4 u_tileOffset[3];\\r\\nuniform vec4 u_lod0vec;\\r\\nuniform vec2 u_tileSize;\\r\\nuniform float u_maxLod;\\r\\nuniform float u_scaleByDepth;\\r\\nuniform float u_uvPositionScale;\\r\\n\\r\\n\\r\\nvec4 terrainTexture2DLod(sampler2D s_splatMergeTexture,vec2 uv,float lod,vec4 offset){\\r\\n\\r\\n    //计算不同lod像素缩放以及起始坐标\\r\\n    vec4 lodvec = u_lod0vec;\\r\\n    lodvec.x = lodvec.x * pow(0.5,lod);\\r\\n    lodvec.y = lodvec.x * 2.0;\\r\\n    lodvec.z = 1.0 - lodvec.y;\\r\\n\\r\\n    //lod块尺寸\\r\\n    vec2 lodSize = u_imageSize * lodvec.xy;\\r\\n    vec2 lodPixelOffset = 1.0 / lodSize * 2.0;\\r\\n\\r\\n    // uv = uv - 1.0 / lodPixelOffset;\\r\\n    vec2 mixFactor = mod(uv, lodPixelOffset) / lodPixelOffset;\\r\\n\\r\\n    //lod块中像素索引\\r\\n    vec2 t_uv = fract(uv + lodPixelOffset * vec2(0.0, 0.0));\\r\\n    t_uv = t_uv * offset.xy + offset.zw;\\r\\n    //添加lod起始坐标\\r\\n    t_uv = t_uv * lodvec.xy + lodvec.zw;\\r\\n    //取整像素\\r\\n    t_uv = floor(t_uv * u_imageSize) / u_imageSize;\\r\\n    vec4 tColor00 = texture2D(s_splatMergeTexture,t_uv);\\r\\n\\r\\n    t_uv = fract(uv + lodPixelOffset * vec2(1.0, 0.0));\\r\\n    t_uv = t_uv * offset.xy + offset.zw;\\r\\n    //添加lod起始坐标\\r\\n    t_uv = t_uv * lodvec.xy + lodvec.zw;\\r\\n    //取整像素\\r\\n    t_uv = floor(t_uv * u_imageSize) / u_imageSize;\\r\\n    vec4 tColor10 = texture2D(s_splatMergeTexture,t_uv);\\r\\n\\r\\n    t_uv = fract(uv + lodPixelOffset * vec2(0.0, 1.0));\\r\\n    t_uv = t_uv * offset.xy + offset.zw;\\r\\n    //添加lod起始坐标\\r\\n    t_uv = t_uv * lodvec.xy + lodvec.zw;\\r\\n    //取整像素\\r\\n    t_uv = floor(t_uv * u_imageSize) / u_imageSize;\\r\\n    vec4 tColor01 = texture2D(s_splatMergeTexture,t_uv);\\r\\n\\r\\n    t_uv = fract(uv + lodPixelOffset * vec2(1.0, 1.0));\\r\\n    t_uv = t_uv * offset.xy + offset.zw;\\r\\n    //添加lod起始坐标\\r\\n    t_uv = t_uv * lodvec.xy + lodvec.zw;\\r\\n    //取整像素\\r\\n    t_uv = floor(t_uv * u_imageSize) / u_imageSize;\\r\\n    vec4 tColor11 = texture2D(s_splatMergeTexture,t_uv);\\r\\n\\r\\n    vec4 tColor0 = mix(tColor00,tColor10,mixFactor.x);\\r\\n    vec4 tColor1 = mix(tColor01,tColor11,mixFactor.x);\\r\\n    vec4 tColor = mix(tColor0,tColor1,mixFactor.y);\\r\\n\\r\\n    return tColor;\\r\\n\\r\\n    // return vec4(mixFactor.x,mixFactor.y,0.0,1.0);\\r\\n    // return vec4(mixFactor.x + 0.5,mixFactor.y + 0.5,0.0,1.0);\\r\\n}\\r\\n\\r\\n//参考 http://blog.csdn.net/cgwbr/article/details/6620318\\r\\n//计算MipMap层函数：\\r\\nfloat mipmapLevel(vec2 uv)\\r\\n{\\r\\n    vec2 dx = dFdx(uv);\\r\\n    vec2 dy = dFdy(uv);\\r\\n    float d = max(dot(dx, dx), dot(dy, dy));\\r\\n    return 0.5 * log2(d);\\r\\n}\\r\\n\\r\\n//根据距离以及法线计算MipMap层函数：\\r\\nfloat mipmapLevel1(vec2 uv)\\r\\n{\\r\\n    //视线方向\\r\\n    vec3 cameraDir = u_cameraPos - v_worldPosition.xyz;\\r\\n    float fogDistance = length(cameraDir);\\r\\n    float value = u_scaleByDepth * fogDistance * u_uvPositionScale;//uv变化率与距离成正比，0.001为顶点位置与uv的变化比率\\r\\n    cameraDir = normalize(cameraDir);\\r\\n    float dd = clamp(dot(cameraDir, v_normal),0.05,1.0);//取法线与视线余弦值的倒数，余弦值越大（朝向摄像机时uv变化程度越低）lod越小\\r\\n    value = value / dd;\\r\\n    value = value * 0.5;//还没搞懂0.5的来历\\r\\n    return log2(value);\\r\\n}\\r\\n\\r\\nvec4 terrainTexture2D(sampler2D s_splatMergeTexture, vec2 t_uv, float lod, vec4 offset){\\r\\n \\r\\n    #ifdef LOD_LINEAR\\r\\n        vec4 tColor = mix(terrainTexture2DLod(s_splatMergeTexture, t_uv, floor(lod), offset),terrainTexture2DLod(s_splatMergeTexture, t_uv, ceil(lod), offset), fract(lod));\\r\\n    #else\\r\\n        vec4 tColor = terrainTexture2DLod(s_splatMergeTexture, t_uv, ceil(lod), offset);\\r\\n    #endif\\r\\n\\r\\n    return tColor;\\r\\n}\\r\\n\\r\\nvec4 terrainMethod(vec4 diffuseColor, vec2 v_uv) \\r\\n{\\r\\n    float lod = 0.0;\\r\\n    vec4 blend = texture2D(s_blendTexture, v_uv);\\r\\n    for(int i = 0; i < 3; i++)\\r\\n    {\\r\\n        vec2 t_uv = v_uv * u_splatRepeats[i];\\r\\n        // lod = mipmapLevel(v_uv) + log2(u_tileSize.x * u_splatRepeats[i]);\\r\\n        lod = mipmapLevel1(v_uv) + log2(u_tileSize.x * u_splatRepeats[i]);\\r\\n        lod = clamp(lod, 0.0, u_maxLod);\\r\\n        vec4 tColor = terrainTexture2D(s_splatMergeTexture, t_uv, lod, u_tileOffset[i]);\\r\\n        diffuseColor = (tColor - diffuseColor) * blend[i] + diffuseColor;\\r\\n    }\\r\\n\\r\\n    // diffuseColor.xyz = vec3(1.0,0.0,0.0);\\r\\n    // diffuseColor.xyz = vec3(lod/u_maxLod,0.0,0.0);\\r\\n    // diffuseColor.xyz = vec3(floor(lod)/u_maxLod,0.0,0.0);\\r\\n    return diffuseColor;\\r\\n}\",\r\n\t\t\"terrain_frag\": \"diffuseColor = terrainMethod(diffuseColor, v_uv);\",\r\n\t\t\"terrain_pars_frag\": \"#ifdef USE_TERRAIN_MERGE\\r\\n    #include<terrainMerge_pars_frag>\\r\\n#else\\r\\n    #include<terrainDefault_pars_frag>\\r\\n#endif\",\r\n\t\t\"uv_pars_vert\": \"attribute vec2 a_uv;\\r\\n\\r\\nvarying vec2 v_uv;\",\r\n\t\t\"uv_vert\": \"v_uv = a_uv;\\r\\n#ifdef SCALEU\\r\\n    #ifdef SCALEV\\r\\n    v_uv = v_uv * vec2(SCALEU,SCALEV);\\r\\n    #endif\\r\\n#endif\",\r\n\t\t\"worldposition_pars_vert\": \"uniform mat4 u_modelMatrix;\\r\\n\\r\\nvarying vec3 v_worldPosition;\",\r\n\t\t\"worldposition_vert\": \"//获取全局坐标\\r\\nvec4 worldPosition = u_modelMatrix * position;\\r\\n//输出全局坐标\\r\\nv_worldPosition = worldPosition.xyz;\"\r\n\t}\r\n}\r\n","import { globalEmitter } from \"@feng3d/event\";\r\nimport { shaderlib } from \"@feng3d/renderer\";\r\n\r\nglobalEmitter.on(\"asset.shaderChanged\", () =>\r\n{\r\n    shaderlib.clearCache();\r\n});\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\r\n/**\r\n * 运行环境枚举\r\n */\r\nexport enum RunEnvironment\r\n{\r\n    /**\r\n     * 在feng3d模式下运行\r\n     */\r\n    feng3d = 1 << 0,\r\n\r\n    /**\r\n     * 运行在编辑器中\r\n     */\r\n    editor = 1 << 1,\r\n\r\n    /**\r\n     * 在所有环境中运行\r\n     */\r\n    all = (1 << 8) - 1,\r\n}\r\n","\r\n    /**\r\n     * 在检查器中控制对象销毁、保存和可见性的位掩码。\r\n     */\r\n    export enum HideFlags\r\n    {\r\n        /**\r\n         * 一个正常的,可见对象。这是默认的。\r\n         */\r\n        None = 0,\r\n        /**\r\n         * 不会出现在层次界面中。\r\n         */\r\n        HideInHierarchy = 1,\r\n        /**\r\n         * 不会出现在检查器界面中。\r\n         */\r\n        HideInInspector = 2,\r\n        /**\r\n         * 不会保存到编辑器中的场景中。\r\n         */\r\n        DontSaveInEditor = 4,\r\n        /**\r\n         * 在检查器中不可编辑。\r\n         */\r\n        NotEditable = 8,\r\n        /**\r\n         * 在构建播放器时对象不会被保存。\r\n         */\r\n        DontSaveInBuild = 16,\r\n        /**\r\n         * 对象不会被Resources.UnloadUnusedAssets卸载。\r\n         */\r\n        DontUnloadUnusedAsset = 32,\r\n        /**\r\n         * 不能被变换\r\n         */\r\n        DontTransform = 64,\r\n        /**\r\n         * 隐藏\r\n         */\r\n        Hide = HideInHierarchy | HideInInspector,\r\n        /**\r\n         * 对象不会保存到场景中。加载新场景时不会被销毁。相当于DontSaveInBuild | HideFlags。DontSaveInEditor | HideFlags.DontUnloadUnusedAsset\r\n         */\r\n        DontSave = DontSaveInEditor | DontSaveInBuild,\r\n        /**\r\n         * 不显示在层次界面中，不保存到场景中，加载新场景时不会被销毁。\r\n         */\r\n        HideAndDontSave = 61\r\n    }\r\n","import { EventEmitter } from \"@feng3d/event\";\r\nimport { Constructor, IDisposable, mathUtil } from \"@feng3d/polyfill\";\r\nimport { serialization, serialize } from \"@feng3d/serialization\";\r\nimport { HideFlags } from \"./HideFlags\";\r\n\r\n/**\r\n * 所有feng3d对象的基类\r\n */\r\nexport class Feng3dObject<T = any> extends EventEmitter<T> implements IDisposable\r\n{\r\n    /**\r\n     * 名称\r\n     */\r\n    get name()\r\n    {\r\n        return this._name;\r\n    }\r\n    set name(v)\r\n    {\r\n        this._name = v;\r\n    }\r\n    protected _name: string;\r\n\r\n    /**\r\n     * 隐藏标记，用于控制是否在层级界面、检查器显示，是否保存\r\n     */\r\n    @serialize\r\n    hideFlags = HideFlags.None;\r\n\r\n    /**\r\n     * 通用唯一标识符（Universally Unique Identifier）\r\n     */\r\n    readonly uuid: string;\r\n\r\n    /**\r\n     * 是否已销毁\r\n     */\r\n    get disposed() { return this._disposed; }\r\n    protected _disposed = false;\r\n\r\n    /**\r\n     * 构建\r\n     * \r\n     * 新增不可修改属性 guid\r\n     */\r\n    constructor()\r\n    {\r\n        super();\r\n        Object.defineProperty(this, \"uuid\", { value: mathUtil.uuid() });\r\n        Object.defineProperty(this, \"disposed\", { value: false, configurable: true });\r\n        console.assert(!Feng3dObject.objectLib[this.uuid], `唯一标识符存在重复！？`);\r\n        Feng3dObject.objectLib[this.uuid] = this;\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    dispose()\r\n    {\r\n        Object.defineProperty(this, \"disposed\", { value: true, configurable: false });\r\n    }\r\n\r\n    /**\r\n     * 获取对象\r\n     * \r\n     * @param uuid 通用唯一标识符\r\n     */\r\n    static getObject(uuid: string)\r\n    {\r\n        return this.objectLib[uuid];\r\n    }\r\n\r\n    /**\r\n     * 获取对象\r\n     * \r\n     * @param type \r\n     */\r\n    static getObjects<T extends Feng3dObject>(type?: Constructor<T>): T[]\r\n    {\r\n        var objects = Object.keys(this.objectLib).map(v => this.objectLib[v]);\r\n        //\r\n        var filterResult = objects;\r\n        if (type)\r\n        {\r\n            filterResult = objects.filter(v => v instanceof type);\r\n        }\r\n        return <T[]>filterResult;\r\n    }\r\n\r\n    /**\r\n     * 对象库\r\n     */\r\n    private static objectLib: { [guid: string]: Feng3dObject };\r\n}\r\nObject.defineProperty(Feng3dObject, \"objectLib\", { value: {} });\r\n\r\nserialization.serializeHandlers.push(\r\n    // 处理 Feng3dObject\r\n    {\r\n        priority: 0,\r\n        handler: function (target, source, property)\r\n        {\r\n            var spv = source[property];\r\n            if (spv instanceof Feng3dObject && (spv.hideFlags & HideFlags.DontSave))\r\n            {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n);\r\n\r\n\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport { Entity, EntityEventMap } from \"../core/Entity\";\r\nimport { Feng3dObject } from \"../core/Feng3dObject\";\r\nimport { ScriptComponent } from \"../core/ScriptComponent\";\r\nimport { Event } from \"@feng3d/event\";\r\nimport { Constructor, IDisposable } from \"@feng3d/polyfill\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\n\r\ninterface ComponentInfo\r\n{\r\n    /**\r\n     * 组件名称，默认构造函数名称。当组件重名时可以使用该参数进行取别名，并且在接口 ComponentMap 中相应调整。\r\n     */\r\n    name: string;\r\n    /**\r\n     * 是否唯一，同类型组件只允许一个。\r\n     */\r\n    single: boolean;\r\n    /**\r\n     * 构造函数\r\n     */\r\n    type: Constructor<Component>;\r\n    /**\r\n     * 所依赖的组件列表。当该组件被添加Entity上时，会补齐缺少的依赖组件。\r\n     */\r\n    dependencies: Constructor<Component>[];\r\n}\r\n\r\n/**\r\n * 组件信息属性常量，保存组件名称与组件依赖ComponentInfo，由 @RegisterComponent 装饰器进行填充。\r\n */\r\nconst __component__ = \"__component__\";\r\n\r\n/**\r\n * 注册组件\r\n * \r\n * 使用 @RegisterComponent 在组件类定义上注册组件，配合扩展 ComponentMap 接口后可使用 Entity.getComponent 等方法。\r\n * \r\n * @param component 组件名称，默认使用类名称\r\n */\r\nexport function RegisterComponent(component: {\r\n    /**\r\n     * 组件名称，默认构造函数名称。当组件重名时可以使用该参数进行取别名，并且在接口 ComponentMap 中相应调整。\r\n     */\r\n    name?: string,\r\n    /**\r\n     * 是否唯一，同类型组件只允许一个。\r\n     */\r\n    single?: boolean,\r\n    /**\r\n     * 所依赖的组件列表。当该组件被添加Entity上时，会补齐缺少的依赖组件。\r\n     */\r\n    dependencies?: Constructor<Component>[]\r\n} = {})\r\n{\r\n    return (constructor: Constructor<Component>) =>\r\n    {\r\n        var info = component as ComponentInfo;\r\n        info.name = info.name || constructor.name;\r\n        info.type = <any>constructor;\r\n        info.dependencies = info.dependencies || [];\r\n        constructor.prototype[__component__] = info;\r\n\r\n        if (Component._componentMap[info.name])\r\n        {\r\n            console.warn(`重复定义组件${info.name}，${Component._componentMap[info.name]} ${constructor} ！`);\r\n        } else\r\n        {\r\n            Component._componentMap[info.name] = constructor;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getComponentType<T extends ComponentNames>(type: T): Constructor<ComponentMap[T]>\r\n{\r\n    return Component._componentMap[type] as any;\r\n}\r\n\r\n/**\r\n * 组件名称与类定义映射，新建组件一般都需扩展该接口。\r\n */\r\nexport interface ComponentMap { Component: Component }\r\n\r\nexport type ComponentNames = keyof ComponentMap;\r\nexport type Components = ComponentMap[ComponentNames];\r\n\r\nexport interface ComponentEventMap extends EntityEventMap\r\n{\r\n}\r\n\r\n/**\r\n * 组件\r\n * \r\n * 所有附加到Entity的基类。\r\n * \r\n * 注意，您的代码不会直接创建 Component，而是您编写脚本代码，然后将该脚本附加到 Entity。\r\n */\r\nexport class Component<T extends ComponentEventMap = ComponentEventMap> extends Feng3dObject<T> implements IDisposable\r\n{\r\n    /**\r\n     * 组件名称与类定义映射，由 @RegisterComponent 装饰器进行填充。\r\n     * @private\r\n     */\r\n    static _componentMap: { [name: string]: Constructor<Component> } = {};\r\n\r\n    /**\r\n     * 获取组件依赖列表\r\n     * \r\n     * @param type 组件类定义\r\n     */\r\n    static getDependencies(type: Constructor<Component>)\r\n    {\r\n        var prototype = type.prototype;\r\n        var dependencies: Constructor<Component>[] = [];\r\n        while (prototype)\r\n        {\r\n            dependencies = dependencies.concat((prototype[__component__] as ComponentInfo)?.dependencies || []);\r\n            prototype = prototype[\"__proto__\"];\r\n        }\r\n        return dependencies;\r\n    }\r\n\r\n    /**\r\n     * 判断组件是否为唯一组件。\r\n     * \r\n     * @param type 组件类定义\r\n     */\r\n    static isSingleComponent(type: Constructor<Component>)\r\n    {\r\n        var prototype = type.prototype;\r\n        var isSingle = false;\r\n        while (prototype && !isSingle)\r\n        {\r\n            isSingle = !!((prototype[__component__] as ComponentInfo)?.single);\r\n            prototype = prototype[\"__proto__\"];\r\n        }\r\n        return isSingle;\r\n    }\r\n\r\n    //------------------------------------------\r\n    // Variables\r\n    //------------------------------------------\r\n    /**\r\n     * 此组件附加到的实体。组件总是附加到实体上。\r\n     */\r\n    @serialize\r\n    get entity()\r\n    {\r\n        return this._entity;\r\n    }\r\n\r\n    set entity(v)\r\n    {\r\n        if (this._entity === v)\r\n        {\r\n            return;\r\n        }\r\n        console.assert(!this._entity, \"组件无法再次加入其它Entity中!\");\r\n        this._entity = v;\r\n    }\r\n\r\n    /**\r\n     * 名称。\r\n     * \r\n     * 组件与实体及所有附加组件使用相同的名称。\r\n     */\r\n    get name()\r\n    {\r\n        return this._entity?.name;\r\n    }\r\n\r\n    set name(v)\r\n    {\r\n        this._entity.name = v;\r\n    }\r\n\r\n    /**\r\n     * 此实体的标签。\r\n     * \r\n     * 可使用标签来识别实体。 \r\n     */\r\n    get tag()\r\n    {\r\n        return this._entity.tag;\r\n    }\r\n\r\n    set tag(v)\r\n    {\r\n        this._entity.tag = v;\r\n    }\r\n\r\n    //------------------------------------------\r\n    // Functions\r\n    //------------------------------------------\r\n    /**\r\n     * 创建一个组件\r\n     */\r\n    constructor()\r\n    {\r\n        super();\r\n        this.onAny(this._onAnyListener, this);\r\n    }\r\n\r\n    /**\r\n     * 初始化组件\r\n     * \r\n     * 在添加到Entity时立即被调用。\r\n     */\r\n    init()\r\n    {\r\n    }\r\n\r\n    /**\r\n     * 获取指定位置索引的子组件\r\n     * @param index\t\t\t位置索引\r\n     * @return\t\t\t\t子组件\r\n     */\r\n    getComponentAt(index: number): Component\r\n    {\r\n        return this.entity.getComponentAt(index);\r\n    }\r\n\r\n    /**\r\n     * 添加指定组件类型到实体\r\n     * \r\n     * @type type 被添加组件\r\n     */\r\n    addComponent<T extends Components>(type: Constructor<T>, callback: (component: T) => void = null): T\r\n    {\r\n        return this.entity.addComponent(type, callback);\r\n    }\r\n\r\n    /**\r\n     * 添加脚本\r\n     * @param script   脚本路径\r\n     */\r\n    addScript(scriptName: string): ScriptComponent\r\n    {\r\n        return this.entity.addScript(scriptName);\r\n    }\r\n\r\n    /**\r\n     * 获取实体上第一个指定类型的组件，不存在时返回null\r\n     * \r\n     * @param type\t\t\t\t类定义\r\n     * @return                  返回指定类型组件\r\n     */\r\n    getComponent<T extends Components>(type: Constructor<T>): T\r\n    {\r\n        return this.entity.getComponent(type);\r\n    }\r\n\r\n    /**\r\n     * 获取实体上所有指定类型的组件数组\r\n     * \r\n     * @param type\t\t类定义\r\n     * @return\t\t\t返回与给出类定义一致的组件\r\n     */\r\n    getComponents<T extends Components>(type: Constructor<T>): T[]\r\n    {\r\n        return this.entity.getComponents(type);\r\n    }\r\n\r\n    /**\r\n     * 设置子组件的位置\r\n     * @param component\t\t\t\t子组件\r\n     * @param index\t\t\t\t位置索引\r\n     */\r\n    setComponentIndex(component: Components, index: number): void\r\n    {\r\n        this.entity.setComponentIndex(component, index);\r\n    }\r\n\r\n    /**\r\n     * 设置组件到指定位置\r\n     * @param component\t\t被设置的组件\r\n     * @param index\t\t\t索引\r\n     */\r\n    setComponentAt(component: Components, index: number)\r\n    {\r\n        this.entity.setComponentAt(component, index);\r\n    }\r\n\r\n    /**\r\n     * 移除组件\r\n     * @param component 被移除组件\r\n     */\r\n    removeComponent(component: Components): void\r\n    {\r\n        this.entity.removeComponent(component);\r\n    }\r\n\r\n    /**\r\n     * 获取组件在容器的索引位置\r\n     * @param component\t\t\t查询的组件\r\n     * @return\t\t\t\t    组件在容器的索引位置\r\n     */\r\n    getComponentIndex(component: Components): number\r\n    {\r\n        return this.entity.getComponentIndex(component);\r\n    }\r\n\r\n    /**\r\n     * 移除组件\r\n     * @param index\t\t要删除的 Component 的子索引。\r\n     */\r\n    removeComponentAt(index: number): Component\r\n    {\r\n        return this.entity.removeComponentAt(index);\r\n    }\r\n\r\n    /**\r\n     * 交换子组件位置\r\n     * @param index1\t\t第一个子组件的索引位置\r\n     * @param index2\t\t第二个子组件的索引位置\r\n     */\r\n    swapComponentsAt(index1: number, index2: number): void\r\n    {\r\n        this.swapComponentsAt(index1, index2);\r\n    }\r\n\r\n    /**\r\n     * 交换子组件位置\r\n     * @param a\t\t第一个子组件\r\n     * @param b\t\t第二个子组件\r\n     */\r\n    swapComponents(a: Components, b: Components): void\r\n    {\r\n        this.swapComponents(a, b);\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    dispose()\r\n    {\r\n        this._entity = <any>null;\r\n        this._disposed = true;\r\n    }\r\n\r\n    beforeRender(renderAtomic: RenderAtomic, scene: Scene, camera: Camera)\r\n    {\r\n\r\n    }\r\n\r\n    /**\r\n     * 监听对象的所有事件并且传播到所有组件中\r\n     */\r\n    private _onAnyListener(e: Event<any>)\r\n    {\r\n        if (this._entity)\r\n            this._entity.emitEvent(e);\r\n    }\r\n\r\n    /**\r\n     * 该方法仅在Entity中使用\r\n     * @private\r\n     * \r\n     * @param entity 实体\r\n     */\r\n    _setEntity(entity: Entity)\r\n    {\r\n        this._entity = entity;\r\n    }\r\n\r\n    //------------------------------------------\r\n    // Static Functions\r\n    //------------------------------------------\r\n\r\n    //------------------------------------------\r\n    // Protected Properties\r\n    //------------------------------------------\r\n    protected _entity: Entity;\r\n\r\n    //------------------------------------------\r\n    // Protected Functions\r\n    //------------------------------------------\r\n\r\n    //------------------------------------------\r\n    // Private Properties\r\n    //------------------------------------------\r\n}\r\n\r\n","\r\n\r\n/**\r\n * 资源扩展名\r\n */\r\nexport enum AssetType\r\n{\r\n    /**\r\n     * 文件夹\r\n     */\r\n    folder = \"folder\",\r\n\r\n    /**\r\n     * 音频\r\n     */\r\n    audio = \"audio\",\r\n\r\n    /**\r\n     * ts文件\r\n     */\r\n    ts = \"ts\",\r\n    /**\r\n     * js文件\r\n     */\r\n    js = \"js\",\r\n    /**\r\n     * 文本文件\r\n     */\r\n    txt = \"txt\",\r\n    /**\r\n     * json文件\r\n     */\r\n    json = \"json\",\r\n    /**\r\n     * OBJ模型资源附带的材质文件\r\n     */\r\n    mtl = \"mtl\",\r\n    /**\r\n     * OBJ模型文件\r\n     */\r\n    obj = \"obj\",\r\n    /**\r\n     * MD5模型文件\r\n     */\r\n    md5mesh = \"md5mesh\",\r\n    /**\r\n     * MD5动画\r\n     */\r\n    md5anim = \"md5anim\",\r\n    /**\r\n     * 魔兽MDL模型\r\n     */\r\n    mdl = \"mdl\",\r\n    // -- feng3d中的类型\r\n    /**\r\n     * 纹理\r\n     */\r\n    texture = \"texture\",\r\n    /**\r\n     * 立方体纹理\r\n     */\r\n    texturecube = \"texturecube\",\r\n    /**\r\n     * 材质\r\n     */\r\n    material = \"material\",\r\n    /**\r\n     * 几何体\r\n     */\r\n    geometry = \"geometry\",\r\n    /**\r\n     * 3d节点\r\n     */\r\n    node3d = \"node3d\",\r\n    /**\r\n     * 场景\r\n     */\r\n    scene = \"scene\",\r\n    /**\r\n     * 动画\r\n     */\r\n    anim = \"anim\",\r\n    /**\r\n     * 着色器\r\n     */\r\n    shader = \"shader\",\r\n    /**\r\n     * 脚本\r\n     */\r\n    script = \"script\",\r\n}\r\n\r\n","import { Component } from \"../component/Component\";\r\nimport { Box3 } from \"@feng3d/math\";\r\nimport { Node3D } from \"./Node3D\";\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface EntityEventMap\r\n    {\r\n        /**\r\n         * 获取自身包围盒\r\n         */\r\n        getSelfBounds: { bounds: Box3[] };\r\n\r\n        /**\r\n         * 自身包围盒发生变化\r\n         */\r\n        selfBoundsChanged: Component;\r\n    }\r\n}\r\n\r\n/**\r\n * 轴对称包围盒\r\n * \r\n * 用于优化计算射线碰撞检测以及视锥剔除等。\r\n */\r\nexport class BoundingBox\r\n{\r\n    private _node3d: Node3D;\r\n\r\n    protected _selfLocalBounds = new Box3();\r\n    protected _selfWorldBounds = new Box3();\r\n    protected _worldBounds = new Box3();\r\n\r\n    protected _selfBoundsInvalid = true;\r\n    protected _selfWorldBoundsInvalid = true;\r\n    protected _worldBoundsInvalid = true;\r\n\r\n    constructor(node3d: Node3D)\r\n    {\r\n        this._node3d = node3d;\r\n        node3d.on(\"selfBoundsChanged\", this._invalidateSelfLocalBounds, this);\r\n        node3d.on(\"scenetransformChanged\", this._invalidateSelfWorldBounds, this);\r\n    }\r\n\r\n    /**\r\n     * 自身局部包围盒通常有Renderable组件提供\r\n     */\r\n    get selfLocalBounds()\r\n    {\r\n        if (this._selfBoundsInvalid)\r\n        {\r\n            this._updateSelfBounds();\r\n            this._selfBoundsInvalid = false;\r\n        }\r\n        return this._selfLocalBounds;\r\n    }\r\n\r\n    /**\r\n     * 自身世界空间的包围盒\r\n     */\r\n    get selfWorldBounds()\r\n    {\r\n        if (this._selfWorldBoundsInvalid)\r\n        {\r\n            this._updateSelfWorldBounds();\r\n            this._selfWorldBoundsInvalid = false;\r\n        }\r\n\r\n        return this._selfWorldBounds;\r\n    }\r\n\r\n    /**\r\n     * 世界包围盒\r\n     */\r\n    get worldBounds()\r\n    {\r\n        if (this._worldBoundsInvalid)\r\n        {\r\n            this._updateWorldBounds();\r\n            this._worldBoundsInvalid = false;\r\n        }\r\n        return this._worldBounds;\r\n    }\r\n\r\n    /**\r\n     * 更新自身包围盒\r\n     * \r\n     * 自身包围盒通常有Renderable组件提供\r\n     */\r\n    protected _updateSelfBounds()\r\n    {\r\n        var bounds = this._selfLocalBounds.empty();\r\n\r\n        // 获取对象上的包围盒\r\n        var data: { bounds: Box3[]; } = { bounds: [] };\r\n        this._node3d.emit(\"getSelfBounds\", data);\r\n\r\n        data.bounds.forEach(b =>\r\n        {\r\n            bounds.union(b);\r\n        });\r\n        if (bounds.isEmpty())\r\n        {\r\n            bounds.min.setZero();\r\n            bounds.max.setZero();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新自身世界包围盒\r\n     */\r\n    protected _updateSelfWorldBounds()\r\n    {\r\n        this._selfWorldBounds.copy(this.selfLocalBounds).applyMatrix(this._node3d.localToWorldMatrix);\r\n    }\r\n\r\n    /**\r\n     * 更新世界包围盒\r\n     */\r\n    protected _updateWorldBounds()\r\n    {\r\n        this._worldBounds.copy(this.selfWorldBounds);\r\n\r\n        // 获取子对象的世界包围盒与自身世界包围盒进行合并\r\n        this._node3d.children.forEach(element =>\r\n        {\r\n            this._worldBounds.union(element.boundingBox.worldBounds);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 使自身包围盒失效\r\n     */\r\n    protected _invalidateSelfLocalBounds()\r\n    {\r\n        if (this._selfBoundsInvalid) return;\r\n\r\n        this._selfBoundsInvalid = true;\r\n        this._invalidateSelfWorldBounds();\r\n    }\r\n\r\n    /**\r\n     * 使自身世界包围盒失效\r\n     */\r\n    protected _invalidateSelfWorldBounds()\r\n    {\r\n        if (this._selfWorldBoundsInvalid) return;\r\n\r\n        this._selfWorldBoundsInvalid = true;\r\n        this._invalidateWorldBounds();\r\n    }\r\n\r\n    /**\r\n     * 使世界包围盒失效\r\n     */\r\n    protected _invalidateWorldBounds()\r\n    {\r\n        if (this._worldBoundsInvalid) return;\r\n\r\n        this._worldBoundsInvalid = true;\r\n\r\n        // 世界包围盒失效会影响父对象世界包围盒失效\r\n        var parent = this._node3d.parent;\r\n        if (!parent) return;\r\n        parent.boundingBox._invalidateWorldBounds();\r\n    }\r\n}\r\n","import type { IVector3 } from \"@feng3d/math\";\r\nimport { Box3, Matrix4x4, Quaternion, Ray3, Vector3 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { Constructor, mathUtil } from \"@feng3d/polyfill\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { AssetType } from \"../assets/AssetType\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { Component, Components, RegisterComponent } from \"../component/Component\";\r\nimport type { Component3DEventMap } from \"../component/Component3D\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { BoundingBox } from \"./BoundingBox\";\r\n\r\ndeclare module \"../component/Component3D\"\r\n{\r\n    export interface Component3DEventMap\r\n    {\r\n        /**\r\n         * 添加了子对象，当child被添加到parent中时派发冒泡事件\r\n         */\r\n        addChild: { parent: Node3D, child: Node3D }\r\n        /**\r\n         * 删除了子对象，当child被parent移除时派发冒泡事件\r\n         */\r\n        removeChild: { parent: Node3D, child: Node3D };\r\n\r\n        /**\r\n         * 自身被添加到父对象中事件\r\n         */\r\n        added: { parent: Node3D };\r\n\r\n        /**\r\n         * 自身从父对象中移除事件\r\n         */\r\n        removed: { parent: Node3D };\r\n\r\n        /**\r\n         * 当GameObject的scene属性被设置是由Scene派发\r\n         */\r\n        addedToScene: Node3D;\r\n\r\n        /**\r\n         * 当GameObject的scene属性被清空时由Scene派发\r\n         */\r\n        removedFromScene: Node3D;\r\n\r\n        /**\r\n         * 变换矩阵变化\r\n         */\r\n        transformChanged: Node3D;\r\n        /**\r\n         * \r\n         */\r\n        updateLocalToWorldMatrix: Node3D;\r\n\r\n        /**\r\n         * 场景矩阵变化\r\n         */\r\n        scenetransformChanged: Node3D;\r\n    }\r\n}\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { Node3D: Node3D; }\r\n}\r\n\r\n/**\r\n * 变换\r\n * \r\n * 物体的位置、旋转和比例。\r\n * \r\n * 场景中的每个对象都有一个变换。它用于存储和操作对象的位置、旋转和缩放。每个转换都可以有一个父元素，它允许您分层应用位置、旋转和缩放\r\n */\r\n@RegisterComponent({ single: true })\r\nexport class Node3D<T extends Component3DEventMap = Component3DEventMap> extends Component<T>\r\n{\r\n    __class__: \"feng3d.Node3D\";\r\n\r\n    assetType = AssetType.node3d;\r\n\r\n    /**\r\n     * 预设资源编号\r\n     */\r\n    @serialize\r\n    prefabId: string;\r\n\r\n    /**\r\n     * 资源编号\r\n     */\r\n    @serialize\r\n    assetId: string;\r\n\r\n    /**\r\n     * 自身以及子对象是否支持鼠标拾取\r\n     */\r\n    @serialize\r\n    mouseEnabled = true;\r\n\r\n    /**\r\n     * 创建一个实体，该类为虚类\r\n     */\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        this._renderAtomic.uniforms.u_modelMatrix = () => this.localToWorldMatrix;\r\n        this._renderAtomic.uniforms.u_ITModelMatrix = () => this.ITlocalToWorldMatrix;\r\n    }\r\n\r\n    /**\r\n     * 世界坐标\r\n     */\r\n    get worldPosition()\r\n    {\r\n        return this.localToWorldMatrix.getPosition();\r\n    }\r\n\r\n    /**\r\n     * X轴坐标。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    get x()\r\n    {\r\n        return this._x;\r\n    }\r\n\r\n    set x(v)\r\n    {\r\n        if (this._x === v) return;\r\n        this._x = v;\r\n        this._positionChanged();\r\n    }\r\n    private _x = 0;\r\n\r\n    /**\r\n     * Y轴坐标。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    get y()\r\n    {\r\n        return this._y;\r\n    }\r\n\r\n    set y(v)\r\n    {\r\n        if (this._y === v) return;\r\n        this._y = v;\r\n        this._positionChanged();\r\n    }\r\n    private _y = 0;\r\n\r\n    /**\r\n     * Z轴坐标。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    get z()\r\n    {\r\n        return this._z;\r\n    }\r\n\r\n    set z(v)\r\n    {\r\n        if (this._z === v) return;\r\n        this._z = v;\r\n        this._positionChanged();\r\n    }\r\n    private _z = 0;\r\n\r\n    /**\r\n     * X轴旋转角度。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    get rx()\r\n    {\r\n        return this._rx;\r\n    }\r\n\r\n    set rx(v)\r\n    {\r\n        if (this._rx === v) return;\r\n        this._rx = v;\r\n        this._rotationChanged();\r\n    }\r\n    private _rx = 0;\r\n\r\n    /**\r\n     * Y轴旋转角度。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    get ry()\r\n    {\r\n        return this._ry;\r\n    }\r\n\r\n    set ry(v)\r\n    {\r\n        if (this._ry === v) return;\r\n        this._ry = v;\r\n\r\n        this._rotationChanged();\r\n    }\r\n    private _ry = 0;\r\n\r\n    /**\r\n     * Z轴旋转角度。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    get rz()\r\n    {\r\n        return this._rz;\r\n    }\r\n    set rz(v)\r\n    {\r\n        if (this._rz === v) return;\r\n        this._rz = v;\r\n        this._rotationChanged();\r\n    }\r\n    private _rz = 0;\r\n\r\n    /**\r\n     * X轴缩放。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    get sx()\r\n    {\r\n        return this._sx;\r\n    }\r\n\r\n    set sx(v)\r\n    {\r\n        if (this._sx === v) return;\r\n        this._sx = v;\r\n        this._scaleChanged();\r\n    }\r\n    private _sx = 1;\r\n\r\n    /**\r\n     * Y轴缩放。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    get sy()\r\n    {\r\n        return this._sy;\r\n    }\r\n\r\n    set sy(v)\r\n    {\r\n        if (this._sy === v) return;\r\n        this._sy = v;\r\n        this._scaleChanged();\r\n    }\r\n    private _sy = 1;\r\n\r\n    /**\r\n     * Z轴缩放。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    get sz()\r\n    {\r\n        return this._sz;\r\n    }\r\n\r\n    set sz(v)\r\n    {\r\n        if (this._sz === v) return;\r\n        this._sz = v;\r\n        this._scaleChanged();\r\n    }\r\n    private _sz = 1;\r\n\r\n    getPosition<T extends IVector3 = Vector3>(p: T = <any>new Vector3()): T\r\n    {\r\n        p.x = this._x;\r\n        p.y = this._y;\r\n        p.z = this._z;\r\n        return p;\r\n    }\r\n\r\n    setPosition<T extends IVector3>(p: T)\r\n    {\r\n        this.x = p.x;\r\n        this.y = p.y;\r\n        this.z = p.z;\r\n        return this;\r\n    }\r\n\r\n    getRotation<T extends IVector3 = Vector3>(p: T = <any>new Vector3()): T\r\n    {\r\n        p.x = this._rx;\r\n        p.y = this._ry;\r\n        p.z = this._rz;\r\n        return p;\r\n    }\r\n\r\n    setRotation<T extends IVector3>(p: T)\r\n    {\r\n        this.rx = p.x;\r\n        this.ry = p.y;\r\n        this.rz = p.z;\r\n        return this;\r\n    }\r\n\r\n    getScale<T extends IVector3 = Vector3>(p: T = <any>new Vector3()): T\r\n    {\r\n        p.x = this._sx;\r\n        p.y = this._sy;\r\n        p.z = this._sz;\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * 本地四元素旋转\r\n     */\r\n    get orientation()\r\n    {\r\n        this._orientation.fromMatrix(this.matrix);\r\n        return this._orientation;\r\n    }\r\n\r\n    set orientation(value)\r\n    {\r\n        var angles = value.toEulerAngles();\r\n        angles.scaleNumber(mathUtil.RAD2DEG);\r\n        this.rx = angles.x;\r\n        this.ry = angles.y;\r\n        this.rz = angles.z;\r\n    }\r\n\r\n    /**\r\n     * 是否显示\r\n     */\r\n    @serialize\r\n    get visible()\r\n    {\r\n        return this._visible;\r\n    }\r\n    set visible(v)\r\n    {\r\n        if (this._visible == v) return;\r\n        this._visible = v;\r\n        this._invalidateGlobalVisible();\r\n    }\r\n    private _visible = true;\r\n\r\n    /**\r\n     * 全局是否可见\r\n     */\r\n    get globalVisible()\r\n    {\r\n        if (this._globalVisibleInvalid)\r\n        {\r\n            this._updateGlobalVisible();\r\n            this._globalVisibleInvalid = false;\r\n        }\r\n        return this._globalVisible;\r\n    }\r\n    protected _globalVisible = false;\r\n    protected _globalVisibleInvalid = true;\r\n\r\n    /**\r\n     * 本地变换矩阵\r\n     */\r\n    get matrix()\r\n    {\r\n        if (this._matrixInvalid)\r\n        {\r\n            this._matrixInvalid = false;\r\n            this._updateMatrix();\r\n        }\r\n        return this._matrix;\r\n    }\r\n\r\n    set matrix(v)\r\n    {\r\n        var trs = v.toTRS();\r\n        this._x = trs[0].x;\r\n        this._y = trs[0].y;\r\n        this._z = trs[0].z;\r\n\r\n        this._rx = trs[1].x;\r\n        this._ry = trs[1].y;\r\n        this._rz = trs[1].z;\r\n\r\n        this._sx = trs[2].x;\r\n        this._sy = trs[2].y;\r\n        this._sz = trs[2].z;\r\n\r\n        this._matrix.fromArray(v.elements);\r\n        this._invalidateTransform()\r\n        this._matrixInvalid = false;\r\n    }\r\n\r\n    /**\r\n     * 本地旋转矩阵\r\n     */\r\n    get rotationMatrix()\r\n    {\r\n        if (this._rotationMatrixInvalid)\r\n        {\r\n            this._rotationMatrix.setRotation(tempVector3_1.set(this._rx, this._ry, this._rz));\r\n            this._rotationMatrixInvalid = false;\r\n        }\r\n        return this._rotationMatrix;\r\n    }\r\n\r\n    /**\r\n     * 轴对称包围盒\r\n     */\r\n    get boundingBox()\r\n    {\r\n        if (!this._boundingBox)\r\n        {\r\n            this._boundingBox = new BoundingBox(this);\r\n        }\r\n        return this._boundingBox;\r\n    }\r\n    private _boundingBox: BoundingBox;\r\n\r\n    get parent()\r\n    {\r\n        return this._parent;\r\n    }\r\n\r\n    get scene()\r\n    {\r\n        return this._scene;\r\n    }\r\n\r\n    /**\r\n     * 子对象\r\n     */\r\n    @serialize\r\n    get children()\r\n    {\r\n        return this._children.concat();\r\n    }\r\n\r\n    set children(value)\r\n    {\r\n        if (!value) return;\r\n        for (var i = this._children.length - 1; i >= 0; i--)\r\n        {\r\n            this.removeChildAt(i)\r\n        }\r\n        for (var i = 0; i < value.length; i++)\r\n        {\r\n            this.addChild(value[i]);\r\n        }\r\n    }\r\n\r\n    get numChildren()\r\n    {\r\n        return this._children.length;\r\n    }\r\n\r\n    moveForward(distance: number)\r\n    {\r\n        this.translateLocal(Vector3.Z_AXIS, distance);\r\n    }\r\n\r\n    moveBackward(distance: number)\r\n    {\r\n        this.translateLocal(Vector3.Z_AXIS, -distance);\r\n    }\r\n\r\n    moveLeft(distance: number)\r\n    {\r\n        this.translateLocal(Vector3.X_AXIS, -distance);\r\n    }\r\n\r\n    moveRight(distance: number)\r\n    {\r\n        this.translateLocal(Vector3.X_AXIS, distance);\r\n    }\r\n\r\n    moveUp(distance: number)\r\n    {\r\n        this.translateLocal(Vector3.Y_AXIS, distance);\r\n    }\r\n\r\n    moveDown(distance: number)\r\n    {\r\n        this.translateLocal(Vector3.Y_AXIS, -distance);\r\n    }\r\n\r\n    translate(axis: Vector3, distance: number)\r\n    {\r\n        var x = axis.x, y = axis.y, z = axis.z;\r\n        var len = distance / Math.sqrt(x * x + y * y + z * z);\r\n        this.x += x * len;\r\n        this.y += y * len;\r\n        this.z += z * len;\r\n    }\r\n\r\n    translateLocal(axis: Vector3, distance: number)\r\n    {\r\n        var x = axis.x, y = axis.y, z = axis.z;\r\n        var len = distance / Math.sqrt(x * x + y * y + z * z);\r\n        var matrix = this.matrix.clone();\r\n        matrix.prependTranslation(x * len, y * len, z * len);\r\n        var p = matrix.getPosition();\r\n        this.x = p.x;\r\n        this.y = p.y;\r\n        this.z = p.z;\r\n        this._invalidateSceneTransform();\r\n    }\r\n\r\n    pitch(angle: number)\r\n    {\r\n        this.rotate(Vector3.X_AXIS, angle);\r\n    }\r\n\r\n    yaw(angle: number)\r\n    {\r\n        this.rotate(Vector3.Y_AXIS, angle);\r\n    }\r\n\r\n    roll(angle: number)\r\n    {\r\n        this.rotate(Vector3.Z_AXIS, angle);\r\n    }\r\n\r\n    rotateTo(ax: number, ay: number, az: number)\r\n    {\r\n        this.rx = ax;\r\n        this.ry = ay;\r\n        this.rz = az;\r\n    }\r\n\r\n    /**\r\n     * 绕指定轴旋转，不受位移与缩放影响\r\n     * @param    axis               旋转轴\r\n     * @param    angle              旋转角度\r\n     * @param    pivotPoint         旋转中心点\r\n     * \r\n     */\r\n    rotate(axis: Vector3, angle: number, pivotPoint?: Vector3): void\r\n    {\r\n        //转换位移\r\n        var positionMatrix = Matrix4x4.fromPosition(this._x, this._y, this._z);\r\n        positionMatrix.appendRotation(axis, angle, pivotPoint);\r\n        var position = positionMatrix.getPosition();\r\n        //转换旋转\r\n        var rotationMatrix = Matrix4x4.fromRotation(this.rx, this.ry, this.rz);\r\n        rotationMatrix.appendRotation(axis, angle, pivotPoint);\r\n        var newrotation = rotationMatrix.toTRS()[1];\r\n        var v = Math.round((newrotation.x - this.rx) / 180);\r\n        if (v % 2 != 0)\r\n        {\r\n            newrotation.x += 180;\r\n            newrotation.y = 180 - newrotation.y;\r\n            newrotation.z += 180;\r\n        }\r\n        //\r\n        var toRound = (a: number, b: number, c = 360) =>\r\n        {\r\n            return Math.round((b - a) / c) * c + a;\r\n        }\r\n        newrotation.x = toRound(newrotation.x, this.rx);\r\n        newrotation.y = toRound(newrotation.y, this.ry);\r\n        newrotation.z = toRound(newrotation.z, this.rz);\r\n        //\r\n        this.x = position.x;\r\n        this.y = position.y;\r\n        this.z = position.z;\r\n        this.rx = newrotation.x;\r\n        this.ry = newrotation.y;\r\n        this.rz = newrotation.z;\r\n        //\r\n        this._invalidateSceneTransform();\r\n    }\r\n\r\n    /**\r\n     * 看向目标位置\r\n     * \r\n     * @param target    目标位置\r\n     * @param upAxis    向上朝向\r\n     */\r\n    lookAt(target: Vector3, upAxis?: Vector3)\r\n    {\r\n        this._updateMatrix();\r\n        this._matrix.lookAt(target, upAxis);\r\n        var trs = this._matrix.toTRS();\r\n        //\r\n        this._x = trs[0].x;\r\n        this._y = trs[0].y;\r\n        this._z = trs[0].z;\r\n        this._rx = trs[1].x;\r\n        this._ry = trs[1].y;\r\n        this._rz = trs[1].z;\r\n        this._sx = trs[2].x;\r\n        this._sy = trs[2].y;\r\n        this._sz = trs[2].z;\r\n        //\r\n        this._matrixInvalid = false;\r\n    }\r\n\r\n    /**\r\n     * 将一个点从局部空间变换到世界空间的矩阵。\r\n     */\r\n    get localToWorldMatrix()\r\n    {\r\n        if (this._localToWorldMatrixInvalid)\r\n        {\r\n            this._localToWorldMatrixInvalid = false;\r\n            this._updateLocalToWorldMatrix();\r\n        }\r\n        return this._localToWorldMatrix;\r\n    }\r\n\r\n    set localToWorldMatrix(value)\r\n    {\r\n        value = value.clone();\r\n        this.parent && value.append(this.parent.worldToLocalMatrix);\r\n        this.matrix = value;\r\n    }\r\n\r\n    /**\r\n     * 本地转世界逆转置矩阵\r\n     */\r\n    get ITlocalToWorldMatrix()\r\n    {\r\n        if (this._ITlocalToWorldMatrixInvalid)\r\n        {\r\n            this._ITlocalToWorldMatrixInvalid = false;\r\n            this._ITlocalToWorldMatrix.copy(this.localToWorldMatrix)\r\n            this._ITlocalToWorldMatrix.invert().transpose();\r\n        }\r\n        return this._ITlocalToWorldMatrix;\r\n    }\r\n\r\n    /**\r\n     * 将一个点从世界空间转换为局部空间的矩阵。\r\n     */\r\n    get worldToLocalMatrix()\r\n    {\r\n        if (this._worldToLocalMatrixInvalid)\r\n        {\r\n            this._worldToLocalMatrixInvalid = false;\r\n            this._worldToLocalMatrix.copy(this.localToWorldMatrix).invert();\r\n        }\r\n        return this._worldToLocalMatrix;\r\n    }\r\n\r\n    get localToWorldRotationMatrix()\r\n    {\r\n        if (this._localToWorldRotationMatrixInvalid)\r\n        {\r\n            this._localToWorldRotationMatrix.copy(this.rotationMatrix);\r\n            if (this.parent)\r\n                this._localToWorldRotationMatrix.append(this.parent.localToWorldRotationMatrix);\r\n\r\n            this._localToWorldRotationMatrixInvalid = false;\r\n        }\r\n        return this._localToWorldRotationMatrix;\r\n    }\r\n\r\n    get worldToLocalRotationMatrix()\r\n    {\r\n        var mat = this.localToWorldRotationMatrix.clone();\r\n        mat.invert();\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * 根据名称查找对象\r\n     * \r\n     * @param name 对象名称\r\n     */\r\n    find(name: string): Node3D\r\n    {\r\n        if (this.name == name)\r\n            return this;\r\n        for (var i = 0; i < this._children.length; i++)\r\n        {\r\n            var target = this._children[i].find(name);\r\n            if (target)\r\n                return target;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 是否包含指定对象\r\n     * \r\n     * @param child 可能的子孙对象\r\n     */\r\n    contains(child: Node3D)\r\n    {\r\n        var checkitem = child;\r\n        do\r\n        {\r\n            if (checkitem == this)\r\n                return true;\r\n            checkitem = checkitem.parent;\r\n        } while (checkitem);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 添加子对象\r\n     * \r\n     * @param child 子对象\r\n     */\r\n    addChild(child: Node3D)\r\n    {\r\n        if (child == null)\r\n            return;\r\n        if (child.parent == this)\r\n        {\r\n            // 把子对象移动到最后\r\n            var childIndex = this._children.indexOf(child);\r\n            if (childIndex != -1) this._children.splice(childIndex, 1);\r\n            this._children.push(child);\r\n        } else\r\n        {\r\n            if (child.contains(this))\r\n            {\r\n                console.error(\"无法添加到自身中!\");\r\n                return;\r\n            }\r\n            if (child._parent) child._parent.removeChild(child);\r\n            child._setParent(this);\r\n            this._children.push(child);\r\n            child.emit(\"added\", { parent: this });\r\n            this.emit(\"addChild\", { child: child, parent: this }, true);\r\n        }\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * 添加子对象\r\n     * \r\n     * @param children 子对象\r\n     */\r\n    addChildren(...children: Node3D[])\r\n    {\r\n        for (let i = 0; i < children.length; i++)\r\n        {\r\n            this.addChild(children[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除自身\r\n     */\r\n    remove()\r\n    {\r\n        if (this.parent) this.parent.removeChild(this);\r\n    }\r\n\r\n    /**\r\n     * 移除所有子对象\r\n     */\r\n    removeChildren()\r\n    {\r\n        for (let i = this.numChildren - 1; i >= 0; i--)\r\n        {\r\n            this.removeChildAt(i);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除子对象\r\n     * \r\n     * @param child 子对象\r\n     */\r\n    removeChild(child: Node3D)\r\n    {\r\n        if (child == null) return;\r\n        var childIndex = this._children.indexOf(child);\r\n        if (childIndex != -1) this.removeChildInternal(childIndex, child);\r\n    }\r\n\r\n    /**\r\n     * 删除指定位置的子对象\r\n     * \r\n     * @param index 需要删除子对象的所有\r\n     */\r\n    removeChildAt(index: number)\r\n    {\r\n        var child = this._children[index];\r\n        return this.removeChildInternal(index, child);\r\n    }\r\n\r\n    /**\r\n     * 获取指定位置的子对象\r\n     * \r\n     * @param index \r\n     */\r\n    getChildAt(index: number)\r\n    {\r\n        index = index;\r\n        return this._children[index];\r\n    }\r\n\r\n    /**\r\n     * 获取子对象列表（备份）\r\n     */\r\n    getChildren()\r\n    {\r\n        return this._children.concat();\r\n    }\r\n\r\n    /**\r\n     * 将方向从局部空间转换到世界空间。\r\n     * \r\n     * @param direction 局部空间方向\r\n     */\r\n    transformDirection(direction: Vector3)\r\n    {\r\n        direction = this.localToWolrdDirection(direction);\r\n        return direction;\r\n    }\r\n\r\n    /**\r\n     * 将方向从局部空间转换到世界空间。\r\n     * \r\n     * @param direction 局部空间方向\r\n     */\r\n    localToWolrdDirection(direction: Vector3)\r\n    {\r\n        if (!this.parent)\r\n            return direction.clone();\r\n        var matrix = this.parent.localToWorldRotationMatrix;\r\n        direction = matrix.transformPoint3(direction);\r\n        return direction;\r\n    }\r\n\r\n    /**\r\n     * 将包围盒从局部空间转换到世界空间\r\n     * \r\n     * @param box 变换前的包围盒\r\n     * @param out 变换之后的包围盒\r\n     * \r\n     * @returns 变换之后的包围盒\r\n     */\r\n    localToWolrdBox(box: Box3, out = new Box3())\r\n    {\r\n        if (!this.parent)\r\n            return out.copy(box);\r\n        var matrix = this.parent.localToWorldMatrix;\r\n        box.applyMatrixTo(matrix, out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 将位置从局部空间转换为世界空间。\r\n     * \r\n     * @param position 局部空间位置\r\n     */\r\n    transformPoint(position: Vector3)\r\n    {\r\n        position = this.localToWorldPoint(position);\r\n        return position;\r\n    }\r\n\r\n    /**\r\n     * 将位置从局部空间转换为世界空间。\r\n     * \r\n     * @param position 局部空间位置\r\n     */\r\n    localToWorldPoint(position: Vector3)\r\n    {\r\n        if (!this.parent)\r\n            return position.clone();\r\n        position = this.parent.localToWorldMatrix.transformPoint3(position);\r\n        return position;\r\n    }\r\n\r\n    /**\r\n     * 将向量从局部空间变换到世界空间。\r\n     * \r\n     * @param vector 局部空间向量\r\n     */\r\n    transformVector(vector: Vector3)\r\n    {\r\n        vector = this.localToWorldVector(vector);\r\n        return vector;\r\n    }\r\n\r\n    /**\r\n     * 将向量从局部空间变换到世界空间。\r\n     * \r\n     * @param vector 局部空间位置\r\n     */\r\n    localToWorldVector(vector: Vector3)\r\n    {\r\n        if (!this.parent)\r\n            return vector.clone();\r\n        var matrix = this.parent.localToWorldMatrix;\r\n        vector = matrix.transformVector3(vector);\r\n        return vector;\r\n    }\r\n\r\n    /**\r\n     * Transforms a direction from world space to local space. The opposite of Transform.TransformDirection.\r\n     * \r\n     * 将一个方向从世界空间转换到局部空间。\r\n     */\r\n    inverseTransformDirection(direction: Vector3)\r\n    {\r\n        direction = this.worldToLocalDirection(direction)\r\n        return direction;\r\n    }\r\n\r\n    /**\r\n     * 将一个方向从世界空间转换到局部空间。\r\n     */\r\n    worldToLocalDirection(direction: Vector3)\r\n    {\r\n        if (!this.parent)\r\n            return direction.clone();\r\n        var matrix = this.parent.localToWorldRotationMatrix.clone().invert();\r\n        direction = matrix.transformPoint3(direction);\r\n        return direction;\r\n    }\r\n\r\n    /**\r\n     * 将位置从世界空间转换为局部空间。\r\n     * \r\n     * @param position 世界坐标系中位置\r\n     */\r\n    worldToLocalPoint(position: Vector3, out = new Vector3())\r\n    {\r\n        if (!this.parent)\r\n            return out.copy(position);\r\n        position = this.parent.worldToLocalMatrix.transformPoint3(position, out);\r\n        return position;\r\n    }\r\n\r\n    /**\r\n     * 将向量从世界空间转换为局部空间\r\n     * \r\n     * @param vector 世界坐标系中向量\r\n     */\r\n    worldToLocalVector(vector: Vector3)\r\n    {\r\n        if (!this.parent)\r\n            return vector.clone();\r\n        vector = this.parent.worldToLocalMatrix.transformVector3(vector);\r\n        return vector;\r\n    }\r\n\r\n    /**\r\n     * 将 Ray3 从世界空间转换为局部空间。\r\n     * \r\n     * @param worldRay 世界空间射线。\r\n     * @param localRay 局部空间射线。\r\n     */\r\n    rayWorldToLocal(worldRay: Ray3, localRay = new Ray3())\r\n    {\r\n        this.worldToLocalMatrix.transformRay(worldRay, localRay);\r\n        return localRay;\r\n    }\r\n\r\n    /**\r\n     * 从自身与子代（孩子，孩子的孩子，...）Entity 中获取所有指定类型的组件\r\n     * \r\n     * @param type\t\t要检索的组件的类型。\r\n     * @return\t\t\t返回与给出类定义一致的组件\r\n     */\r\n    getComponentsInChildren<T extends Components>(type?: Constructor<T>, filter?: (compnent: T) => {\r\n        /**\r\n         * 是否继续查找子项\r\n         */\r\n        findchildren: boolean,\r\n        /**\r\n         * 是否为需要查找的组件\r\n         */\r\n        value: boolean\r\n    }, result?: T[]): T[]\r\n    {\r\n        result = result || [];\r\n        var findchildren = true;\r\n        var cls = type;\r\n        var components = this.entity.components;\r\n        for (var i = 0, n = components.length; i < n; i++)\r\n        {\r\n            var item = <T>components[i];\r\n            if (!cls)\r\n            {\r\n                result.push(item);\r\n            } else if (item instanceof cls)\r\n            {\r\n                if (filter)\r\n                {\r\n                    var filterresult = filter(item);\r\n                    filterresult && filterresult.value && result.push(item);\r\n                    findchildren = filterresult ? (filterresult && filterresult.findchildren) : false;\r\n                }\r\n                else\r\n                {\r\n                    result.push(item);\r\n                }\r\n            }\r\n        }\r\n        if (findchildren)\r\n        {\r\n            for (var i = 0, n = this.numChildren; i < n; i++)\r\n            {\r\n                this._children[i].getComponentsInChildren(type, filter, result);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 从父代（父亲，父亲的父亲，...）中获取组件\r\n     * \r\n     * @param type\t\t类定义\r\n     * @return\t\t\t返回与给出类定义一致的组件\r\n     */\r\n    getComponentsInParents<T extends Components>(type?: Constructor<T>, result?: T[]): T[]\r\n    {\r\n        result = result || [];\r\n        var parent = this.parent;\r\n        while (parent)\r\n        {\r\n            var compnent = parent.getComponent(type);\r\n            compnent && result.push(compnent);\r\n            parent = parent.parent;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    beforeRender(renderAtomic: RenderAtomic, scene: Scene, camera: Camera)\r\n    {\r\n        Object.assign(renderAtomic.uniforms, this._renderAtomic.uniforms);\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    dispose()\r\n    {\r\n        if (this.parent)\r\n            this.parent.removeChild(this);\r\n        for (var i = this._children.length - 1; i >= 0; i--)\r\n        {\r\n            this.removeChildAt(i);\r\n        }\r\n        super.dispose();\r\n    }\r\n\r\n    disposeWithChildren()\r\n    {\r\n        this.dispose();\r\n        while (this.numChildren > 0)\r\n            this._children[0].dispose();\r\n    }\r\n\r\n    private readonly _orientation = new Quaternion();\r\n\r\n    protected readonly _matrix = new Matrix4x4();\r\n    protected _matrixInvalid = false;\r\n\r\n    protected readonly _rotationMatrix = new Matrix4x4();\r\n    protected _rotationMatrixInvalid = false;\r\n\r\n    protected readonly _localToWorldMatrix = new Matrix4x4();\r\n    protected _localToWorldMatrixInvalid = false;\r\n\r\n    protected readonly _ITlocalToWorldMatrix = new Matrix4x4();\r\n    protected _ITlocalToWorldMatrixInvalid = false;\r\n\r\n    protected readonly _worldToLocalMatrix = new Matrix4x4();\r\n    protected _worldToLocalMatrixInvalid = false;\r\n\r\n    protected readonly _localToWorldRotationMatrix = new Matrix4x4();\r\n    protected _localToWorldRotationMatrixInvalid = false;\r\n\r\n    protected _parent: Node3D;\r\n    protected _children: Node3D[] = [];\r\n    protected _scene: Scene;\r\n\r\n    private _renderAtomic = new RenderAtomic();\r\n\r\n    private _positionChanged()\r\n    {\r\n        this._invalidateTransform();\r\n    }\r\n\r\n    private _rotationChanged()\r\n    {\r\n        this._invalidateTransform();\r\n    }\r\n\r\n    private _scaleChanged()\r\n    {\r\n        this._invalidateTransform();\r\n    }\r\n\r\n    private _setParent(value: Node3D)\r\n    {\r\n        this._parent = value;\r\n        this.updateScene();\r\n        this._invalidateSceneTransform();\r\n    }\r\n\r\n    private updateScene()\r\n    {\r\n        var newScene = this._parent?._scene;\r\n        if (this._scene == newScene)\r\n            return;\r\n        if (this._scene)\r\n        {\r\n            this.emit(\"removedFromScene\", this);\r\n        }\r\n        this._scene = newScene;\r\n        if (this._scene)\r\n        {\r\n            this.emit(\"addedToScene\", this);\r\n        }\r\n        this._updateChildrenScene();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _updateChildrenScene()\r\n    {\r\n        for (let i = 0, n = this._children.length; i < n; i++)\r\n        {\r\n            this._children[i].updateScene();\r\n        }\r\n    }\r\n\r\n    private removeChildInternal(childIndex: number, child: Node3D)\r\n    {\r\n        childIndex = childIndex;\r\n        this._children.splice(childIndex, 1);\r\n        child._setParent(null);\r\n\r\n        child.emit(\"removed\", { parent: this });\r\n        this.emit(\"removeChild\", { child: child, parent: this }, true);\r\n    }\r\n\r\n    private _invalidateTransform()\r\n    {\r\n        if (this._matrixInvalid) return;\r\n        this._matrixInvalid = true;\r\n        this._rotationMatrixInvalid = true;\r\n\r\n        this.emit(\"transformChanged\", this);\r\n        this._invalidateSceneTransform();\r\n    }\r\n\r\n    private _invalidateSceneTransform()\r\n    {\r\n        if (this._localToWorldMatrixInvalid) return;\r\n\r\n        this._localToWorldMatrixInvalid = true;\r\n        this._worldToLocalMatrixInvalid = true;\r\n        this._ITlocalToWorldMatrixInvalid = true;\r\n        this._localToWorldRotationMatrixInvalid = true;\r\n\r\n        this.emit(\"scenetransformChanged\", this);\r\n        //\r\n        if (this.entity)\r\n        {\r\n            for (var i = 0, n = this.numChildren; i < n; i++)\r\n            {\r\n                this.children[i]._invalidateSceneTransform();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _updateMatrix()\r\n    {\r\n        this._matrix.fromTRS(tempVector3_1.set(this._x, this._y, this._z), tempVector3_2.set(this._rx, this._ry, this._rz), tempVector3_3.set(this._sx, this._sy, this._sz));\r\n    }\r\n\r\n    private _updateLocalToWorldMatrix()\r\n    {\r\n        this._localToWorldMatrix.copy(this.matrix);\r\n        if (this.parent)\r\n            this._localToWorldMatrix.append(this.parent.localToWorldMatrix);\r\n        this.emit(\"updateLocalToWorldMatrix\", this);\r\n        console.assert(!isNaN(this._localToWorldMatrix.elements[0]));\r\n    }\r\n\r\n    /**\r\n     * 是否加载完成\r\n     */\r\n    get isLoaded()\r\n    {\r\n        if (!this.isSelfLoaded) return false;\r\n        for (let i = 0; i < this.children.length; i++)\r\n        {\r\n            const element = this.children[i];\r\n            if (!element.isLoaded) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 已加载完成或者加载完成时立即调用\r\n     * @param callback 完成回调\r\n     */\r\n    onLoadCompleted(callback: () => void)\r\n    {\r\n        var loadingNum = 0;\r\n        if (!this.isSelfLoaded) \r\n        {\r\n            loadingNum++;\r\n            this.onSelfLoadCompleted(() =>\r\n            {\r\n                loadingNum--;\r\n                if (loadingNum == 0) callback();\r\n            });\r\n        }\r\n        for (let i = 0; i < this.children.length; i++)\r\n        {\r\n            const element = this.children[i];\r\n            if (!element.isLoaded) \r\n            {\r\n                loadingNum++;\r\n                element.onLoadCompleted(() =>\r\n                {\r\n                    loadingNum--;\r\n                    if (loadingNum == 0) callback();\r\n                });\r\n            }\r\n        }\r\n        if (loadingNum == 0) callback();\r\n    }\r\n\r\n    protected _updateGlobalVisible()\r\n    {\r\n        var visible = this.visible;\r\n        if (this.parent)\r\n        {\r\n            visible = visible && this.parent.globalVisible;\r\n        }\r\n        this._globalVisible = visible;\r\n    }\r\n\r\n    protected _invalidateGlobalVisible()\r\n    {\r\n        if (this._globalVisibleInvalid) return;\r\n\r\n        this._globalVisibleInvalid = true;\r\n\r\n        this._children.forEach(c =>\r\n        {\r\n            c._invalidateGlobalVisible();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 申明冒泡函数\r\n     * feng3d.__event_bubble_function__\r\n     */\r\n    protected __event_bubble_function__(): any[]\r\n    {\r\n        return [this.parent];\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param v \r\n     */\r\n    _setScene(v: Scene)\r\n    {\r\n        this._scene = v;\r\n        this._updateChildrenScene();\r\n    }\r\n}\r\n\r\nconst tempVector3_1 = new Vector3();\r\nconst tempVector3_2 = new Vector3();\r\nconst tempVector3_3 = new Vector3();\r\n\r\n\r\n","import { MouseEventMap } from \"../core/Mouse3DManager\";\r\nimport { Node3D } from \"../core/Node3D\";\r\nimport { Constructor } from \"@feng3d/polyfill\";\r\nimport { Component, ComponentEventMap, Components, RegisterComponent } from \"./Component\";\r\n\r\n\r\nexport interface Component3DEventMap extends ComponentEventMap, MouseEventMap\r\n{\r\n}\r\n\r\n/**\r\n * 3D组件\r\n * \r\n * 所有基于3D空间的组件均可继承于该组件。\r\n */\r\n@RegisterComponent({ dependencies: [Node3D] })\r\nexport class Component3D<T extends Component3DEventMap = Component3DEventMap> extends Component<T>\r\n{\r\n    /**\r\n     * The Node3D attached to this Entity (null if there is none attached).\r\n     * \r\n     * 附加到此 Entity 的 Node3D。\r\n     */\r\n    get node3d()\r\n    {\r\n        return this._entity?.getComponent(Node3D);\r\n    }\r\n\r\n    /**\r\n     * Returns all components of Type type in the Entity.\r\n     * \r\n     * 返回 Entity 或其任何子项中类型为 type 的所有组件。\r\n     * \r\n     * @param type\t\t类定义\r\n     * @return\t\t\t返回与给出类定义一致的组件\r\n     */\r\n    getComponentsInChildren<T extends Components>(type?: Constructor<T>, filter?: (compnent: T) => { findchildren: boolean, value: boolean }, result?: T[]): T[]\r\n    {\r\n        return this.node3d.getComponentsInChildren(type, filter, result);\r\n    }\r\n\r\n    /**\r\n     * 从父类中获取组件\r\n     * @param type\t\t类定义\r\n     * @return\t\t\t返回与给出类定义一致的组件\r\n     */\r\n    getComponentsInParents<T extends Components>(type?: Constructor<T>, result?: T[]): T[]\r\n    {\r\n        return this.node3d.getComponentsInParents(type, result);\r\n    }\r\n}\r\n","import { RunEnvironment } from \"../core/RunEnvironment\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { RegisterComponent } from \"./Component\";\r\nimport { Component3D } from \"./Component3D\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { Behaviour: Behaviour; }\r\n}\r\n\r\n/**\r\n * 行为\r\n * \r\n * 可以控制开关的组件\r\n */\r\n@RegisterComponent()\r\nexport class Behaviour extends Component3D\r\n{\r\n    /**\r\n     * 是否启用update方法\r\n     */\r\n    @oav()\r\n    @serialize\r\n    enabled = true;\r\n\r\n    /**\r\n     * 可运行环境\r\n     */\r\n    runEnvironment = RunEnvironment.all;\r\n\r\n    /**\r\n     * Has the Behaviour had enabled called.\r\n     * 是否所在GameObject显示且该行为已启动。\r\n     */\r\n    get isVisibleAndEnabled()\r\n    {\r\n        var v = this.enabled && this.node3d?.globalVisible;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 每帧执行\r\n     */\r\n    update(interval?: number)\r\n    {\r\n    }\r\n\r\n    dispose()\r\n    {\r\n        this.enabled = false;\r\n        super.dispose();\r\n    }\r\n}\r\n","import { Constructor } from \"@feng3d/polyfill\";\r\nimport { ComponentNames, Components } from \"./component/Component\";\r\n\r\n/**\r\n * 添加组件菜单\r\n * \r\n * 在组件类上新增 @AddComponentMenu(\"UI/Text\") 可以把该组件添加到组件菜单上。\r\n * \r\n * @param path 组件菜单中路径\r\n * @param componentOrder 组件菜单中组件的顺序(从低到高)。\r\n */\r\nexport function AddComponentMenu(path: string, componentOrder = 0)\r\n{\r\n    return (target: Constructor<Components>) =>\r\n    {\r\n        if (!menuConfig.component) menuConfig.component = [];\r\n        menuConfig.component.push({ path: path, order: componentOrder, type: <any>target[\"name\"] })\r\n\r\n        menuConfig.component.sort((a, b) => { if (a.path < b.path) return -1; return 1 })\r\n        menuConfig.component.sort((a, b) => a.order - b.order);\r\n    }\r\n}\r\n\r\n/**\r\n * 菜单配置\r\n */\r\nexport const menuConfig: MenuConfig = {};\r\n\r\n/**\r\n * 菜单配置\r\n */\r\nexport interface MenuConfig\r\n{\r\n    /**\r\n     * 组件菜单\r\n     */\r\n    component?: ComponentMenu[];\r\n}\r\n\r\n/**\r\n * 组件菜单\r\n */\r\nexport interface ComponentMenu\r\n{\r\n    /**\r\n     * 组件菜单中路径\r\n     */\r\n    path: string;\r\n    /**\r\n     * 组件菜单中组件的顺序(从低到高)。\r\n     */\r\n    order: number;\r\n    /**\r\n     * 组件类定义\r\n     */\r\n    type: ComponentNames;\r\n}\r\n","import { AssetType } from \"../assets/AssetType\";\r\nimport { Feng3dObject } from \"../core/Feng3dObject\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { PropertyClip } from \"./PropertyClip\";\r\n\r\nexport class AnimationClip extends Feng3dObject\r\n{\r\n    readonly assetType = AssetType.anim;\r\n\r\n    @oav()\r\n    @serialize\r\n    get name()\r\n    {\r\n        return this._name;\r\n    }\r\n    set name(v)\r\n    {\r\n        this._name = v;\r\n    }\r\n    protected _name: string;\r\n\r\n    /**\r\n     * 动画时长，单位ms\r\n     */\r\n    @serialize\r\n    length: number;\r\n\r\n    @oav()\r\n    @serialize\r\n    loop = true;\r\n\r\n    @serialize\r\n    propertyClips: PropertyClip[];\r\n}\r\n","import { Quaternion, Vector3 } from \"@feng3d/math\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\n\r\n\r\nexport class PropertyClip\r\n{\r\n    /**\r\n     * 属性路径\r\n     */\r\n    @serialize\r\n    path: PropertyClipPath;\r\n\r\n    @serialize\r\n    propertyName: string;\r\n\r\n    @serialize\r\n    type: \"Number\" | \"Vector3\" | \"Quaternion\";\r\n\r\n    @serialize\r\n    propertyValues: [number, number[]][];\r\n\r\n    private _cacheValues = {};\r\n    private _propertyValues: [number, number | Vector3 | Quaternion][];\r\n\r\n    getValue(cliptime: number, fps: number)\r\n    {\r\n        var frame = Math.round(fps * cliptime / 1000);\r\n        if (this._cacheValues[frame] != undefined)\r\n            return this._cacheValues[frame];\r\n\r\n        this._propertyValues = this._propertyValues || <any>this.propertyValues.map(v =>\r\n        {\r\n            return [v[0], this.getpropertyValue(v[1])];\r\n        });\r\n        var propertyValues = this._propertyValues;\r\n        var propertyValue = propertyValues[0][1];\r\n        if (cliptime <= propertyValues[0][0]) { }\r\n        else if (cliptime >= propertyValues[propertyValues.length - 1][0])\r\n            propertyValue = propertyValues[propertyValues.length - 1][1];\r\n        else\r\n        {\r\n            for (var j = 0; j < propertyValues.length - 1; j++)\r\n            {\r\n                if (propertyValues[j][0] <= cliptime && cliptime < propertyValues[j + 1][0])\r\n                {\r\n                    propertyValue = this.interpolation(\r\n                        propertyValues[j][1],\r\n                        propertyValues[j + 1][1],\r\n                        (cliptime - propertyValues[j][0]) / (propertyValues[j + 1][0] - propertyValues[j][0])\r\n                    );\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this._cacheValues[frame] = propertyValue;\r\n        return propertyValue;\r\n    }\r\n\r\n    private interpolation(prevalue: ClipPropertyType, nextValue: ClipPropertyType, factor: number)\r\n    {\r\n        var propertyValue: ClipPropertyType;\r\n        if (prevalue instanceof Quaternion)\r\n        {\r\n            propertyValue = prevalue.clone();\r\n            propertyValue.lerp(prevalue, <Quaternion>nextValue, factor);\r\n        } else if (prevalue instanceof Vector3)\r\n        {\r\n            propertyValue = new Vector3(\r\n                prevalue.x * (1 - factor) + (<Vector3>nextValue).x * factor,\r\n                prevalue.y * (1 - factor) + (<Vector3>nextValue).y * factor,\r\n                prevalue.z * (1 - factor) + (<Vector3>nextValue).z * factor,\r\n            );\r\n        } else\r\n        {\r\n            propertyValue = prevalue * (1 - factor) + <number>nextValue * factor;\r\n        }\r\n        return propertyValue;\r\n    }\r\n\r\n    private getpropertyValue(value: number[])\r\n    {\r\n        if (this.type == \"Number\")\r\n            return value[0]\r\n        if (this.type == \"Vector3\")\r\n            return Vector3.fromArray(value);\r\n        if (this.type == \"Quaternion\")\r\n            return Quaternion.fromArray(value);\r\n\r\n        console.error(`未处理 动画数据类型 ${this.type}`);\r\n        console.error(``);\r\n    }\r\n\r\n    cacheIndex: number;\r\n}\r\n\r\n/**\r\n * [time:number,value:number | Vector3 | Quaternion]\r\n */\r\nexport type ClipPropertyType = number | Vector3 | Quaternion;\r\nexport type PropertyClipPath = [PropertyClipPathItemType, string][];\r\n\r\nexport enum PropertyClipPathItemType\r\n{\r\n    Entity,\r\n    Component,\r\n}\r\n","import { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Behaviour } from \"../component/Behaviour\";\r\nimport { getComponentType, RegisterComponent } from \"../component/Component\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { AnimationClip } from \"./AnimationClip\";\r\nimport { PropertyClip, PropertyClipPathItemType } from \"./PropertyClip\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { Animation: Animation; }\r\n}\r\n\r\n@AddComponentMenu(\"Animator/Animation\")\r\n@RegisterComponent()\r\nexport class Animation extends Behaviour\r\n{\r\n    @oav({ component: \"OAVDefault\", componentParam: { dragparam: { accepttype: \"animationclip\", datatype: \"animationclip\" } } })\r\n    @serialize\r\n    @watch(\"_onAnimationChanged\")\r\n    animation: AnimationClip;\r\n\r\n    @oav({ component: \"OAVArray\", componentParam: { dragparam: { accepttype: \"animationclip\", datatype: \"animationclip\" }, defaultItem: () => new AnimationClip() } })\r\n    @serialize\r\n    animations: AnimationClip[] = [];\r\n\r\n    /**\r\n     * 动画事件，单位为ms\r\n     */\r\n    @oav()\r\n    @watch(\"_onTimeChanged\")\r\n    time = 0;\r\n\r\n    @oav()\r\n    @serialize\r\n    isplaying = false;\r\n\r\n    /**\r\n     * 播放速度\r\n     */\r\n    @oav()\r\n    @serialize\r\n    playspeed = 1;\r\n\r\n    /**\r\n     * 动作名称\r\n     */\r\n    get clipName()\r\n    {\r\n        return this.animation ? this.animation.name : null;\r\n    }\r\n\r\n    get frame()\r\n    {\r\n        if (!this.animation) return -1;\r\n        var cycle = this.animation.length;\r\n        var cliptime = (this.time % cycle + cycle) % cycle;\r\n        var _frame = Math.round(this._fps * cliptime / 1000);\r\n        return _frame;\r\n    }\r\n\r\n    update(interval: number)\r\n    {\r\n        if (this.isplaying) this.time += interval * this.playspeed;\r\n    }\r\n\r\n    dispose()\r\n    {\r\n        this.animation = <any>null;\r\n        this.animations = <any>null;\r\n        super.dispose();\r\n    }\r\n\r\n    private num = 0;\r\n    private _fps = 24;\r\n    private _objectCache = new Map();\r\n\r\n    private _updateAni()\r\n    {\r\n        if (!this.animation) return;\r\n        if ((this.num++) % 2 != 0) return;\r\n\r\n        var cycle = this.animation.length;\r\n        var cliptime = (this.time % cycle + cycle) % cycle;\r\n\r\n        var propertyClips = this.animation.propertyClips;\r\n\r\n        for (var i = 0; i < propertyClips.length; i++)\r\n        {\r\n            var propertyClip = propertyClips[i];\r\n\r\n            var propertyValues = propertyClip.propertyValues;\r\n            if (propertyValues.length == 0) continue;\r\n            var propertyHost = this.getPropertyHost(propertyClip);\r\n            if (!propertyHost) continue;\r\n            propertyHost[propertyClip.propertyName] = propertyClip.getValue(cliptime, this._fps);\r\n        }\r\n    }\r\n\r\n    private getPropertyHost(propertyClip: PropertyClip)\r\n    {\r\n        if (propertyClip.cacheIndex && this._objectCache[propertyClip.cacheIndex])\r\n            return this._objectCache[propertyClip.cacheIndex];\r\n\r\n        if (!propertyClip.cacheIndex)\r\n            propertyClip.cacheIndex = autoobjectCacheID++;\r\n\r\n        var propertyHost: any = this.node3d;\r\n        var path = propertyClip.path;\r\n\r\n        for (var i = 0; i < path.length; i++)\r\n        {\r\n            var element = path[i];\r\n            switch (element[0])\r\n            {\r\n                case PropertyClipPathItemType.Entity:\r\n                    propertyHost = propertyHost.find(element[1]);\r\n                    break;\r\n                case PropertyClipPathItemType.Component:\r\n                    var componentCls = getComponentType(<any>element[1]);\r\n                    propertyHost = propertyHost.getComponent(componentCls);\r\n                    break;\r\n                default:\r\n                    console.error(`无法获取 PropertyHost ${element}`);\r\n            }\r\n            if (propertyHost == null)\r\n                return null;\r\n        }\r\n        this._objectCache[propertyClip.cacheIndex] = propertyHost;\r\n        return propertyHost;\r\n    }\r\n\r\n    private _onAnimationChanged()\r\n    {\r\n        this.time = 0;\r\n    }\r\n\r\n    private _onTimeChanged()\r\n    {\r\n        this._updateAni();\r\n    }\r\n}\r\nvar autoobjectCacheID = 1;\r\n","\r\nimport { Matrix4x4 } from \"@feng3d/math\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\n\r\n/**\r\n * 骨骼关节数据\r\n */\r\nexport class SkeletonJoint\r\n{\r\n    /** 父关节索引 （-1说明本身是总父结点，这个序号其实就是行号了，譬如上面”origin“结点的序号就是0，无父结点； \"body\"结点序号是1，父结点序号是0，也就是说父结点是”origin“）*/\r\n    @serialize\r\n    parentIndex = -1;\r\n\r\n    /** 关节名字 */\r\n    @serialize\r\n    name: string;\r\n\r\n    /** 骨骼全局矩阵 */\r\n    @serialize\r\n    matrix: Matrix4x4;\r\n\r\n    children: number[] = [];\r\n\r\n    get invertMatrix()\r\n    {\r\n        if (!this._invertMatrix)\r\n            this._invertMatrix = this.matrix.clone().invert();\r\n        return this._invertMatrix;\r\n    }\r\n    private _invertMatrix: Matrix4x4;\r\n}\r\n\r\n","import { globalEmitter } from \"@feng3d/event\";\r\nimport { Behaviour } from \"../component/Behaviour\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { classUtils } from \"@feng3d/polyfill\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialization, serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { RunEnvironment } from \"./RunEnvironment\";\r\nimport { Script } from \"./Script\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { ScriptComponent: ScriptComponent; }\r\n}\r\n\r\n/**\r\n * 3d对象脚本\r\n */\r\n@AddComponentMenu(\"Script/Script\")\r\n@RegisterComponent()\r\nexport class ScriptComponent extends Behaviour\r\n{\r\n    runEnvironment = RunEnvironment.feng3d;\r\n\r\n    @serialize\r\n    @watch(\"_invalidateScriptInstance\")\r\n    @oav({ component: \"OAVPick\", componentParam: { accepttype: \"file_script\" } })\r\n    scriptName: string;\r\n\r\n    /**\r\n     * 脚本对象\r\n     */\r\n    @serialize\r\n    get scriptInstance()\r\n    {\r\n        if (this._invalid) this._updateScriptInstance();\r\n        return this._scriptInstance;\r\n    }\r\n    private _scriptInstance: Script;\r\n\r\n    private _invalid = true;\r\n\r\n    private scriptInit = false;\r\n\r\n    init()\r\n    {\r\n        super.init();\r\n        globalEmitter.on(\"asset.scriptChanged\", this._invalidateScriptInstance, this);\r\n    }\r\n\r\n    private _updateScriptInstance()\r\n    {\r\n        var oldInstance = this._scriptInstance;\r\n        this._scriptInstance = null;\r\n        if (!this.scriptName) return;\r\n\r\n        var cls = classUtils.getDefinitionByName(this.scriptName, false);\r\n\r\n        if (cls) this._scriptInstance = new cls();\r\n        else console.warn(`无法初始化脚本 ${this.scriptName}`);\r\n\r\n        this.scriptInit = false;\r\n\r\n        // 移除旧实例\r\n        if (oldInstance)\r\n        {\r\n            // 如果两个类定义名称相同，则保留上个对象数据\r\n            if (classUtils.getQualifiedClassName(oldInstance) == this.scriptName)\r\n            {\r\n                serialization.setValue(this._scriptInstance, oldInstance);\r\n            }\r\n            oldInstance.component = null;\r\n            oldInstance.dispose();\r\n        }\r\n        this._invalid = false;\r\n    }\r\n\r\n    private _invalidateScriptInstance()\r\n    {\r\n        this._invalid = true;\r\n    }\r\n\r\n    /**\r\n     * 每帧执行\r\n     */\r\n    update()\r\n    {\r\n        if (this.scriptInstance && !this.scriptInit)\r\n        {\r\n            this.scriptInstance.component = this;\r\n            this.scriptInstance.init();\r\n            this.scriptInit = true;\r\n        }\r\n        this.scriptInstance && this.scriptInstance.update();\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    dispose()\r\n    {\r\n        this.enabled = false;\r\n\r\n        if (this._scriptInstance)\r\n        {\r\n            this._scriptInstance.component = null;\r\n            this._scriptInstance.dispose();\r\n            this._scriptInstance = null;\r\n        }\r\n        super.dispose();\r\n\r\n        globalEmitter.off(\"asset.scriptChanged\", this._invalidateScriptInstance, this);\r\n    }\r\n}\r\n","import { Component, Components } from \"../component/Component\";\r\nimport { Component3DEventMap } from \"../component/Component3D\";\r\nimport { Event } from \"@feng3d/event\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { Constructor, gPartial, IDisposable } from \"@feng3d/polyfill\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialization, serialize } from \"@feng3d/serialization\";\r\nimport { Feng3dObject } from \"./Feng3dObject\";\r\nimport { Node3D } from \"./Node3D\";\r\nimport { ScriptComponent } from \"./ScriptComponent\";\r\n\r\nexport interface EntityEventMap\r\n{\r\n    /**\r\n     * 添加子组件事件\r\n     */\r\n    addComponent: { entity: Entity, component: Component };\r\n\r\n    /**\r\n     * 移除子组件事件\r\n     */\r\n    removeComponent: { entity: Entity, component: Component };\r\n\r\n    /**\r\n     * 包围盒失效\r\n     */\r\n    boundsInvalid: Geometry;\r\n\r\n    /**\r\n     * 刷新界面\r\n     */\r\n    refreshView: any;\r\n}\r\n\r\n/**\r\n * 实体，场景唯一存在的对象类型\r\n */\r\nexport class Entity<T extends EntityEventMap = EntityEventMap> extends Feng3dObject<T> implements IDisposable\r\n{\r\n\r\n    __class__: \"feng3d.Entity\";\r\n\r\n    /**\r\n     * 名称\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVEntityName\" })\r\n    get name()\r\n    {\r\n        return this._name;\r\n    }\r\n    set name(v)\r\n    {\r\n        this._name = v;\r\n    }\r\n    protected _name: string;\r\n\r\n    /**\r\n     * 标签\r\n     */\r\n    @serialize\r\n    tag: string;\r\n\r\n    //------------------------------------------\r\n    // Variables\r\n    //------------------------------------------\r\n    /**\r\n     * 子组件个数\r\n     */\r\n    get numComponents()\r\n    {\r\n        return this._components.length;\r\n    }\r\n\r\n    @serialize\r\n    @oav({ component: \"OAVComponentList\" })\r\n    get components()\r\n    {\r\n        return this._components.concat();\r\n    }\r\n    set components(value)\r\n    {\r\n        if (!value) return;\r\n        for (var i = 0, n = value.length; i < n; i++)\r\n        {\r\n            var component = value[i];\r\n            if (!component) continue;\r\n            this.addComponentAt(value[i], this.numComponents);\r\n        }\r\n    }\r\n\r\n    //------------------------------------------\r\n    // Functions\r\n    //------------------------------------------\r\n    /**\r\n     * 构建3D对象\r\n     */\r\n    constructor()\r\n    {\r\n        super();\r\n        this.name = \"Entity\";\r\n\r\n        this.onAny(this._onAnyListener, this);\r\n    }\r\n\r\n    /**\r\n     * 获取指定位置索引的子组件\r\n     * \r\n     * @param index\t\t\t位置索引\r\n     * @return\t\t\t\t子组件\r\n     */\r\n    getComponentAt(index: number): Component\r\n    {\r\n        console.assert(index < this.numComponents, \"给出索引超出范围\");\r\n        return this._components[index];\r\n    }\r\n\r\n    /**\r\n     * 添加指定组件类型到实体\r\n     * \r\n     * @type type 被添加组件类定义\r\n     */\r\n    addComponent<T extends Components>(type: Constructor<T>, callback?: (component: T) => void): T\r\n    {\r\n        var component = this.getComponent(type);\r\n        if (component && Component.isSingleComponent(type))\r\n        {\r\n            // alert(`The compnent ${param[\"name\"]} can't be added because ${this.name} already contains the same component.`);\r\n            return component;\r\n        }\r\n        const dependencies = Component.getDependencies(type);\r\n        // 先添加依赖\r\n        dependencies.forEach((dependency) =>\r\n        {\r\n            this.addComponent(dependency);\r\n        });\r\n        // \r\n        component = new type();\r\n        this.addComponentAt(component, this._components.length);\r\n        callback && callback(component);\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * 添加脚本\r\n     * \r\n     * @param script   脚本路径\r\n     */\r\n    addScript(scriptName: string)\r\n    {\r\n        var scriptComponent = new ScriptComponent();\r\n        scriptComponent.scriptName = scriptName;\r\n        this.addComponentAt(scriptComponent, this._components.length);\r\n        return scriptComponent;\r\n    }\r\n\r\n    /**\r\n     * 获取实体上第一个指定类型的组件，不存在时返回null\r\n     * \r\n     * @param type\t\t\t\t类定义\r\n     * @return                  返回指定类型组件\r\n     */\r\n    getComponent<T extends Components>(type: Constructor<T>): T\r\n    {\r\n        var component = this.getComponents(type)[0];\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * 获取实体上所有指定类型的组件数组\r\n     * \r\n     * @param type\t\t类定义\r\n     * @return\t\t\t返回与给出类定义一致的组件\r\n     */\r\n    getComponents<T extends Components>(type: Constructor<T>): T[]\r\n    {\r\n        console.assert(!!type, `类型不能为空！`);\r\n\r\n        var cls = type;\r\n        if (!cls)\r\n        {\r\n            console.warn(`无法找到 ${type.name} 组件类定义，请使用 @RegisterComponent() 在组件类上标记。`);\r\n            return [];\r\n        }\r\n        var filterResult: any = this._components.filter(v => v instanceof cls);\r\n        return filterResult;\r\n    }\r\n\r\n    /**\r\n     * 设置子组件的位置\r\n     * \r\n     * @param component\t\t\t\t子组件\r\n     * @param index\t\t\t\t位置索引\r\n     */\r\n    setComponentIndex(component: Components, index: number): void\r\n    {\r\n        console.assert(index >= 0 && index < this.numComponents, \"给出索引超出范围\");\r\n\r\n        var oldIndex = this._components.indexOf(component);\r\n        console.assert(oldIndex >= 0 && oldIndex < this.numComponents, \"子组件不在容器内\");\r\n\r\n        this._components.splice(oldIndex, 1);\r\n        this._components.splice(index, 0, component);\r\n    }\r\n\r\n    /**\r\n     * 设置组件到指定位置\r\n     * \r\n     * @param component\t\t被设置的组件\r\n     * @param index\t\t\t索引\r\n     */\r\n    setComponentAt(component: Components, index: number)\r\n    {\r\n        if (this._components[index])\r\n        {\r\n            this.removeComponentAt(index);\r\n        }\r\n        this.addComponentAt(component, index);\r\n    }\r\n\r\n    /**\r\n     * 移除组件\r\n     * \r\n     * @param component 被移除组件\r\n     */\r\n    removeComponent(component: Components): void\r\n    {\r\n        console.assert(this.hasComponent(component), \"只能移除在容器中的组件\");\r\n\r\n        var index = this.getComponentIndex(component);\r\n        this.removeComponentAt(index);\r\n    }\r\n\r\n    /**\r\n     * 获取组件在容器的索引位置\r\n     * \r\n     * @param component\t\t\t查询的组件\r\n     * @return\t\t\t\t    组件在容器的索引位置\r\n     */\r\n    getComponentIndex(component: Components): number\r\n    {\r\n        console.assert(this._components.indexOf(component) != -1, \"组件不在容器中\");\r\n\r\n        var index = this._components.indexOf(component);\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * 移除组件\r\n     * \r\n     * @param index\t\t要删除的 Component 的子索引。\r\n     */\r\n    removeComponentAt(index: number): Component\r\n    {\r\n        console.assert(index >= 0 && index < this.numComponents, \"给出索引超出范围\");\r\n\r\n        var component: Component = this._components.splice(index, 1)[0];\r\n        //派发移除组件事件\r\n        this.emit(\"removeComponent\", { component: component, entity: this }, true);\r\n        component.dispose();\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * 交换子组件位置\r\n     * \r\n     * @param index1\t\t第一个子组件的索引位置\r\n     * @param index2\t\t第二个子组件的索引位置\r\n     */\r\n    swapComponentsAt(index1: number, index2: number): void\r\n    {\r\n        console.assert(index1 >= 0 && index1 < this.numComponents, \"第一个子组件的索引位置超出范围\");\r\n        console.assert(index2 >= 0 && index2 < this.numComponents, \"第二个子组件的索引位置超出范围\");\r\n\r\n        var temp: Components = this._components[index1];\r\n        this._components[index1] = this._components[index2];\r\n        this._components[index2] = temp;\r\n    }\r\n\r\n    /**\r\n     * 交换子组件位置\r\n     * \r\n     * @param a\t\t第一个子组件\r\n     * @param b\t\t第二个子组件\r\n     */\r\n    swapComponents(a: Components, b: Components): void\r\n    {\r\n        console.assert(this.hasComponent(a), \"第一个子组件不在容器中\");\r\n        console.assert(this.hasComponent(b), \"第二个子组件不在容器中\");\r\n\r\n        this.swapComponentsAt(this.getComponentIndex(a), this.getComponentIndex(b));\r\n    }\r\n\r\n    /**\r\n     * 获取指定类型组件\r\n     * \r\n     * @param type 组件类型\r\n     */\r\n    getComponentsByType<T extends Components>(type: Constructor<T>)\r\n    {\r\n        var removeComponents: T[] = [];\r\n        for (let i = 0; i < this._components.length; i++)\r\n        {\r\n            if (this._components[i] instanceof type)\r\n                removeComponents.push(<any>this._components[i]);\r\n        }\r\n        return removeComponents;\r\n    }\r\n\r\n    /**\r\n     * 移除指定类型组件\r\n     * \r\n     * @param type 组件类型\r\n     */\r\n    removeComponentsByType<T extends Components>(type: Constructor<T>)\r\n    {\r\n        var removeComponents: T[] = [];\r\n        for (var i = this._components.length - 1; i >= 0; i--)\r\n        {\r\n            if (this._components[i].constructor == type)\r\n                removeComponents.push(<T>this.removeComponentAt(i));\r\n        }\r\n        return removeComponents;\r\n    }\r\n\r\n    /**\r\n     * 监听对象的所有事件并且传播到所有组件中\r\n     */\r\n    private _onAnyListener(e: Event<any>)\r\n    {\r\n        this.components.forEach((element: Component) =>\r\n        {\r\n            element.emitEvent(e);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    dispose()\r\n    {\r\n        for (var i = this._components.length - 1; i >= 0; i--)\r\n        {\r\n            this.removeComponentAt(i);\r\n        }\r\n        super.dispose();\r\n    }\r\n\r\n    //------------------------------------------\r\n    // Static Functions\r\n    //------------------------------------------\r\n    /**\r\n     * 查找指定名称的实体\r\n     * \r\n     * @param name \r\n     */\r\n    static find(name: string)\r\n    {\r\n        var entitys = Feng3dObject.getObjects(Entity)\r\n        var result = entitys.filter(v => !v.disposed && (v.name == name));\r\n        return result[0];\r\n    }\r\n\r\n    //------------------------------------------\r\n    // Protected Properties\r\n    //------------------------------------------\r\n    /**\r\n     * 组件列表\r\n     */\r\n    protected _components: Components[] = [];\r\n\r\n    //------------------------------------------\r\n    // Protected Functions\r\n    //------------------------------------------\r\n\r\n    //------------------------------------------\r\n    // Private Properties\r\n    //------------------------------------------\r\n\r\n    //------------------------------------------\r\n    // Private Methods\r\n    //------------------------------------------\r\n\r\n    /**\r\n     * 判断是否拥有组件\r\n     * \r\n     * @param com\t被检测的组件\r\n     * @return\t\ttrue：拥有该组件；false：不拥有该组件。\r\n     */\r\n    private hasComponent(com: Components): boolean\r\n    {\r\n        return this._components.indexOf(com) != -1;\r\n    }\r\n\r\n    /**\r\n     * 添加组件到指定位置\r\n     * \r\n     * @param component\t\t被添加的组件\r\n     * @param index\t\t\t插入的位置\r\n     */\r\n    private addComponentAt(component: Components, index: number): void\r\n    {\r\n        if (component == null)\r\n            return;\r\n        console.assert(index >= 0 && index <= this.numComponents, \"给出索引超出范围\");\r\n\r\n        if (this.hasComponent(component))\r\n        {\r\n            index = Math.min(index, this._components.length - 1);\r\n            this.setComponentIndex(component, index)\r\n            return;\r\n        }\r\n        //组件唯一时移除同类型的组件\r\n        var type = <Constructor<Components>>component.constructor;\r\n        if (Component.isSingleComponent(type))\r\n        {\r\n            var oldComponents = this.getComponentsByType(type);\r\n            if (oldComponents.length > 0)\r\n            {\r\n                console.assert(oldComponents.length == 1);\r\n                this.removeComponent(oldComponents[0]);\r\n            }\r\n        }\r\n\r\n        this._components.splice(index, 0, component);\r\n        component._setEntity(this);\r\n        component.init();\r\n        //派发添加组件事件\r\n        this.emit(\"addComponent\", { component: component, entity: this }, true);\r\n    }\r\n\r\n    /**\r\n     * 为了兼容以往json序列化格式\r\n     * \r\n     * @deprecated\r\n     */\r\n    set children(v: Entity[])\r\n    {\r\n        var node3ds = v.map(v => v.getComponent(Node3D));\r\n        var node3d = this.getComponent(Node3D);\r\n        if (node3d)\r\n        {\r\n            node3d.children = node3ds;\r\n        } else\r\n        {\r\n            var f = (e: Event<{\r\n                entity: Entity;\r\n                component: Component;\r\n            }>) =>\r\n            {\r\n                if (e.data.entity == this && e.data.component instanceof Node3D)\r\n                {\r\n                    e.data.component.children = node3ds;\r\n                    this.off(\"addComponent\", f);\r\n                }\r\n            };\r\n            this.on(\"addComponent\", f);\r\n        }\r\n        this._children = v;\r\n    }\r\n    // debug\r\n    private _children: Entity[];\r\n\r\n    /**\r\n     * 创建指定类型的实体。\r\n     * \r\n     * @param type 实体类型。\r\n     * @param param 实体参数。\r\n     */\r\n    static createPrimitive<K extends keyof PrimitiveEntity>(type: K, param?: gPartial<Entity>): Node3D<Component3DEventMap>\r\n    {\r\n        var g = new Entity();\r\n        g.name = type;\r\n\r\n        var createHandler = this._registerPrimitives[type];\r\n        if (createHandler != null) createHandler(g);\r\n\r\n        serialization.setValue(g, param);\r\n        return g.getComponent(Node3D);\r\n    }\r\n\r\n    /**\r\n     * 注册原始实体，被注册后可以使用 Entity.createPrimitive 进行创建。\r\n     * \r\n     * @param type 原始实体类型。\r\n     * @param handler 构建原始实体的函数。\r\n     */\r\n    static registerPrimitive<K extends keyof PrimitiveEntity>(type: K, handler: (entity: Entity) => void)\r\n    {\r\n        if (this._registerPrimitives[type])\r\n            console.warn(`重复注册原始实体 ${type} ！`);\r\n        this._registerPrimitives[type] = handler;\r\n    }\r\n    static _registerPrimitives: { [type: string]: (gameObject: Entity) => void } = {};\r\n}\r\n\r\n/**\r\n * 原始实体，可以通过Entity.createPrimitive进行创建。\r\n */\r\nexport interface PrimitiveEntity\r\n{\r\n}\r\n","import { Matrix4x4 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { RegisterComponent } from \"../../component/Component\";\r\nimport { Component3D } from \"../../component/Component3D\";\r\nimport { Entity } from \"../../core/Entity\";\r\nimport { HideFlags } from \"../../core/HideFlags\";\r\nimport { Node3D } from \"../../core/Node3D\";\r\nimport { SkeletonJoint } from \"./Skeleton\";\r\n\r\ndeclare module \"../../component/Component\"\r\n{\r\n    export interface ComponentMap { SkeletonComponent: SkeletonComponent; }\r\n}\r\n@RegisterComponent()\r\nexport class SkeletonComponent extends Component3D\r\n{\r\n\r\n    __class__: \"feng3d.SkeletonComponent\";\r\n\r\n    /** 骨骼关节数据列表 */\r\n    @serialize\r\n    @oav()\r\n    joints: SkeletonJoint[] = [];\r\n\r\n    /**\r\n     * 当前骨骼姿势的全局矩阵\r\n     * @see #globalPose\r\n     */\r\n    get globalMatrices(): Matrix4x4[]\r\n    {\r\n        if (!this.isInitJoints)\r\n        {\r\n            this.initSkeleton();\r\n            this.isInitJoints = true;\r\n        }\r\n\r\n        if (this._globalPropertiesInvalid)\r\n        {\r\n            this.updateGlobalProperties();\r\n            this._globalPropertiesInvalid = false;\r\n        }\r\n        return this._globalMatrices;\r\n    }\r\n\r\n    //\r\n    private isInitJoints = false;\r\n    private jointNode3Ds: Node3D[];\r\n    private jointNode3DMap: { [jointname: string]: Node3D };\r\n    private _globalPropertiesInvalid: boolean;\r\n    private _jointsInvalid: boolean[];\r\n    private _globalMatrixsInvalid: boolean[];\r\n    private globalMatrixs: Matrix4x4[];\r\n    private _globalMatrices: Matrix4x4[];\r\n\r\n    initSkeleton()\r\n    {\r\n        this.jointNode3Ds = [];\r\n        this.jointNode3DMap = {};\r\n        //\r\n        this.createSkeletonNode3D();\r\n\r\n        //\r\n        this._globalPropertiesInvalid = true;\r\n        this._jointsInvalid = [];\r\n        this._globalMatrixsInvalid = [];\r\n        this.globalMatrixs = [];\r\n        this._globalMatrices = [];\r\n        //\r\n        var jointNum = this.joints.length;\r\n        for (var i = 0; i < jointNum; i++)\r\n        {\r\n            this._jointsInvalid[i] = true;\r\n            this._globalMatrixsInvalid[i] = true;\r\n            this.globalMatrixs[i] = new Matrix4x4();\r\n            this._globalMatrices[i] = new Matrix4x4();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 更新骨骼全局变换矩阵\r\n     */\r\n    private updateGlobalProperties()\r\n    {\r\n        //姿势变换矩阵\r\n        var joints: SkeletonJoint[] = this.joints;\r\n        var jointGameobjects = this.jointNode3Ds;\r\n        var globalMatrixs = this.globalMatrixs;\r\n        var _globalMatrixsInvalid = this._globalMatrixsInvalid;\r\n        //遍历每个关节\r\n        for (var i = 0; i < joints.length; ++i)\r\n        {\r\n            if (!this._jointsInvalid[i])\r\n                continue;\r\n\r\n            this._globalMatrices[i]\r\n                .copy(globalMatrix(i))\r\n                .prepend(joints[i].invertMatrix);\r\n\r\n            this._jointsInvalid[i] = false;\r\n        }\r\n\r\n        function globalMatrix(index: number)\r\n        {\r\n            if (!_globalMatrixsInvalid[index])\r\n                return globalMatrixs[index];\r\n\r\n            var jointPose = joints[index];\r\n\r\n            var jointGameobject = jointGameobjects[index];\r\n            globalMatrixs[index] = jointGameobject.matrix.clone();\r\n            if (jointPose.parentIndex >= 0)\r\n            {\r\n                var parentGlobalMatrix = globalMatrix(jointPose.parentIndex);\r\n                globalMatrixs[index].append(parentGlobalMatrix);\r\n            }\r\n\r\n            _globalMatrixsInvalid[index] = false;\r\n\r\n            return globalMatrixs[index];\r\n        }\r\n    }\r\n\r\n    private invalidjoint(jointIndex: number)\r\n    {\r\n        this._globalPropertiesInvalid = true;\r\n        this._jointsInvalid[jointIndex] = true;\r\n        this._globalMatrixsInvalid[jointIndex] = true;\r\n\r\n        this.joints[jointIndex].children.forEach(element =>\r\n        {\r\n            this.invalidjoint(element);\r\n        });\r\n    }\r\n\r\n    private createSkeletonNode3D()\r\n    {\r\n        var skeleton = this;\r\n\r\n        var joints = skeleton.joints;\r\n        var jointNode3Ds = this.jointNode3Ds;\r\n        var jointNode3DMap = this.jointNode3DMap;\r\n\r\n        for (var i = 0; i < joints.length; i++)\r\n        {\r\n            createJoint(i);\r\n        }\r\n\r\n        function createJoint(i: number)\r\n        {\r\n            if (jointNode3Ds[i])\r\n                return jointNode3Ds[i];\r\n\r\n            var skeletonJoint = joints[i];\r\n            var parentNode3D: Node3D;\r\n            if (skeletonJoint.parentIndex != -1)\r\n            {\r\n                parentNode3D = createJoint(skeletonJoint.parentIndex);\r\n                joints[skeletonJoint.parentIndex].children.push(i);\r\n            } else\r\n            {\r\n                parentNode3D = skeleton.node3d\r\n            }\r\n\r\n            var jointTransform = parentNode3D.find(skeletonJoint.name);\r\n            if (!jointTransform)\r\n            {\r\n                var entity = new Entity();\r\n                entity.name = skeletonJoint.name;\r\n                entity.hideFlags = HideFlags.DontSave;\r\n                jointTransform = entity.addComponent(Node3D);\r\n                parentNode3D.addChild(jointTransform);\r\n            }\r\n\r\n            var node3d = jointTransform;\r\n\r\n            var matrix = skeletonJoint.matrix;\r\n            if (skeletonJoint.parentIndex != -1)\r\n            {\r\n                matrix = matrix.clone().append(joints[skeletonJoint.parentIndex].invertMatrix);\r\n            }\r\n            node3d.matrix = matrix;\r\n\r\n            node3d.on(\"transformChanged\", () =>\r\n            {\r\n                skeleton.invalidjoint(i);\r\n            });\r\n\r\n            jointNode3Ds[i] = node3d;\r\n            jointNode3DMap[skeletonJoint.name] = node3d;\r\n            return jointTransform;\r\n        }\r\n    }\r\n}\r\n","import { AssetType } from \"../assets/AssetType\";\r\nimport { classUtils, __class__ } from \"@feng3d/polyfill\";\r\nimport { serialization, serialize } from \"@feng3d/serialization\";\r\nimport { Feng3dObject } from \"./Feng3dObject\";\r\n\r\n/**\r\n * 资源数据\r\n * \r\n * 该对象可由资源文件中读取，或者保存为资源\r\n */\r\nexport class AssetData extends Feng3dObject\r\n{\r\n    /**\r\n     * 资源名称\r\n     */\r\n    @serialize\r\n    get name()\r\n    {\r\n        return this._name;\r\n    }\r\n    set name(v) { this._name = v; }\r\n    protected _name: string;\r\n\r\n    /**\r\n     * 资源编号\r\n     */\r\n    @serialize\r\n    get assetId()\r\n    {\r\n        return this._assetId;\r\n    }\r\n    set assetId(v)\r\n    {\r\n        if (this._assetId == v) return;\r\n\r\n        if (this._assetId != undefined) { console.error(`不允许修改 assetId`); return; }\r\n\r\n        this._assetId = v;\r\n    }\r\n    private _assetId: string;\r\n\r\n    /**\r\n     * 资源类型，由具体对象类型决定\r\n     */\r\n    assetType: AssetType;\r\n\r\n    /**\r\n     * 新增资源数据\r\n     * \r\n     * @param assetId 资源编号\r\n     * @param data 资源数据\r\n     */\r\n    static addAssetData<T extends any>(assetId: string, data: T)\r\n    {\r\n        if (!data) return;\r\n        if (this.assetMap.has(data) || this.idAssetMap.has(assetId))\r\n        {\r\n            console.warn(`同一个材质被保存在多个资源中！`);\r\n        }\r\n\r\n        this.assetMap.set(data, assetId);\r\n        this.idAssetMap.set(assetId, data);\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * 删除资源数据\r\n     * \r\n     * @param data 资源数据\r\n     */\r\n    static deleteAssetData(data: any)\r\n    {\r\n        if (!data) return;\r\n        console.assert(this.assetMap.has(data));\r\n        var assetId = this.assetMap.get(data);\r\n        this._delete(assetId, data);\r\n    }\r\n\r\n    static deleteAssetDataById(assetId: string)\r\n    {\r\n        console.assert(this.idAssetMap.has(assetId));\r\n        var data = this.idAssetMap.get(assetId);\r\n        this._delete(assetId, data);\r\n    }\r\n\r\n    private static _delete(assetId, data: any)\r\n    {\r\n        this.assetMap.delete(data);\r\n        this.idAssetMap.delete(assetId);\r\n    }\r\n\r\n    /**\r\n     * 判断是否为资源数据\r\n     * \r\n     * @param asset 可能的资源数据\r\n     */\r\n    static isAssetData(asset: any): asset is AssetData\r\n    {\r\n        if (!asset || asset.assetId == undefined) return false;\r\n        if (asset instanceof AssetData) return true;\r\n        if (classUtils.getDefaultInstanceByName(asset[__class__]) instanceof AssetData) return true;\r\n    }\r\n\r\n    /**\r\n     * 资源属性标记名称\r\n     */\r\n    private static assetPropertySign = \"assetId\";\r\n\r\n    /**\r\n     * 序列化\r\n     * \r\n     * @param asset 资源数据\r\n     */\r\n    static serialize(asset: AssetData)\r\n    {\r\n        var obj = <any>{};\r\n        obj[__class__] = classUtils.getQualifiedClassName(asset);\r\n        obj.assetId = asset.assetId;\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * 反序列化\r\n     * \r\n     * @param object 资源对象\r\n     */\r\n    static deserialize(object: any)\r\n    {\r\n        var result = this.getLoadedAssetData(object.assetId);\r\n        console.assert(!!result, `资源 ${object.assetId} 未加载，请使用 ReadRS.deserializeWithAssets 进行序列化包含加载的资源对象。`)\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 获取已加载的资源数据\r\n     * \r\n     * @param assetId 资源编号\r\n     */\r\n    static getLoadedAssetData(assetId: string)\r\n    {\r\n        return this.idAssetMap.get(assetId);\r\n    }\r\n\r\n    /**\r\n     * 获取所有已加载资源数据\r\n     */\r\n    static getAllLoadedAssetDatas()\r\n    {\r\n        return Map.getKeys(this.assetMap);\r\n    }\r\n\r\n    /**\r\n     * 资源与编号对应表\r\n     */\r\n    static assetMap = new Map<any, string>();\r\n\r\n    /**\r\n     * 编号与资源对应表\r\n     */\r\n    static idAssetMap = new Map<string, any>();\r\n}\r\n\r\n/**\r\n * 设置函数列表\r\n */\r\nserialization.setValueHandlers.push(\r\n    // 处理资源\r\n    {\r\n        priority: 0,\r\n        handler: function (target, source, property, param)\r\n        {\r\n            var tpv = target[property];\r\n            var spv = source[property];\r\n            if (AssetData.isAssetData(spv))\r\n            {\r\n                // 此处需要反序列化资源完整数据\r\n                if (property == \"__root__\")\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                target[property] = AssetData.deserialize(spv);\r\n                return true;\r\n            }\r\n            if (AssetData.isAssetData(tpv))\r\n            {\r\n                if (spv.__class__ == null)\r\n                {\r\n                    var className = classUtils.getQualifiedClassName(tpv);\r\n                    var inst = classUtils.getInstanceByName(className)\r\n                    param.serialization.setValue(inst, spv);\r\n                    target[property] = inst;\r\n                } else\r\n                {\r\n                    target[property] = param.serialization.deserialize(spv);\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n);\r\n\r\nserialization.serializeHandlers.push(\r\n    // 处理资源\r\n    {\r\n        priority: 0,\r\n        handler: function (target, source, property)\r\n        {\r\n            var spv = source[property];\r\n            if (AssetData.isAssetData(spv))\r\n            {\r\n                // 此处需要反序列化资源完整数据\r\n                if (property == \"__root__\")\r\n                {\r\n                    return false;\r\n                }\r\n                target[property] = AssetData.serialize(<any>spv);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n);\r\n\r\nserialization.deserializeHandlers.push(\r\n    // 处理资源\r\n    {\r\n        priority: 0,\r\n        handler: function (target, source, property, param)\r\n        {\r\n            var tpv = target[property];\r\n            var spv = source[property];\r\n            if (AssetData.isAssetData(spv))\r\n            {\r\n                // 此处需要反序列化资源完整数据\r\n                if (property == \"__root__\")\r\n                {\r\n                    return false;\r\n                }\r\n                target[property] = AssetData.deserialize(spv);\r\n                return true;\r\n            }\r\n            if (AssetData.isAssetData(tpv))\r\n            {\r\n                target[property] = param.serialization.deserialize(spv);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    // 处理资源\r\n    {\r\n        priority: 0,\r\n        handler: function (target, source, property, param)\r\n        {\r\n            var tpv = target[property];\r\n            var spv = source[property];\r\n            if (AssetData.isAssetData(spv))\r\n            {\r\n                // 此处需要反序列化资源完整数据\r\n                if (property == \"__root__\")\r\n                {\r\n                    return false;\r\n                }\r\n                target[property] = AssetData.deserialize(spv);\r\n                return true;\r\n            }\r\n            if (AssetData.assetMap.has(tpv))\r\n            {\r\n                target[property] = param.serialization.deserialize(spv);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n);\r\n\r\nserialization.differentHandlers.push(\r\n    // 资源\r\n    {\r\n        priority: 0,\r\n        handler: function (target, source, property, param)\r\n        {\r\n            var different = param.different;\r\n            let tpv = target[property];\r\n            if (AssetData.isAssetData(tpv))\r\n            {\r\n                // 此处需要反序列化资源完整数据\r\n                if (property == \"__root__\")\r\n                {\r\n                    return false;\r\n                }\r\n                different[property] = AssetData.serialize(tpv);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n);\r\n\r\n","import { Box3 } from \"@feng3d/math\";\r\nimport { Matrix4x4 } from \"@feng3d/math\";\r\nimport { Ray3 } from \"@feng3d/math\";\r\nimport { Vector2 } from \"@feng3d/math\";\r\nimport { Vector3 } from \"@feng3d/math\";\r\nimport { CullFace } from \"@feng3d/renderer\";\r\n\r\nexport class GeometryUtils \r\n{\r\n    /**\r\n     * 根据顶点数量按顺序创建顶点索引\r\n     * @param positions 顶点数据\r\n     */\r\n    createIndices(positions: number[])\r\n    {\r\n        var vertexNum = positions.length / 3;\r\n        var indices: number[] = [];\r\n        for (var i = 0; i < vertexNum; i++)\r\n        {\r\n            indices[i] = i;\r\n        }\r\n        return indices;\r\n    }\r\n\r\n    /**\r\n     * 创建循环uv数据\r\n     * @param positions 顶点数据\r\n     */\r\n    createUVs(positions: number[])\r\n    {\r\n        var idx = 0, uvIdx = 0;\r\n        var target: number[] = [];\r\n        var len = positions.length / 3 * 2;\r\n        while (idx < len)\r\n        {\r\n            target[idx++] = uvIdx * .5;\r\n            target[idx++] = 1.0 - (uvIdx & 1);\r\n            if (++uvIdx == 3)\r\n                uvIdx = 0;\r\n        }\r\n        return target;\r\n    }\r\n\r\n    /**\r\n     * 计算顶点法线数据\r\n     * @param indices 顶点索引\r\n     * @param positions 顶点数据\r\n     * @param useFaceWeights 是否使用面权重计算法线\r\n     */\r\n    createVertexNormals(indices: number[], positions: number[], useFaceWeights = false)\r\n    {\r\n        var faceNormalsResult = this.createFaceNormals(indices, positions, useFaceWeights);\r\n        var faceWeights = faceNormalsResult.faceWeights;\r\n        var faceNormals = faceNormalsResult.faceNormals;\r\n\r\n        var v1 = 0;\r\n        var f1 = 0, f2 = 1, f3 = 2;\r\n        var lenV = positions.length;\r\n        var normalStride = 3;\r\n        var normalOffset = 0;\r\n        var normals = new Array<number>(lenV);\r\n        v1 = 0;\r\n        while (v1 < lenV)\r\n        {\r\n            normals[v1] = 0.0;\r\n            normals[v1 + 1] = 0.0;\r\n            normals[v1 + 2] = 0.0;\r\n            v1 += normalStride;\r\n        }\r\n        var i = 0, k = 0;\r\n        var lenI = indices.length;\r\n        var index = 0;\r\n        var weight = 0;\r\n        while (i < lenI)\r\n        {\r\n            weight = useFaceWeights ? faceWeights[k++] : 1;\r\n            index = normalOffset + indices[i++] * normalStride;\r\n            normals[index++] += faceNormals[f1] * weight;\r\n            normals[index++] += faceNormals[f2] * weight;\r\n            normals[index] += faceNormals[f3] * weight;\r\n            index = normalOffset + indices[i++] * normalStride;\r\n            normals[index++] += faceNormals[f1] * weight;\r\n            normals[index++] += faceNormals[f2] * weight;\r\n            normals[index] += faceNormals[f3] * weight;\r\n            index = normalOffset + indices[i++] * normalStride;\r\n            normals[index++] += faceNormals[f1] * weight;\r\n            normals[index++] += faceNormals[f2] * weight;\r\n            normals[index] += faceNormals[f3] * weight;\r\n            f1 += 3;\r\n            f2 += 3;\r\n            f3 += 3;\r\n        }\r\n        v1 = normalOffset;\r\n        while (v1 < lenV)\r\n        {\r\n            var vx = normals[v1];\r\n            var vy = normals[v1 + 1];\r\n            var vz = normals[v1 + 2];\r\n            var d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);\r\n            normals[v1] = vx * d;\r\n            normals[v1 + 1] = vy * d;\r\n            normals[v1 + 2] = vz * d;\r\n            v1 += normalStride;\r\n        }\r\n        return normals;\r\n    }\r\n\r\n    /**\r\n     * 计算顶点切线数据\r\n     * @param indices 顶点索引\r\n     * @param positions 顶点数据\r\n     * @param uvs uv数据\r\n     * @param useFaceWeights 是否使用面权重计算切线数据\r\n     */\r\n    createVertexTangents(indices: number[], positions: number[], uvs: number[], useFaceWeights = false)\r\n    {\r\n        var faceTangentsResult = this.createFaceTangents(indices, positions, uvs, useFaceWeights);\r\n        var faceWeights = faceTangentsResult.faceWeights;\r\n        var faceTangents = faceTangentsResult.faceTangents;\r\n\r\n        var i = 0;\r\n        var lenV = positions.length;\r\n        var tangentStride = 3;\r\n        var tangentOffset = 0;\r\n        var target = new Array<number>(lenV);\r\n        i = tangentOffset;\r\n        while (i < lenV)\r\n        {\r\n            target[i] = 0.0;\r\n            target[i + 1] = 0.0;\r\n            target[i + 2] = 0.0;\r\n            i += tangentStride;\r\n        }\r\n        var k = 0;\r\n        var lenI = indices.length;\r\n        var index = 0;\r\n        var weight = 0;\r\n        var f1 = 0, f2 = 1, f3 = 2;\r\n        i = 0;\r\n        while (i < lenI)\r\n        {\r\n            weight = useFaceWeights ? faceWeights[k++] : 1;\r\n            index = tangentOffset + indices[i++] * tangentStride;\r\n            target[index++] += faceTangents[f1] * weight;\r\n            target[index++] += faceTangents[f2] * weight;\r\n            target[index] += faceTangents[f3] * weight;\r\n            index = tangentOffset + indices[i++] * tangentStride;\r\n            target[index++] += faceTangents[f1] * weight;\r\n            target[index++] += faceTangents[f2] * weight;\r\n            target[index] += faceTangents[f3] * weight;\r\n            index = tangentOffset + indices[i++] * tangentStride;\r\n            target[index++] += faceTangents[f1] * weight;\r\n            target[index++] += faceTangents[f2] * weight;\r\n            target[index] += faceTangents[f3] * weight;\r\n            f1 += 3;\r\n            f2 += 3;\r\n            f3 += 3;\r\n        }\r\n        i = tangentOffset;\r\n        while (i < lenV)\r\n        {\r\n            var vx = target[i];\r\n            var vy = target[i + 1];\r\n            var vz = target[i + 2];\r\n            var d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);\r\n            target[i] = vx * d;\r\n            target[i + 1] = vy * d;\r\n            target[i + 2] = vz * d;\r\n            i += tangentStride;\r\n        }\r\n        return target;\r\n    }\r\n\r\n    /**\r\n     * 计算面切线数据\r\n     * @param indices 顶点索引数据\r\n     * @param positions 顶点数据\r\n     * @param uvs uv数据\r\n     * @param useFaceWeights 是否计算面权重\r\n     */\r\n    createFaceTangents(indices: number[], positions: number[], uvs: number[], useFaceWeights = false)\r\n    {\r\n        var i = 0, k = 0;\r\n        var index1 = 0, index2 = 0, index3 = 0;\r\n        var len = indices.length;\r\n        var ui = 0, vi = 0;\r\n        var v0 = 0;\r\n        var dv1 = 0, dv2 = 0;\r\n        var denom = 0;\r\n        var x0 = 0, y0 = 0, z0 = 0;\r\n        var dx1 = 0, dy1 = 0, dz1 = 0;\r\n        var dx2 = 0, dy2 = 0, dz2 = 0;\r\n        var cx = 0, cy = 0, cz = 0;\r\n        var posStride = 3;\r\n        var posOffset = 0;\r\n        var texStride = 2;\r\n        var texOffset = 0;\r\n        var faceTangents = new Array<number>(indices.length);\r\n        var faceWeights: number[] = [];\r\n        while (i < len)\r\n        {\r\n            index1 = indices[i];\r\n            index2 = indices[i + 1];\r\n            index3 = indices[i + 2];\r\n            ui = texOffset + index1 * texStride + 1;\r\n            v0 = uvs[ui];\r\n            ui = texOffset + index2 * texStride + 1;\r\n            dv1 = uvs[ui] - v0;\r\n            ui = texOffset + index3 * texStride + 1;\r\n            dv2 = uvs[ui] - v0;\r\n            vi = posOffset + index1 * posStride;\r\n            x0 = positions[vi];\r\n            y0 = positions[vi + 1];\r\n            z0 = positions[vi + 2];\r\n            vi = posOffset + index2 * posStride;\r\n            dx1 = positions[vi] - x0;\r\n            dy1 = positions[vi + 1] - y0;\r\n            dz1 = positions[vi + 2] - z0;\r\n            vi = posOffset + index3 * posStride;\r\n            dx2 = positions[vi] - x0;\r\n            dy2 = positions[vi + 1] - y0;\r\n            dz2 = positions[vi + 2] - z0;\r\n            cx = dv2 * dx1 - dv1 * dx2;\r\n            cy = dv2 * dy1 - dv1 * dy2;\r\n            cz = dv2 * dz1 - dv1 * dz2;\r\n            denom = Math.sqrt(cx * cx + cy * cy + cz * cz);\r\n            if (useFaceWeights)\r\n            {\r\n                var w = denom * 10000;\r\n                if (w < 1)\r\n                    w = 1;\r\n                faceWeights[k++] = w;\r\n            }\r\n            denom = 1 / denom;\r\n            faceTangents[i++] = denom * cx;\r\n            faceTangents[i++] = denom * cy;\r\n            faceTangents[i++] = denom * cz;\r\n        }\r\n        return { faceTangents: faceTangents, faceWeights: faceWeights };\r\n    }\r\n\r\n    /**\r\n     * 计算面法线数据\r\n     * @param indices 顶点索引数据\r\n     * @param positions 顶点数据\r\n     * @param useFaceWeights 是否计算面权重\r\n     */\r\n    createFaceNormals(indices: number[], positions: number[], useFaceWeights = false)\r\n    {\r\n        var i = 0, j = 0, k = 0;\r\n        var index = 0;\r\n        var len = indices.length;\r\n        var x1 = 0, x2 = 0, x3 = 0;\r\n        var y1 = 0, y2 = 0, y3 = 0;\r\n        var z1 = 0, z2 = 0, z3 = 0;\r\n        var dx1 = 0, dy1 = 0, dz1 = 0;\r\n        var dx2 = 0, dy2 = 0, dz2 = 0;\r\n        var cx = 0, cy = 0, cz = 0;\r\n        var d = 0;\r\n        var posStride = 3;\r\n        var faceNormals = new Array<number>(len);\r\n        var faceWeights: number[] = [];\r\n        while (i < len)\r\n        {\r\n            index = indices[i++] * posStride;\r\n            x1 = positions[index];\r\n            y1 = positions[index + 1];\r\n            z1 = positions[index + 2];\r\n            index = indices[i++] * posStride;\r\n            x2 = positions[index];\r\n            y2 = positions[index + 1];\r\n            z2 = positions[index + 2];\r\n            index = indices[i++] * posStride;\r\n            x3 = positions[index];\r\n            y3 = positions[index + 1];\r\n            z3 = positions[index + 2];\r\n            dx1 = x3 - x1;\r\n            dy1 = y3 - y1;\r\n            dz1 = z3 - z1;\r\n            dx2 = x2 - x1;\r\n            dy2 = y2 - y1;\r\n            dz2 = z2 - z1;\r\n            cx = dz1 * dy2 - dy1 * dz2;\r\n            cy = dx1 * dz2 - dz1 * dx2;\r\n            cz = dy1 * dx2 - dx1 * dy2;\r\n            d = Math.sqrt(cx * cx + cy * cy + cz * cz);\r\n            if (useFaceWeights)\r\n            {\r\n                var w = d * 10000;\r\n                if (w < 1)\r\n                    w = 1;\r\n                faceWeights[k++] = w;\r\n            }\r\n            d = 1 / d;\r\n            faceNormals[j++] = cx * d;\r\n            faceNormals[j++] = cy * d;\r\n            faceNormals[j++] = cz * d;\r\n        }\r\n        return { faceNormals: faceNormals, faceWeights: faceWeights };\r\n    }\r\n\r\n    /**\r\n     * 应用变换矩阵\r\n     * @param matrix 变换矩阵\r\n     * @param positions 顶点数据\r\n     * @param normals 顶点法线数据\r\n     * @param tangents 顶点切线数据\r\n     */\r\n    applyTransformation(matrix: Matrix4x4, positions: number[], normals?: number[], tangents?: number[])\r\n    {\r\n        var posStride = 3;\r\n        var normalStride = 3;\r\n        var tangentStride = 3;\r\n\r\n        var len = positions.length / posStride;\r\n        var i: number, i1: number, i2: number;\r\n        var vector = new Vector3();\r\n\r\n        var bakeNormals = normals != null;\r\n        var bakeTangents = tangents != null;\r\n        var invTranspose = new Matrix4x4();\r\n\r\n        if (bakeNormals || bakeTangents)\r\n        {\r\n            invTranspose.copy(matrix);\r\n            invTranspose.invert();\r\n            invTranspose.transpose();\r\n        }\r\n\r\n        var vi0 = 0;\r\n        var ni0 = 0;\r\n        var ti0 = 0;\r\n\r\n        for (i = 0; i < len; ++i)\r\n        {\r\n            i1 = vi0 + 1;\r\n            i2 = vi0 + 2;\r\n\r\n            // bake position\r\n            vector.x = positions[vi0];\r\n            vector.y = positions[i1];\r\n            vector.z = positions[i2];\r\n            vector = matrix.transformPoint3(vector);\r\n            positions[vi0] = vector.x;\r\n            positions[i1] = vector.y;\r\n            positions[i2] = vector.z;\r\n            vi0 += posStride;\r\n\r\n            // bake normal\r\n            if (bakeNormals)\r\n            {\r\n                i1 = ni0 + 1;\r\n                i2 = ni0 + 2;\r\n                vector.x = normals[ni0];\r\n                vector.y = normals[i1];\r\n                vector.z = normals[i2];\r\n                vector = invTranspose.transformVector3(vector);\r\n                vector.normalize();\r\n                normals[ni0] = vector.x;\r\n                normals[i1] = vector.y;\r\n                normals[i2] = vector.z;\r\n                ni0 += normalStride;\r\n            }\r\n\r\n            // bake tangent\r\n            if (bakeTangents)\r\n            {\r\n                i1 = ti0 + 1;\r\n                i2 = ti0 + 2;\r\n                vector.x = tangents[ti0];\r\n                vector.y = tangents[i1];\r\n                vector.z = tangents[i2];\r\n                vector = invTranspose.transformVector3(vector);\r\n                vector.normalize();\r\n                tangents[ti0] = vector.x;\r\n                tangents[i1] = vector.y;\r\n                tangents[i2] = vector.z;\r\n                ti0 += tangentStride;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 合并几何体\r\n     * @param geometrys 几何体列表\r\n     */\r\n    mergeGeometry(geometrys: { indices: number[], positions: number[], uvs?: number[], normals?: number[], tangents?: number[] }[])\r\n    {\r\n        // 此处存在隐患。\r\n        // 优化方案，遍历所有几何体，找到所有共有属性后进行合并。\r\n        var result: { indices: number[], positions: number[], uvs?: number[], normals?: number[], tangents?: number[] } = <any>{};\r\n        for (let i = 0; i < geometrys.length; i++)\r\n        {\r\n            var geometry = geometrys[i];\r\n            if (i == 0)\r\n            {\r\n                result.indices = geometry.indices.concat();\r\n                result.positions = geometry.positions.concat();\r\n                geometry.uvs && (result.uvs = geometry.uvs.concat());\r\n                geometry.normals && (result.normals = geometry.normals.concat());\r\n                geometry.tangents && (result.tangents = geometry.tangents.concat());\r\n            } else\r\n            {\r\n                var startIndex = result.positions.length / 3;\r\n                geometry.indices.forEach(v => result.indices.push(v + startIndex));\r\n                geometry.positions.forEach(v => result.positions.push(v));\r\n                result.uvs && geometry.uvs.forEach(v => result.uvs.push(v));\r\n                result.normals && geometry.normals.forEach(v => result.normals.push(v));\r\n                result.tangents && geometry.tangents.forEach(v => result.tangents.push(v));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 射线投影几何体\r\n     * @param ray                           射线\r\n     * @param shortestCollisionDistance     当前最短碰撞距离\r\n     * @param cullFace                      裁剪面枚举\r\n     * \r\n     * @todo\r\n     * @see 3D数学基础：图形与游戏开发 P278 是否可用该内容优化运算效率？\r\n     * \r\n     * @see 优化参考 three.js Ray.intersectTriangle\r\n     */\r\n    raycast(ray: Ray3, indices: number[], positions: number[], uvs: number[], shortestCollisionDistance = Number.MAX_VALUE, cullFace = CullFace.NONE)\r\n    {\r\n        if (cullFace == CullFace.FRONT_AND_BACK) return null;\r\n\r\n        var t = 0;\r\n        var i0 = 0, i1 = 0, i2 = 0;\r\n        var rx = 0, ry = 0, rz = 0;\r\n        var nx = 0, ny = 0, nz = 0;\r\n        var cx = 0, cy = 0, cz = 0;\r\n        var coeff = 0, u = 0, v = 0, w = 0;\r\n        var p0x = 0, p0y = 0, p0z = 0;\r\n        var p1x = 0, p1y = 0, p1z = 0;\r\n        var p2x = 0, p2y = 0, p2z = 0;\r\n        var s0x = 0, s0y = 0, s0z = 0;\r\n        var s1x = 0, s1y = 0, s1z = 0;\r\n        var nl = 0, nDotV = 0, D = 0, disToPlane = 0;\r\n        var Q1Q2 = 0, Q1Q1 = 0, Q2Q2 = 0, RQ1 = 0, RQ2 = 0;\r\n\r\n        var collisionTriangleIndex = -1;\r\n\r\n        var numIndices = indices.length;\r\n\r\n        var result: { rayEntryDistance: number, localPosition: Vector3, localNormal: Vector3, uv: Vector2, index: number } = <any>{};\r\n\r\n        //遍历每个三角形 检测碰撞\r\n        for (var index = 0; index < numIndices; index += 3)\r\n        { // sweep all triangles\r\n            //三角形三个顶点索引\r\n            i0 = indices[index] * 3;\r\n            i1 = indices[index + 1] * 3;\r\n            i2 = indices[index + 2] * 3;\r\n\r\n            //三角形三个顶点数据\r\n            p0x = positions[i0];\r\n            p0y = positions[i0 + 1];\r\n            p0z = positions[i0 + 2];\r\n            p1x = positions[i1];\r\n            p1y = positions[i1 + 1];\r\n            p1z = positions[i1 + 2];\r\n            p2x = positions[i2];\r\n            p2y = positions[i2 + 1];\r\n            p2z = positions[i2 + 2];\r\n\r\n            //计算出三角面的法线\r\n            s0x = p1x - p0x; // s0 = p1 - p0\r\n            s0y = p1y - p0y;\r\n            s0z = p1z - p0z;\r\n            s1x = p2x - p0x; // s1 = p2 - p0\r\n            s1y = p2y - p0y;\r\n            s1z = p2z - p0z;\r\n            nx = s0y * s1z - s0z * s1y; // n = s0 x s1\r\n            ny = s0z * s1x - s0x * s1z;\r\n            nz = s0x * s1y - s0y * s1x;\r\n            nl = 1 / Math.sqrt(nx * nx + ny * ny + nz * nz); // normalize n 此处使用了开平方根，性能很差\r\n            nx *= nl;\r\n            ny *= nl;\r\n            nz *= nl;\r\n\r\n            //初始化射线数据\r\n            var rayPosition: Vector3 = ray.origin;\r\n            var rayDirection: Vector3 = ray.direction;\r\n\r\n            //计算射线与法线的点积，不等于零表示射线所在直线与三角面相交\r\n            nDotV = nx * rayDirection.x + ny * rayDirection.y + nz * rayDirection.z; // rayDirection . normal\r\n            //判断射线是否与三角面相交\r\n            if ((cullFace == CullFace.FRONT && nDotV > 0.0) || (cullFace == CullFace.BACK && nDotV < 0.0) || (cullFace == CullFace.NONE && nDotV != 0.0))\r\n            { // an intersection must exist\r\n                //计算平面方程D值，参考Plane3D\r\n                D = -(nx * p0x + ny * p0y + nz * p0z);\r\n                //射线点到平面的距离\r\n                disToPlane = -(nx * rayPosition.x + ny * rayPosition.y + nz * rayPosition.z + D);\r\n                t = disToPlane / nDotV;\r\n                //得到交点\r\n                cx = rayPosition.x + t * rayDirection.x;\r\n                cy = rayPosition.y + t * rayDirection.y;\r\n                cz = rayPosition.z + t * rayDirection.z;\r\n                //判断交点是否在三角形内( using barycentric coordinates )\r\n                Q1Q2 = s0x * s1x + s0y * s1y + s0z * s1z;\r\n                Q1Q1 = s0x * s0x + s0y * s0y + s0z * s0z;\r\n                Q2Q2 = s1x * s1x + s1y * s1y + s1z * s1z;\r\n                rx = cx - p0x;\r\n                ry = cy - p0y;\r\n                rz = cz - p0z;\r\n                RQ1 = rx * s0x + ry * s0y + rz * s0z;\r\n                RQ2 = rx * s1x + ry * s1y + rz * s1z;\r\n                coeff = 1 / (Q1Q1 * Q2Q2 - Q1Q2 * Q1Q2);\r\n                v = coeff * (Q2Q2 * RQ1 - Q1Q2 * RQ2);\r\n                if (v < 0)\r\n                    continue;\r\n                w = coeff * (-Q1Q2 * RQ1 + Q1Q1 * RQ2);\r\n                if (w < 0)\r\n                    continue;\r\n                u = 1 - v - w;\r\n                //u v w都大于0表示点在三角形内 射线的坐标t大于0表示射线朝向三角面\r\n                if (u >= 0 && t >= 0 && t < shortestCollisionDistance)\r\n                {\r\n                    shortestCollisionDistance = t;\r\n                    collisionTriangleIndex = index / 3;\r\n                    result.rayEntryDistance = t;\r\n                    result.localPosition = new Vector3(cx, cy, cz);\r\n                    result.localNormal = new Vector3(nx, ny, nz);\r\n                    if (uvs)\r\n                    {\r\n                        result.uv = getCollisionUV(indices, uvs, index, v, w, u);\r\n                    }\r\n                    result.index = index;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (collisionTriangleIndex >= 0)\r\n            return result;\r\n\r\n        return null;\r\n\r\n        /**\r\n         * 获取碰撞uv\r\n         * @param indices 顶点数据\r\n         * @param uvs uv数据\r\n         * @param triangleIndex 三角形所有\r\n         * @param v\r\n         * @param w\r\n         * @param u\r\n         * @param uvOffset\r\n         * @param uvStride\r\n         * @return 碰撞uv\r\n         */\r\n        function getCollisionUV(indices: number[], uvs: number[], triangleIndex: number, v: number, w: number, u: number)\r\n        {\r\n            var uIndex = indices[triangleIndex] * 2;\r\n            var uv0x = uvs[uIndex];\r\n            var uv0y = uvs[uIndex + 1];\r\n            uIndex = indices[triangleIndex + 1] * 2;\r\n            var uv1x = uvs[uIndex];\r\n            var uv1y = uvs[uIndex + 1];\r\n            uIndex = indices[triangleIndex + 2] * 2;\r\n            var uv2x = uvs[uIndex];\r\n            var uv2y = uvs[uIndex + 1];\r\n            var uv = new Vector2();\r\n            uv.x = u * uv0x + v * uv1x + w * uv2x;\r\n            uv.y = u * uv0y + v * uv1y + w * uv2y;\r\n            return uv;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取包围盒\r\n     * @param positions 顶点数据\r\n     */\r\n    getAABB(positions: number[])\r\n    {\r\n        return Box3.formPositions(positions);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const geometryUtils = new GeometryUtils();\r\n","import { Box3, Matrix4x4, Ray3, Vector2, Vector3 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { gPartial } from \"@feng3d/polyfill\";\r\nimport { Attribute, Attributes, CullFace, Index, RenderAtomic } from \"@feng3d/renderer\";\r\nimport { serialization, serialize } from \"@feng3d/serialization\";\r\nimport { AssetType } from \"../assets/AssetType\";\r\nimport { AssetData } from \"../core/AssetData\";\r\nimport { Feng3dObject } from \"../core/Feng3dObject\";\r\nimport { HideFlags } from \"../core/HideFlags\";\r\nimport { geometryUtils } from \"./GeometryUtils\";\r\n\r\nexport interface GeometryTypes { }\r\n\r\nexport type GeometryLike = GeometryTypes[keyof GeometryTypes];\r\n\r\nexport interface GeometryEventMap\r\n{\r\n    /**\r\n     * 包围盒失效\r\n     */\r\n    boundsInvalid: Geometry;\r\n}\r\n\r\n/**\r\n * 几何体\r\n */\r\nexport class Geometry<T extends GeometryEventMap = GeometryEventMap> extends Feng3dObject<T>\r\n{\r\n    @oav({ component: \"OAVFeng3dPreView\" })\r\n    private preview = \"\";\r\n\r\n    @oav()\r\n    get name()\r\n    {\r\n        return this._name;\r\n    }\r\n    set name(v)\r\n    {\r\n        this._name = v;\r\n    }\r\n    protected _name: string;\r\n\r\n    /**\r\n     * 资源编号\r\n     */\r\n    assetId: string;\r\n\r\n    assetType = AssetType.geometry;\r\n\r\n    /**\r\n     * 几何体信息\r\n     */\r\n    @oav({ component: \"OAVMultiText\", priority: 10 })\r\n    get geometryInfo()\r\n    {\r\n        var str = [\r\n            `Geometry Info`,\r\n            `  Vertices    ${this.numVertex}`,\r\n            `  Triangles    ${this.numTriangles}`,\r\n            `  Attributes    ${Object.keys(this._attributes).join(\",\")}`,\r\n        ].join(\"\\n\");\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * 索引数据\r\n     */\r\n    get indices()\r\n    {\r\n        this.updateGrometry();\r\n        return this._indexBuffer.indices;\r\n    }\r\n\r\n    /**\r\n     * 更新顶点索引数据\r\n     */\r\n    set indices(value: number[])\r\n    {\r\n        this._indexBuffer.indices = value;\r\n    }\r\n\r\n    /**\r\n     * 坐标数据\r\n     */\r\n    get positions()\r\n    {\r\n        return this._attributes.a_position.data;\r\n    }\r\n\r\n    set positions(value)\r\n    {\r\n        this._attributes.a_position.data = value;\r\n    }\r\n\r\n    /**\r\n     * 颜色数据\r\n     */\r\n    get colors()\r\n    {\r\n        return this._attributes.a_color.data;\r\n    }\r\n\r\n    set colors(value)\r\n    {\r\n        this._attributes.a_color.data = value;\r\n    }\r\n\r\n    /**\r\n     * uv数据\r\n     */\r\n    get uvs()\r\n    {\r\n        return this._attributes.a_uv.data;\r\n    }\r\n\r\n    set uvs(value)\r\n    {\r\n        this._attributes.a_uv.data = value;\r\n    }\r\n\r\n    /**\r\n     * 法线数据\r\n     */\r\n    get normals()\r\n    {\r\n        return this._attributes.a_normal.data;\r\n    }\r\n\r\n    set normals(value)\r\n    {\r\n        this._attributes.a_normal.data = value;\r\n    }\r\n\r\n    /**\r\n     * 切线数据\r\n     */\r\n    get tangents()\r\n    {\r\n        return this._attributes.a_tangent.data;\r\n    }\r\n\r\n    set tangents(value)\r\n    {\r\n        this._attributes.a_tangent.data = value;\r\n    }\r\n\r\n    /**\r\n     * 蒙皮索引，顶点关联的关节索引\r\n     */\r\n    get skinIndices()\r\n    {\r\n        return this._attributes.a_skinIndices.data;\r\n    }\r\n\r\n    set skinIndices(value)\r\n    {\r\n        this._attributes.a_skinIndices.data = value;\r\n    }\r\n\r\n    /**\r\n     * 蒙皮权重，顶点关联的关节权重\r\n     */\r\n    get skinWeights()\r\n    {\r\n        return this._attributes.a_skinWeights.data;\r\n    }\r\n\r\n    set skinWeights(value)\r\n    {\r\n        this._attributes.a_skinWeights.data = value;\r\n    }\r\n\r\n    /**\r\n     * 蒙皮索引，顶点关联的关节索引\r\n     */\r\n    get skinIndices1()\r\n    {\r\n        return this._attributes.a_skinIndices1.data;\r\n    }\r\n\r\n    set skinIndices1(value)\r\n    {\r\n        this._attributes.a_skinIndices1.data = value;\r\n    }\r\n\r\n    /**\r\n     * 蒙皮权重，顶点关联的关节权重\r\n     */\r\n    get skinWeights1()\r\n    {\r\n        return this._attributes.a_skinWeights1.data;\r\n    }\r\n\r\n    set skinWeights1(value)\r\n    {\r\n        this._attributes.a_skinWeights1.data = value;\r\n    }\r\n\r\n    /**\r\n     * 创建一个几何体\r\n     */\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * 标记需要更新几何体，在更改几何体数据后需要调用该函数。\r\n     */\r\n    @oav({ tooltip: \"标记需要更新几何体，在更改几何体数据后需要调用该函数。\" })\r\n    invalidateGeometry()\r\n    {\r\n        this._geometryInvalid = true;\r\n        this.invalidateBounds();\r\n    }\r\n\r\n    /**\r\n     * 更新几何体\r\n     */\r\n    updateGrometry()\r\n    {\r\n        if (this._geometryInvalid)\r\n        {\r\n            this._geometryInvalid = false;\r\n            this.buildGeometry();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 构建几何体\r\n     */\r\n    protected buildGeometry()\r\n    {\r\n    }\r\n\r\n    /**\r\n     * 顶点数量\r\n     */\r\n    get numVertex()\r\n    {\r\n        return this.positions.length / 3;\r\n    }\r\n\r\n    /**\r\n     * 三角形数量\r\n     */\r\n    get numTriangles()\r\n    {\r\n        return this.indices.length / 3;\r\n    }\r\n\r\n    /**\r\n     * 添加几何体\r\n     * @param geometry          被添加的几何体\r\n     * @param matrix         变换矩阵，把克隆被添加几何体的数据变换后再添加到该几何体中\r\n     */\r\n    addGeometry(geometry: Geometry, matrix?: Matrix4x4)\r\n    {\r\n        //更新几何体\r\n        this.updateGrometry();\r\n        geometry.updateGrometry();\r\n        //变换被添加的几何体\r\n        if (matrix != null)\r\n        {\r\n            geometry = geometry.clone();\r\n            geometry.applyTransformation(matrix);\r\n        }\r\n\r\n        //如果自身为空几何体\r\n        if (!this.indices)\r\n        {\r\n            this.cloneFrom(geometry);\r\n            return;\r\n        }\r\n\r\n        //\r\n        var attributes = this._attributes;\r\n        var addAttributes = geometry._attributes;\r\n        //当前顶点数量\r\n        var oldNumVertex = this.numVertex;\r\n        //合并索引\r\n        var indices = this.indices;\r\n        var targetIndices = geometry.indices;\r\n        var totalIndices = indices.concat();\r\n        for (var i = 0; i < targetIndices.length; i++)\r\n        {\r\n            totalIndices[indices.length + i] = targetIndices[i] + oldNumVertex;\r\n        }\r\n        this.indices = totalIndices;\r\n        //合并后顶点数量\r\n        var totalVertex = oldNumVertex + geometry.numVertex;\r\n        //合并属性数据\r\n        for (var attributeName in attributes)\r\n        {\r\n            var attribute: Attribute = attributes[attributeName];\r\n            var addAttribute: Attribute = addAttributes[attributeName];\r\n            //\r\n            attribute.data = attribute.data.concat(addAttribute.data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 应用变换矩阵\r\n     * @param matrix 变换矩阵\r\n     */\r\n    applyTransformation(matrix: Matrix4x4)\r\n    {\r\n        this.updateGrometry();\r\n\r\n        var vertices = this.positions;\r\n        var normals = this.normals;\r\n        var tangents = this.tangents;\r\n\r\n        geometryUtils.applyTransformation(matrix, vertices, normals, tangents);\r\n\r\n        this.positions = vertices;\r\n        this.normals = normals;\r\n        this.tangents = tangents;\r\n    }\r\n\r\n    /**\r\n     * 纹理U缩放，默认为1。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    scaleU = 1;\r\n\r\n    /**\r\n     * 纹理V缩放，默认为1。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    scaleV = 1;\r\n\r\n    /**\r\n     * 包围盒失效\r\n     */\r\n    invalidateBounds()\r\n    {\r\n        this._bounding = <any>null;\r\n        this.emit(\"boundsInvalid\", this);\r\n    }\r\n\r\n    get bounding()\r\n    {\r\n        this.updateGrometry();\r\n        if (!this._bounding)\r\n        {\r\n            var positions = this.positions;\r\n            if (!positions || positions.length == 0)\r\n                return new Box3();\r\n            this._bounding = Box3.formPositions(this.positions);\r\n        }\r\n        return this._bounding;\r\n    }\r\n\r\n    /**\r\n     * 射线投影几何体\r\n     * @param ray                           射线\r\n     * @param shortestCollisionDistance     当前最短碰撞距离\r\n     * @param cullFace                      裁剪面枚举\r\n     */\r\n    raycast(ray: Ray3, shortestCollisionDistance = Number.MAX_VALUE, cullFace = CullFace.NONE):\r\n        {\r\n            rayEntryDistance: number;\r\n            localPosition: Vector3;\r\n            localNormal: Vector3;\r\n            uv: Vector2;\r\n            index: number;\r\n        }\r\n    {\r\n        var result = geometryUtils.raycast(ray, this.indices, this.positions, this.uvs, shortestCollisionDistance, cullFace);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 获取顶点列表\r\n     * \r\n     * @param result \r\n     */\r\n    getVertices(result: Vector3[] = [])\r\n    {\r\n        var positions = this.positions;\r\n        var result: Vector3[] = []\r\n        for (let i = 0, n = positions.length; i < n; i += 3)\r\n        {\r\n            result.push(new Vector3(positions[i], positions[i + 1], positions[i + 2]));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getFaces(result: number[][] = [])\r\n    {\r\n        var indices = this.indices;\r\n        for (let i = 0, n = indices.length; i < n; i += 3)\r\n        {\r\n            result.push([indices[i], indices[i + 1], indices[i + 2]]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 克隆一个几何体\r\n     */\r\n    clone()\r\n    {\r\n        var geometry = new Geometry();\r\n        geometry.cloneFrom(this);\r\n        return geometry;\r\n    }\r\n\r\n    /**\r\n     * 从一个几何体中克隆数据\r\n     */\r\n    cloneFrom(geometry: Geometry)\r\n    {\r\n        geometry.updateGrometry();\r\n        this.indices = geometry.indices.concat();\r\n        for (var attributeName in geometry._attributes)\r\n        {\r\n            var attribute: Attribute = this._attributes[attributeName];\r\n            var addAttribute: Attribute = geometry._attributes[attributeName];\r\n\r\n            attribute.data = addAttribute.data.concat();\r\n        }\r\n    }\r\n\r\n    beforeRender(renderAtomic: RenderAtomic)\r\n    {\r\n        this.updateGrometry();\r\n\r\n        renderAtomic.indexBuffer = this._indexBuffer;\r\n\r\n        for (const key in this._attributes)\r\n        {\r\n            if (this._attributes.hasOwnProperty(key))\r\n            {\r\n                renderAtomic.attributes[key] = this._attributes[key];\r\n            }\r\n        }\r\n\r\n        renderAtomic.shaderMacro.SCALEU = this.scaleU;\r\n        renderAtomic.shaderMacro.SCALEV = this.scaleV;\r\n    }\r\n\r\n    /**\r\n     * 顶点索引缓冲\r\n     */\r\n    protected _indexBuffer = new Index();\r\n\r\n    /**\r\n     * 属性数据列表\r\n     */\r\n    protected _attributes: Attributes = {\r\n        a_position: new Attribute(\"a_position\", [], 3),\r\n        a_color: new Attribute(\"a_color\", [], 4),\r\n        a_uv: new Attribute(\"a_uv\", [], 2),\r\n        a_normal: new Attribute(\"a_normal\", [], 3),\r\n        a_tangent: new Attribute(\"a_tangent\", [], 3),\r\n        a_skinIndices: new Attribute(\"a_skinIndices\", [], 4),\r\n        a_skinWeights: new Attribute(\"a_skinWeights\", [], 4),\r\n        a_skinIndices1: new Attribute(\"a_skinIndices1\", [], 4),\r\n        a_skinWeights1: new Attribute(\"a_skinWeights1\", [], 4),\r\n    };\r\n\r\n    /**\r\n     * 清理数据\r\n     */\r\n    clear()\r\n    {\r\n        for (const key in this._attributes)\r\n        {\r\n            const element: Attribute = this._attributes[key];\r\n            element.data = [];\r\n        }\r\n    }\r\n\r\n    private _geometryInvalid = true;\r\n    private _useFaceWeights = false;\r\n\r\n    private _bounding: Box3;\r\n\r\n    /**\r\n     * 设置默认几何体\r\n     * \r\n     * @param name 默认几何体名称\r\n     * @param geometry 默认几何体\r\n     */\r\n    static setDefault<K extends keyof DefaultGeometry>(name: K, geometry: DefaultGeometry[K], param?: gPartial<DefaultGeometry[K]>)\r\n    {\r\n        this._defaultGeometry[name] = geometry;\r\n        if (param) serialization.setValue(geometry, param);\r\n        serialization.setValue(geometry, { name: name, assetId: name, hideFlags: HideFlags.NotEditable });\r\n        AssetData.addAssetData(name, geometry);\r\n    }\r\n\r\n    /**\r\n     * 获取默认几何体\r\n     * \r\n     * @param name 默认几何体名称\r\n     */\r\n    static getDefault<K extends keyof DefaultGeometry>(name: K)\r\n    {\r\n        return this._defaultGeometry[name];\r\n    }\r\n    private static _defaultGeometry: DefaultGeometry = <any>{};\r\n}\r\n\r\n/**\r\n * 默认几何体\r\n */\r\nexport interface DefaultGeometry\r\n{\r\n}\r\n","\r\n/**\r\n * 阴影类型\r\n */\r\nexport enum ShadowType\r\n{\r\n    /**\r\n     * 没有阴影\r\n     */\r\n    No_Shadows = 0,\r\n    /**\r\n     * 硬阴影\r\n     */\r\n    Hard_Shadows = 1,\r\n    /**\r\n     * PCF 阴影\r\n     */\r\n    PCF_Shadows = 2,\r\n    /**\r\n     * PCF 软阴影\r\n     */\r\n    PCF_Soft_Shadows = 3,\r\n}\r\n","import { Renderable } from \"../../core/Renderable\";\r\nimport { Matrix4x4 } from \"@feng3d/math\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { Texture2D } from \"../../textures/Texture2D\";\r\nimport { DirectionalLight } from \"../DirectionalLight\";\r\nimport { PointLight } from \"../PointLight\";\r\nimport { ShadowType } from \"../shadow/ShadowType\";\r\nimport { SpotLight } from \"../SpotLight\";\r\n\r\nexport class LightPicker\r\n{\r\n    private _model: Renderable\r\n\r\n    constructor(model: Renderable)\r\n    {\r\n        this._model = model;\r\n    }\r\n\r\n    beforeRender(renderAtomic: RenderAtomic)\r\n    {\r\n        var pointLights: PointLight[] = [];\r\n        var directionalLights: DirectionalLight[] = [];\r\n        var spotLights: SpotLight[] = [];\r\n\r\n        var scene = this._model.node3d.scene;\r\n        if (scene)\r\n        {\r\n            pointLights = scene.activePointLights;\r\n            directionalLights = scene.activeDirectionalLights;\r\n            spotLights = scene.activeSpotLights;\r\n        }\r\n\r\n        renderAtomic.shaderMacro.NUM_LIGHT = pointLights.length + directionalLights.length + spotLights.length;\r\n\r\n        //设置点光源数据\r\n        var castShadowPointLights: PointLight[] = [];\r\n        var unCastShadowPointLights: PointLight[] = [];\r\n        var pointShadowMaps: Texture2D[] = [];\r\n        pointLights.forEach(element =>\r\n        {\r\n            if (!element.isVisibleAndEnabled) return;\r\n            if (element.shadowType != ShadowType.No_Shadows && this._model.receiveShadows)\r\n            {\r\n                castShadowPointLights.push(element);\r\n                pointShadowMaps.push(element.shadowMap);\r\n            } else\r\n            {\r\n                unCastShadowPointLights.push(element);\r\n            }\r\n        });\r\n        renderAtomic.shaderMacro.NUM_POINTLIGHT = unCastShadowPointLights.length;\r\n        renderAtomic.shaderMacro.NUM_POINTLIGHT_CASTSHADOW = castShadowPointLights.length;\r\n        //\r\n        renderAtomic.uniforms.u_pointLights = unCastShadowPointLights;\r\n        renderAtomic.uniforms.u_castShadowPointLights = castShadowPointLights;\r\n        renderAtomic.uniforms.u_pointShadowMaps = pointShadowMaps;\r\n\r\n        //设置聚光灯光源数据\r\n        var castShadowSpotLights: SpotLight[] = [];\r\n        var unCastShadowSpotLights: SpotLight[] = [];\r\n        var spotShadowMaps: Texture2D[] = [];\r\n        var spotShadowMatrix: Matrix4x4[] = [];\r\n        spotLights.forEach(element =>\r\n        {\r\n            if (!element.isVisibleAndEnabled) return;\r\n            if (element.shadowType != ShadowType.No_Shadows && this._model.receiveShadows)\r\n            {\r\n                castShadowSpotLights.push(element);\r\n                spotShadowMatrix.push(element.shadowCamera.viewProjection);\r\n                spotShadowMaps.push(element.shadowMap);\r\n            } else\r\n            {\r\n                unCastShadowSpotLights.push(element);\r\n            }\r\n        });\r\n        renderAtomic.shaderMacro.NUM_SPOT_LIGHTS = unCastShadowSpotLights.length;\r\n        renderAtomic.shaderMacro.NUM_SPOT_LIGHTS_CASTSHADOW = castShadowSpotLights.length;\r\n        //\r\n        renderAtomic.uniforms.u_spotLights = unCastShadowSpotLights;\r\n        renderAtomic.uniforms.u_castShadowSpotLights = castShadowSpotLights;\r\n        renderAtomic.uniforms.u_spotShadowMatrix = spotShadowMatrix;\r\n        renderAtomic.uniforms.u_spotShadowMaps = spotShadowMaps;\r\n\r\n        // 设置方向光源数据\r\n        var castShadowDirectionalLights: DirectionalLight[] = [];\r\n        var unCastShadowDirectionalLights: DirectionalLight[] = [];\r\n        var directionalShadowMatrix: Matrix4x4[] = [];\r\n        var directionalShadowMaps: Texture2D[] = [];\r\n        directionalLights.forEach(element =>\r\n        {\r\n            if (!element.isVisibleAndEnabled) return;\r\n            if (element.shadowType != ShadowType.No_Shadows && this._model.receiveShadows)\r\n            {\r\n                castShadowDirectionalLights.push(element);\r\n                directionalShadowMatrix.push(element.shadowCamera.viewProjection);\r\n                directionalShadowMaps.push(element.shadowMap);\r\n            } else\r\n            {\r\n                unCastShadowDirectionalLights.push(element);\r\n            }\r\n        });\r\n\r\n        renderAtomic.shaderMacro.NUM_DIRECTIONALLIGHT = unCastShadowDirectionalLights.length;\r\n        renderAtomic.shaderMacro.NUM_DIRECTIONALLIGHT_CASTSHADOW = castShadowDirectionalLights.length;\r\n        //\r\n        renderAtomic.uniforms.u_directionalLights = unCastShadowDirectionalLights;\r\n        renderAtomic.uniforms.u_castShadowDirectionalLights = castShadowDirectionalLights;\r\n        renderAtomic.uniforms.u_directionalShadowMatrixs = directionalShadowMatrix;\r\n        renderAtomic.uniforms.u_directionalShadowMaps = directionalShadowMaps;\r\n    }\r\n}\r\n","import { AnimationCurve, Color3, Color4, Gradient, Rectangle, Vector2 } from \"@feng3d/math\";\r\nimport { dataTransform, mathUtil } from \"@feng3d/polyfill\";\r\n\r\n\r\n/**\r\n * 图片相关工具\r\n */\r\nexport class ImageUtil\r\n{\r\n    imageData: ImageData;\r\n\r\n    /**\r\n     * 获取图片数据\r\n     * @param image 加载完成的图片元素\r\n     */\r\n    static fromImage(image: HTMLImageElement) \r\n    {\r\n        return new ImageUtil().fromImage(image);\r\n    }\r\n\r\n    /**\r\n     * 创建ImageData\r\n     * @param width 数据宽度\r\n     * @param height 数据高度\r\n     * @param fillcolor 填充颜色\r\n     */\r\n    constructor(width = 1, height = 1, fillcolor = new Color4(0, 0, 0, 0))\r\n    {\r\n        this.init(width, height, fillcolor);\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     * @param width 宽度\r\n     * @param height 高度\r\n     * @param fillcolor 填充颜色\r\n     */\r\n    init(width = 1, height = 1, fillcolor = new Color4(0, 0, 0, 0))\r\n    {\r\n        this.imageData = new ImageData(width, height);\r\n        this.fillRect(new Rectangle(0, 0, width, height), fillcolor);\r\n    }\r\n\r\n    /**\r\n     * 获取图片数据\r\n     * @param image 加载完成的图片元素\r\n     */\r\n    fromImage(image: HTMLImageElement) \r\n    {\r\n        if (!image) return null;\r\n        var canvasImg = document.createElement(\"canvas\");\r\n        canvasImg.width = image.width;\r\n        canvasImg.height = image.height;\r\n\r\n        var ctxt = canvasImg.getContext('2d');\r\n        console.assert(!!ctxt);\r\n        ctxt.drawImage(image, 0, 0);\r\n        this.imageData = ctxt.getImageData(0, 0, image.width, image.height);//读取整张图片的像素。\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 绘制图片数据指定位置颜色\r\n     * @param x 图片数据x坐标\r\n     * @param y 图片数据y坐标\r\n     * @param color 颜色值\r\n     */\r\n    drawPixel(x: number, y: number, color: Color4)\r\n    {\r\n        var oldColor = this.getPixel(x, y);\r\n        oldColor.mix(color, color.a);\r\n        this.setPixel(x, y, oldColor);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 获取图片指定位置颜色值\r\n     * @param x 图片数据x坐标\r\n     * @param y 图片数据y坐标\r\n     */\r\n    getPixel(x: number, y: number)\r\n    {\r\n        var pos = (x + y * this.imageData.width) * 4;\r\n        var color = new Color4(this.imageData.data[pos] / 255, this.imageData.data[pos + 1] / 255, this.imageData.data[pos + 2] / 255, this.imageData.data[pos + 3] / 255);\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * 设置指定位置颜色值\r\n     * @param imageData 图片数据 \r\n     * @param x 图片数据x坐标\r\n     * @param y 图片数据y坐标\r\n     * @param color 颜色值\r\n     */\r\n    setPixel(x: number, y: number, color: Color4)\r\n    {\r\n        x = Math.round(x)\r\n        y = Math.round(y)\r\n        var pos = (x + y * this.imageData.width) * 4;\r\n\r\n        this.imageData.data[pos] = color.r * 255;\r\n        this.imageData.data[pos + 1] = color.g * 255;\r\n        this.imageData.data[pos + 2] = color.b * 255;\r\n        this.imageData.data[pos + 3] = color.a * 255;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 清理图片数据\r\n     * @param clearColor 清理时填充颜色\r\n     */\r\n    clear(clearColor = new Color4(0, 0, 0, 0))\r\n    {\r\n        for (let i = 0; i < this.imageData.width; i++)\r\n        {\r\n            for (let j = 0; j < this.imageData.height; j++)\r\n            {\r\n                this.setPixel(i, j, clearColor);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 填充矩形\r\n     * @param rect 填充的矩形\r\n     * @param fillcolor 填充颜色\r\n     */\r\n    fillRect(rect: Rectangle, fillcolor = new Color4())\r\n    {\r\n        for (let i = rect.x > 0 ? rect.x : 0; i < this.imageData.width && i < rect.x + rect.width; i++)\r\n        {\r\n            for (let j = rect.y > 0 ? rect.y : 0; j < this.imageData.height && j < rect.y + rect.height; j++)\r\n            {\r\n                this.setPixel(i, j, fillcolor);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绘制线条\r\n     * @param start 起始坐标\r\n     * @param end 终止坐标\r\n     * @param color 线条颜色\r\n     */\r\n    drawLine(start: Vector2, end: Vector2, color: Color4)\r\n    {\r\n        var length = end.subTo(start).length;\r\n        var p = new Vector2();\r\n        for (let i = 0; i <= length; i++)\r\n        {\r\n            start.lerpNumberTo(end, i / length, p);\r\n            this.setPixel(p.x, p.y, color);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 绘制点\r\n     * @param x x坐标\r\n     * @param y y坐标\r\n     * @param color 颜色\r\n     * @param size 尺寸\r\n     */\r\n    drawPoint(x: number, y: number, color: Color4, size = 1)\r\n    {\r\n        var half = Math.floor(size / 2);\r\n        //\r\n        var sx = x - half; if (sx < 0) sx = 0;\r\n        var ex = x - half + size; if (ex > this.imageData.width) ex = this.imageData.width;\r\n        var sy = y - half; if (sy < 0) sy = 0;\r\n        var ey = y - half + size; if (ey > this.imageData.height) ey = this.imageData.height;\r\n        //\r\n        for (let i = sx; i < ex; i++)\r\n        {\r\n            for (let j = sy; j < ey; j++)\r\n            {\r\n                this.setPixel(i, j, color);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 绘制图片数据\r\n     * @param imageData 图片数据\r\n     * @param x x坐标\r\n     * @param y y坐标\r\n     */\r\n    drawImageData(imageData: ImageData, x: number, y: number)\r\n    {\r\n        var rect = new Rectangle(0, 0, this.imageData.width, this.imageData.height).intersection(new Rectangle(x, y, imageData.width, imageData.height));\r\n\r\n        var imageUtil = new ImageUtil(); imageUtil.imageData = imageData;\r\n        for (let i = rect.x; i < rect.x + rect.width; i++)\r\n        {\r\n            for (let j = rect.y; j < rect.y + rect.height; j++)\r\n            {\r\n                var c = imageUtil.getPixel(i - x, j - y);\r\n                this.drawPixel(i, j, c);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 转换为DataUrl字符串数据\r\n     */\r\n    toDataURL()\r\n    {\r\n        return dataTransform.imageDataToDataURL(this.imageData);\r\n    }\r\n\r\n    /**\r\n     * 创建默认粒子贴图\r\n     * @param size 尺寸\r\n     */\r\n    drawDefaultParticle(size = 64)\r\n    {\r\n        var imageData = new ImageData(size, size);\r\n\r\n        var half = size / 2;\r\n        for (let i = 0; i < size; i++)\r\n        {\r\n            for (let j = 0; j < size; j++)\r\n            {\r\n                var l = mathUtil.clamp(new Vector2(i - half, j - half).length, 0, half) / half;\r\n                var f = 1 - l;\r\n                f = f * f;\r\n\r\n                var pos = (i + j * size) * 4;\r\n                imageData.data[pos] = f * 255;\r\n                imageData.data[pos + 1] = f * 255;\r\n                imageData.data[pos + 2] = f * 255;\r\n                imageData.data[pos + 3] = f * 255;\r\n            }\r\n        }\r\n        this.imageData = imageData;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 创建颜色拾取矩形\r\n     * @param color 基色\r\n     * @param width 宽度    \r\n     * @param height 高度\r\n     */\r\n    drawColorPickerRect(color: number)\r\n    {\r\n        Image\r\n        var leftTop = new Color3(1, 1, 1);\r\n        var rightTop = new Color3().fromUnit(color);\r\n        var leftBottom = new Color3(0, 0, 0);\r\n        var rightBottom = new Color3(0, 0, 0);\r\n\r\n        //\r\n        for (let i = 0; i < this.imageData.width; i++)\r\n        {\r\n            for (let j = 0; j < this.imageData.height; j++)\r\n            {\r\n                var top = leftTop.mixTo(rightTop, i / this.imageData.width);\r\n                var bottom = leftBottom.mixTo(rightBottom, i / this.imageData.width);\r\n                var v = top.mixTo(bottom, j / this.imageData.height);\r\n\r\n                this.setPixel(i, j, v.toColor4())\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    drawColorRect(color: Color4)\r\n    {\r\n        var colorHeight = Math.floor(this.imageData.height * 0.8);\r\n        var alphaWidth = Math.floor(color.a * this.imageData.width);\r\n\r\n        var color4 = color.clone(); color4.a = 1;\r\n        var white = new Color4(1, 1, 1);\r\n        var black = new Color4(0, 0, 0);\r\n        //\r\n        for (let i = 0; i < this.imageData.width; i++)\r\n        {\r\n            for (let j = 0; j < this.imageData.height; j++)\r\n            {\r\n                //\r\n                if (j <= colorHeight)\r\n                {\r\n                    this.setPixel(i, j, color4)\r\n                } else\r\n                {\r\n                    this.setPixel(i, j, i < alphaWidth ? white : black)\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param gradient \r\n     * @param dirw true为横向条带，否则纵向条带\r\n     */\r\n    drawMinMaxGradient(gradient: Gradient, dirw = true)\r\n    {\r\n        //\r\n        for (let i = 0; i < this.imageData.width; i++)\r\n        {\r\n            for (let j = 0; j < this.imageData.height; j++)\r\n            {\r\n                var c = gradient.getValue(dirw ? i / (this.imageData.width - 1) : j / (this.imageData.height - 1));\r\n\r\n                this.setPixel(i, j, c);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 绘制曲线\r\n     * @param curve 曲线\r\n     * @param between0And1 是否显示值在[0,1]区间，否则[-1,1]区间\r\n     * @param color 曲线颜色\r\n     */\r\n    drawCurve(curve: AnimationCurve, between0And1: boolean, color: Color4, rect = null)\r\n    {\r\n        rect = rect || new Rectangle(0, 0, this.imageData.width, this.imageData.height);\r\n        var range = between0And1 ? [1, 0] : [1, -1];\r\n\r\n        var prepos = new Vector2();\r\n        var curpos = new Vector2();\r\n        //\r\n        for (let i = 0; i < rect.width; i++)\r\n        {\r\n            //\r\n            var y = curve.getValue(i / (rect.width - 1));\r\n\r\n            y = mathUtil.mapLinear(y, range[0], range[1], 0, 1);\r\n\r\n            var j = Math.round(y * (rect.height - 1));\r\n\r\n            //\r\n            curpos.x = rect.x + i;\r\n            curpos.y = rect.y + j;\r\n            if (i > 0)\r\n            {\r\n                this.drawLine(prepos, curpos, color);\r\n            }\r\n            prepos.x = curpos.x;\r\n            prepos.y = curpos.y;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 绘制双曲线\r\n     * @param curve 曲线\r\n     * @param curve1 曲线\r\n     * @param between0And1  是否显示值在[0,1]区间，否则[-1,1]区间\r\n     * @param curveColor 颜色\r\n     */\r\n    drawBetweenTwoCurves(curve: AnimationCurve, curve1: AnimationCurve, between0And1: boolean, curveColor = new Color4(), fillcolor = new Color4(1, 1, 1, 0.5), rect = null)\r\n    {\r\n        rect = rect || new Rectangle(0, 0, this.imageData.width, this.imageData.height);\r\n        var range = between0And1 ? [1, 0] : [1, -1];\r\n\r\n        var prepos0 = new Vector2();\r\n        var curpos0 = new Vector2();\r\n        var prepos1 = new Vector2();\r\n        var curpos1 = new Vector2();\r\n        //\r\n        for (let i = 0; i < rect.width; i++)\r\n        {\r\n            //\r\n            var y0 = curve.getValue(i / (rect.width - 1));\r\n            var y1 = curve1.getValue(i / (rect.width - 1));\r\n\r\n            y0 = mathUtil.mapLinear(y0, range[0], range[1], 0, 1);\r\n            y1 = mathUtil.mapLinear(y1, range[0], range[1], 0, 1);\r\n\r\n            y0 = Math.round(y0 * (rect.height - 1));\r\n            y1 = Math.round(y1 * (rect.height - 1));\r\n\r\n            curpos0.x = rect.x + i;\r\n            curpos0.y = rect.y + y0;\r\n            curpos1.x = rect.x + i;\r\n            curpos1.y = rect.y + y1;\r\n\r\n            this.drawLine(new Vector2(rect.x + i, rect.y + y0), new Vector2(rect.x + i, rect.y + y1), fillcolor);\r\n            if (i > 0)\r\n            {\r\n                this.drawLine(prepos0, curpos0, curveColor);\r\n                this.drawLine(prepos1, curpos1, curveColor);\r\n            }\r\n            prepos0.x = curpos0.x;\r\n            prepos0.y = curpos0.y;\r\n            prepos1.x = curpos1.x;\r\n            prepos1.y = curpos1.y;\r\n\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 清理背景颜色，目前仅用于特定的抠图，例如 editor\\resource\\assets\\3d\\terrain\\terrain_brushes.png\r\n     * @param backColor 背景颜色\r\n     */\r\n    clearBackColor(backColor: Color4)\r\n    {\r\n        for (let i = 0; i < this.imageData.width; i++)\r\n        {\r\n            for (let j = 0; j < this.imageData.height; j++)\r\n            {\r\n                var t = this.getPixel(i, j);\r\n                var a = 1 - t.r / backColor.r;\r\n                t.r = t.g = t.b = 0;\r\n                t.a = a;\r\n                this.setPixel(i, j, t);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n","import { Color4, ColorKeywords, Vector2 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { dataTransform, mathUtil } from \"@feng3d/polyfill\";\r\nimport { Texture, TextureDataType, TextureFormat, TextureMagFilter, TextureMinFilter, TextureType, TextureWrap } from \"@feng3d/renderer\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Feng3dObject } from \"../../core/Feng3dObject\";\r\nimport { ImageUtil } from \"../../utils/ImageUtil\";\r\n\r\nexport enum ImageDatas\r\n{\r\n    black = \"black\",\r\n    white = \"white\",\r\n    red = \"red\",\r\n    green = \"green\",\r\n    blue = \"blue\",\r\n    defaultNormal = \"defaultNormal\",\r\n    defaultParticle = \"defaultParticle\",\r\n}\r\n\r\nexport const imageDatas: {\r\n    black: ImageData;\r\n    white: ImageData;\r\n    red: ImageData;\r\n    green: ImageData;\r\n    blue: ImageData;\r\n    defaultNormal: ImageData;\r\n    defaultParticle: ImageData;\r\n} = {\r\n    black: new ImageUtil(1, 1, Color4.fromUnit24(ColorKeywords.black)).imageData,\r\n    white: new ImageUtil(1, 1, Color4.fromUnit24(ColorKeywords.white)).imageData,\r\n    red: new ImageUtil(1, 1, Color4.fromUnit24(ColorKeywords.red)).imageData,\r\n    green: new ImageUtil(1, 1, Color4.fromUnit24(ColorKeywords.green)).imageData,\r\n    blue: new ImageUtil(1, 1, Color4.fromUnit24(ColorKeywords.blue)).imageData,\r\n    defaultNormal: new ImageUtil(1, 1, Color4.fromUnit24(0x8080ff)).imageData,\r\n    defaultParticle: new ImageUtil().drawDefaultParticle().imageData,\r\n}\r\n\r\n/**\r\n * 纹理信息\r\n */\r\nexport abstract class TextureInfo<T = any> extends Feng3dObject<T> implements Texture\r\n{\r\n    /**\r\n     * 纹理类型\r\n     */\r\n    textureType: TextureType;\r\n\r\n    /**\r\n     * 格式\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVEnum\", componentParam: { enumClass: TextureFormat } })\r\n    @watch(\"invalidate\")\r\n    format = TextureFormat.RGBA;\r\n\r\n    /**\r\n     * 数据类型\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVEnum\", componentParam: { enumClass: TextureDataType } })\r\n    @watch(\"invalidate\")\r\n    type = TextureDataType.UNSIGNED_BYTE;\r\n\r\n    /**\r\n     * 是否生成mipmap\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidate\")\r\n    generateMipmap = false;\r\n\r\n    /**\r\n     * 对图像进行Y轴反转。默认值为false\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidate\")\r\n    flipY = false;\r\n\r\n    /**\r\n     * 将图像RGB颜色值得每一个分量乘以A。默认为false\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidate\")\r\n    premulAlpha = false;\r\n\r\n    @serialize\r\n    @oav({ component: \"OAVEnum\", componentParam: { enumClass: TextureMinFilter } })\r\n    minFilter = TextureMinFilter.LINEAR;\r\n\r\n    @serialize\r\n    @oav({ component: \"OAVEnum\", componentParam: { enumClass: TextureMagFilter } })\r\n    magFilter = TextureMagFilter.LINEAR;\r\n    /**\r\n     * 表示x轴的纹理的回环方式，就是当纹理的宽度小于需要贴图的平面的宽度的时候，平面剩下的部分应该p以何种方式贴图的问题。\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVEnum\", componentParam: { enumClass: TextureWrap } })\r\n    get wrapS()\r\n    {\r\n        if (!this.isPowerOfTwo)\r\n            return TextureWrap.CLAMP_TO_EDGE;\r\n        return this._wrapS;\r\n    }\r\n    set wrapS(v)\r\n    {\r\n        this._wrapS = v;\r\n    }\r\n    private _wrapS = TextureWrap.REPEAT;\r\n\r\n    /**\r\n     * 表示y轴的纹理回环方式。 magFilter和minFilter表示过滤的方式，这是OpenGL的基本概念，我将在下面讲一下，目前你不用担心它的使用。当您不设置的时候，它会取默认值，所以，我们这里暂时不理睬他。\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVEnum\", componentParam: { enumClass: TextureWrap } })\r\n    get wrapT()\r\n    {\r\n        if (!this.isPowerOfTwo)\r\n            return TextureWrap.CLAMP_TO_EDGE;\r\n        return this._wrapT;\r\n    }\r\n    set wrapT(v)\r\n    {\r\n        this._wrapT = v;\r\n    }\r\n    private _wrapT = TextureWrap.REPEAT;\r\n\r\n    /**\r\n     * 各向异性过滤。使用各向异性过滤能够使纹理的效果更好，但是会消耗更多的内存、CPU、GPU时间。默认为0。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    anisotropy = 0;\r\n\r\n    invalid = true;\r\n\r\n    /**\r\n     * 需要使用的贴图数据\r\n     */\r\n    protected _pixels: TexImageSource | TexImageSource[];\r\n\r\n    /**\r\n     * 当贴图数据未加载好等情况时代替使用\r\n     */\r\n    noPixels: string | string[];\r\n\r\n    /**\r\n     * 当前使用的贴图数据\r\n     */\r\n    protected _activePixels: TexImageSource | TexImageSource[];\r\n\r\n    /**\r\n     * 是否为渲染目标纹理\r\n     */\r\n    isRenderTarget = false;\r\n\r\n    @watch(\"invalidate\")\r\n    OFFSCREEN_WIDTH = 1024;\r\n\r\n    @watch(\"invalidate\")\r\n    OFFSCREEN_HEIGHT = 1024;\r\n\r\n    /**\r\n     * 是否为2的幂贴图\r\n     */\r\n    get isPowerOfTwo()\r\n    {\r\n        if (this.isRenderTarget)\r\n        {\r\n            if (this.OFFSCREEN_WIDTH == 0 || !mathUtil.isPowerOfTwo(this.OFFSCREEN_WIDTH))\r\n                return false;\r\n            if (this.OFFSCREEN_HEIGHT == 0 || !mathUtil.isPowerOfTwo(this.OFFSCREEN_HEIGHT))\r\n                return false;\r\n            return true;\r\n        }\r\n        var pixels = this.activePixels;\r\n        if (!pixels) return false;\r\n        if (!Array.isArray(pixels))\r\n            pixels = [pixels];\r\n        for (let i = 0; i < pixels.length; i++)\r\n        {\r\n            const element = pixels[i];\r\n            if (element.width == 0 || !mathUtil.isPowerOfTwo(element.width))\r\n                return false;\r\n            if (element.height == 0 || !mathUtil.isPowerOfTwo(element.height))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 纹理尺寸\r\n     */\r\n    getSize()\r\n    {\r\n        if (this.isRenderTarget)\r\n        {\r\n            return new Vector2(this.OFFSCREEN_WIDTH, this.OFFSCREEN_HEIGHT);\r\n        }\r\n        var pixels = this.activePixels;\r\n        if (!pixels) new Vector2(1, 1);\r\n        if (!Array.isArray(pixels))\r\n            pixels = [pixels];\r\n        if (pixels.length == 0)\r\n            return new Vector2(1, 1);\r\n        var pixel = pixels[0];\r\n        return new Vector2(pixel.width, pixel.height);\r\n    }\r\n\r\n    /**\r\n     * 判断数据是否满足渲染需求\r\n     */\r\n    private checkRenderData(pixels: TexImageSource | TexImageSource[])\r\n    {\r\n        if (!pixels) return false;\r\n        if (!Array.isArray(pixels))\r\n            pixels = [pixels];\r\n\r\n        if (pixels.length == 0) return false;\r\n        for (let i = 0; i < pixels.length; i++)\r\n        {\r\n            const element = pixels[i];\r\n            if (!element) return false;\r\n            if (element.width == 0)\r\n                return false;\r\n            if (element.height == 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 使纹理失效\r\n     */\r\n    invalidate()\r\n    {\r\n        this.invalid = true;\r\n    }\r\n\r\n    get activePixels()\r\n    {\r\n        this.updateActivePixels();\r\n        return this._activePixels;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get dataURL()\r\n    {\r\n        this.updateActivePixels();\r\n        if (!this._dataURL)\r\n        {\r\n            if (this._activePixels instanceof ImageData)\r\n                this._dataURL = dataTransform.imageDataToDataURL(this._activePixels)\r\n            else if (this._activePixels instanceof HTMLImageElement)\r\n                this._dataURL = dataTransform.imageToDataURL(this._activePixels);\r\n            else if (this._activePixels instanceof HTMLCanvasElement)\r\n                this._dataURL = dataTransform.canvasToDataURL(this._activePixels);\r\n        }\r\n        return this._dataURL;\r\n    }\r\n    private _dataURL: string;\r\n\r\n    private updateActivePixels()\r\n    {\r\n        var old = this._activePixels;\r\n        if (this.checkRenderData(this._pixels))\r\n        {\r\n            this._activePixels = this._pixels;\r\n        } else\r\n        {\r\n            if (Array.isArray(this.noPixels))\r\n            {\r\n                this._activePixels = this.noPixels.map(v => imageDatas[v]);\r\n            } else\r\n            {\r\n                this._activePixels = imageDatas[this.noPixels];\r\n            }\r\n        }\r\n        if (old != this._activePixels) this._dataURL = null;\r\n    }\r\n}\r\n","import { loader } from \"@feng3d/filesystem\";\r\nimport { TextureFormat, TextureType } from \"@feng3d/renderer\";\r\nimport { serialization, serialize } from \"@feng3d/serialization\";\r\nimport { AssetType } from \"../assets/AssetType\";\r\nimport { AssetData } from \"../core/AssetData\";\r\nimport { HideFlags } from \"../core/HideFlags\";\r\nimport { ImageDatas, TextureInfo } from \"../render/data/TextureInfo\";\r\n\r\nexport interface Texture2DEventMap\r\n{\r\n    /**\r\n     * 加载完成\r\n     */\r\n    loadCompleted: any;\r\n}\r\n\r\n/**\r\n * 2D纹理\r\n */\r\nexport class Texture2D<T extends Texture2DEventMap = Texture2DEventMap> extends TextureInfo<T>\r\n{\r\n    __class__: \"feng3d.Texture2D\";\r\n\r\n    /**\r\n     * 纹理类型\r\n     */\r\n    textureType = TextureType.TEXTURE_2D;\r\n\r\n    assetType = AssetType.texture;\r\n\r\n    /**\r\n     * 当贴图数据未加载好等情况时代替使用\r\n     */\r\n    noPixels = ImageDatas.white;\r\n\r\n    /**\r\n     * 是否已加载\r\n     */\r\n    get isLoaded() { return this._loadings.length == 0; }\r\n    private _loadings = [];\r\n\r\n    get image(): HTMLImageElement\r\n    {\r\n        return <any>this._pixels;\r\n    }\r\n\r\n    /**\r\n     * 用于表示初始化纹理的数据来源\r\n     */\r\n    @serialize\r\n    get source()\r\n    {\r\n        return this._source;\r\n    }\r\n    set source(v)\r\n    {\r\n        this._source = v;\r\n        if (!v)\r\n        {\r\n            this._pixels = null;\r\n            this.invalidate();\r\n            return;\r\n        }\r\n        if (v.url)\r\n        {\r\n            this._loadings.push(v.url);\r\n            loader.loadImage(v.url, (img) =>\r\n            {\r\n                this._pixels = img;\r\n                this.invalidate();\r\n                Array.delete(this._loadings, v.url);\r\n                this.onItemLoadCompleted();\r\n            }, null,\r\n                (e) =>\r\n                {\r\n                    console.error(e);\r\n                    Array.delete(this._loadings, v.url);\r\n                    this.onItemLoadCompleted();\r\n                });\r\n        }\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    private onItemLoadCompleted()\r\n    {\r\n        if (this._loadings.length == 0) this.emit(\"loadCompleted\");\r\n    }\r\n\r\n    /**\r\n     * 已加载完成或者加载完成时立即调用\r\n     * @param callback 完成回调\r\n     */\r\n    onLoadCompleted(callback: () => void)\r\n    {\r\n        if (this.isLoaded) { callback(); return; }\r\n        this.once(\"loadCompleted\", callback);\r\n    }\r\n\r\n    private _source: { url: string };\r\n\r\n    /**\r\n     * 默认贴图\r\n     */\r\n    static white: Texture2D;\r\n\r\n    /**\r\n     * 默认贴图\r\n     */\r\n    static default: Texture2D;\r\n\r\n    /**\r\n     * 默认法线贴图\r\n     */\r\n    static defaultNormal: Texture2D;\r\n\r\n    /**\r\n     * 默认粒子贴图\r\n     */\r\n    static defaultParticle: Texture2D;\r\n\r\n    /**\r\n     * 从url初始化纹理\r\n     * \r\n     * @param url 路径\r\n     */\r\n    static fromUrl(url: string)\r\n    {\r\n        var texture = new Texture2D();\r\n        texture.source = { url: url };\r\n        return texture;\r\n    }\r\n}\r\n\r\nTexture2D.white = serialization.setValue(new Texture2D(), { name: \"white-Texture\", noPixels: ImageDatas.white, hideFlags: HideFlags.NotEditable })\r\nTexture2D.default = serialization.setValue(new Texture2D(), { name: \"Default-Texture\", hideFlags: HideFlags.NotEditable })\r\nTexture2D.defaultNormal = serialization.setValue(new Texture2D(), { name: \"Default-NormalTexture\", noPixels: ImageDatas.defaultNormal, hideFlags: HideFlags.NotEditable })\r\nTexture2D.defaultParticle = serialization.setValue(new Texture2D(), { name: \"Default-ParticleTexture\", noPixels: ImageDatas.defaultParticle, format: TextureFormat.RGBA, hideFlags: HideFlags.NotEditable })\r\n\r\nAssetData.addAssetData(\"white-Texture\", Texture2D.white);\r\nAssetData.addAssetData(\"Default-Texture\", Texture2D.default);\r\nAssetData.addAssetData(\"Default-NormalTexture\", Texture2D.defaultNormal);\r\nAssetData.addAssetData(\"Default-ParticleTexture\", Texture2D.defaultParticle);\r\n","import { AssetType } from \"../assets/AssetType\";\r\nimport { AssetData } from \"../core/AssetData\";\r\nimport { HideFlags } from \"../core/HideFlags\";\r\nimport { fs } from \"@feng3d/filesystem\";\r\nimport { ImageDatas, TextureInfo } from \"../render/data/TextureInfo\";\r\nimport { TextureType } from \"@feng3d/renderer\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialization, serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Texture2D } from \"./Texture2D\";\r\n\r\nexport interface TextureCubeEventMap\r\n{\r\n    /**\r\n     * 加载完成\r\n     */\r\n    loadCompleted: any;\r\n}\r\n\r\nexport type TextureCubeImageName = \"positive_x_url\" | \"positive_y_url\" | \"positive_z_url\" | \"negative_x_url\" | \"negative_y_url\" | \"negative_z_url\";\r\n\r\n/**\r\n * 立方体纹理\r\n */\r\nexport class TextureCube<T extends TextureCubeEventMap = TextureCubeEventMap> extends TextureInfo<T>\r\n{\r\n    __class__: \"feng3d.TextureCube\";\r\n\r\n    textureType = TextureType.TEXTURE_CUBE_MAP;\r\n\r\n    assetType = AssetType.texturecube;\r\n\r\n    static ImageNames: TextureCubeImageName[] = [\"positive_x_url\", \"positive_y_url\", \"positive_z_url\", \"negative_x_url\", \"negative_y_url\", \"negative_z_url\"];\r\n\r\n    @oav({ component: \"OAVCubeMap\", priority: -1 })\r\n    OAVCubeMap: string = \"\";\r\n\r\n    /**\r\n     * 原始数据\r\n     */\r\n    @serialize\r\n    @watch(\"_rawDataChanged\")\r\n    rawData: { type: \"texture\", textures: Texture2D[] } | { type: \"path\", paths: string[] };\r\n\r\n    noPixels = [ImageDatas.white, ImageDatas.white, ImageDatas.white, ImageDatas.white, ImageDatas.white, ImageDatas.white];\r\n\r\n    protected _pixels = [null, null, null, null, null, null];\r\n\r\n    /**\r\n     * 是否加载完成\r\n     */\r\n    get isLoaded() { return this._loading.length == 0; }\r\n    private _loading = [];\r\n\r\n    setTexture2D(pos: TextureCubeImageName, texture: Texture2D)\r\n    {\r\n        if (this.rawData == null || this.rawData.type != \"texture\")\r\n        {\r\n            this.rawData = { type: \"texture\", textures: [] };\r\n        }\r\n        var index = TextureCube.ImageNames.indexOf(pos);\r\n        this.rawData.textures[index] = texture;\r\n\r\n        this._loadItemTexture(texture, index);\r\n    }\r\n\r\n    setTexture2DPath(pos: TextureCubeImageName, path: string)\r\n    {\r\n        if (this.rawData == null || this.rawData.type != \"path\")\r\n        {\r\n            this.rawData = { type: \"path\", paths: [] };\r\n        }\r\n        var index = TextureCube.ImageNames.indexOf(pos);\r\n        this.rawData.paths[index] = path;\r\n\r\n        this._loadItemImagePath(path, index);\r\n    }\r\n\r\n    getTextureImage(pos: TextureCubeImageName, callback: (img?: HTMLImageElement) => void)\r\n    {\r\n        if (!this.rawData) { callback(); return; }\r\n        var index = TextureCube.ImageNames.indexOf(pos);\r\n        if (this.rawData.type == \"texture\")\r\n        {\r\n            var texture = this.rawData.textures[index];\r\n            if (!texture) { callback(); return; };\r\n            texture.onLoadCompleted(() =>\r\n            {\r\n                callback(texture.image);\r\n            });\r\n        } else if (this.rawData.type == \"path\")\r\n        {\r\n            let path = this.rawData.paths[index];\r\n            if (!path) { callback(); return; }\r\n            fs.readImage(path, (err: Error, img: HTMLImageElement) =>\r\n            {\r\n                callback(img);\r\n            });\r\n        }\r\n    }\r\n\r\n    private _rawDataChanged()\r\n    {\r\n        if (!this.rawData) return;\r\n\r\n        if (this.rawData.type == \"texture\")\r\n        {\r\n            this.rawData.textures.forEach((v, index) =>\r\n            {\r\n                this._loadItemTexture(v, index);\r\n            });\r\n            this.invalidate();\r\n        } else if (this.rawData.type == \"path\")\r\n        {\r\n            this.rawData.paths.forEach((v, index) =>\r\n            {\r\n                this._loadItemImagePath(v, index);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载单个贴图\r\n     * \r\n     * @param texture 贴图\r\n     * @param index 索引\r\n     */\r\n    private _loadItemTexture(texture: Texture2D, index: number)\r\n    {\r\n        if (texture == null) return;\r\n\r\n        this._loading.push(texture);\r\n        texture.onLoadCompleted(() =>\r\n        {\r\n            if (this.rawData.type == \"texture\" && this.rawData.textures[index] == texture)\r\n            {\r\n                this._pixels[index] = texture.image;\r\n                this.invalidate();\r\n            }\r\n            Array.delete(this._loading, texture);\r\n            this._onItemLoadCompleted();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载单个图片\r\n     * \r\n     * @param imagepath 图片路径\r\n     * @param index 索引\r\n     */\r\n    private _loadItemImagePath(imagepath: string, index: number)\r\n    {\r\n        if (imagepath == null) return;\r\n\r\n        this._loading.push(imagepath);\r\n        fs.readImage(imagepath, (err, img) =>\r\n        {\r\n            if (img != null && this.rawData.type == \"path\" && this.rawData.paths[index] == imagepath)\r\n            {\r\n                this._pixels[index] = img;\r\n                this.invalidate();\r\n            }\r\n            Array.delete(this._loading, imagepath);\r\n            this._onItemLoadCompleted();\r\n        });\r\n    }\r\n\r\n    private _onItemLoadCompleted()\r\n    {\r\n        if (this._loading.length == 0) this.emit(\"loadCompleted\");\r\n    }\r\n\r\n    /**\r\n     * 已加载完成或者加载完成时立即调用\r\n     * @param callback 完成回调\r\n     */\r\n    onLoadCompleted(callback: () => void)\r\n    {\r\n        if (this.isLoaded) { callback(); return; }\r\n        this.once(\"loadCompleted\", callback);\r\n    }\r\n\r\n    static default: TextureCube;\r\n}\r\n\r\nTextureCube.default = serialization.setValue(new TextureCube(), { name: \"Default-TextureCube\", hideFlags: HideFlags.NotEditable })\r\n\r\nAssetData.addAssetData(\"Default-TextureCube\", TextureCube.default);\r\n","import { globalEmitter } from \"@feng3d/event\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { gPartial } from \"@feng3d/polyfill\";\r\nimport { RenderAtomic, RenderMode, RenderParams, Shader, shaderlib } from \"@feng3d/renderer\";\r\nimport { serialization, serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { AssetData } from \"../core/AssetData\";\r\nimport { Feng3dObject } from \"../core/Feng3dObject\";\r\nimport { HideFlags } from \"../core/HideFlags\";\r\nimport { Texture2D } from \"../textures/Texture2D\";\r\nimport { TextureCube } from \"../textures/TextureCube\";\r\n\r\nexport interface UniformsTypes { }\r\nexport type ShaderNames = keyof UniformsTypes;\r\nexport type UniformsLike = UniformsTypes[keyof UniformsTypes];\r\n\r\n/**\r\n * 材质\r\n */\r\nexport class Material extends Feng3dObject\r\n{\r\n    __class__: \"feng3d.Material\";\r\n\r\n    static create<K extends keyof UniformsTypes>(shaderName: K, uniforms?: gPartial<UniformsTypes[K]>, renderParams?: gPartial<RenderParams>)\r\n    {\r\n        var material = new Material();\r\n        material.init(shaderName, uniforms, renderParams);\r\n        return material;\r\n    }\r\n\r\n    init<K extends keyof UniformsTypes>(shaderName: K, uniforms?: gPartial<UniformsTypes[K]>, renderParams?: gPartial<RenderParams>)\r\n    {\r\n        this.shaderName = shaderName;\r\n        //\r\n        uniforms && serialization.setValue(this.uniforms, <any>uniforms);\r\n        renderParams && serialization.setValue(this.renderParams, renderParams);\r\n        return this;\r\n    }\r\n\r\n    //\r\n    private renderAtomic = new RenderAtomic();\r\n\r\n    @oav({ component: \"OAVFeng3dPreView\" })\r\n    private preview = \"\";\r\n\r\n    /**\r\n     * shader名称\r\n     */\r\n    @oav({ component: \"OAVMaterialName\" })\r\n    @serialize\r\n    @watch(\"_onShaderChanged\")\r\n    shaderName: ShaderNames;\r\n\r\n    @oav()\r\n    @serialize\r\n    get name()\r\n    {\r\n        return this._name;\r\n    }\r\n    set name(v)\r\n    {\r\n        this._name = v;\r\n    }\r\n    protected _name = \"\";\r\n\r\n    /**\r\n     * Uniform数据\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVObjectView\" })\r\n    @watch(\"_onUniformsChanged\")\r\n    uniforms: UniformsLike;\r\n\r\n    /**\r\n     * 渲染参数\r\n     */\r\n    @serialize\r\n    @oav({ block: \"渲染参数\", component: \"OAVObjectView\" })\r\n    @watch(\"_onRenderParamsChanged\")\r\n    renderParams: RenderParams;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        globalEmitter.on(\"asset.shaderChanged\", this._onShaderChanged, this);\r\n        this.shaderName = \"standard\";\r\n    }\r\n\r\n    beforeRender(renderAtomic: RenderAtomic)\r\n    {\r\n        Object.assign(renderAtomic.uniforms, this.renderAtomic.uniforms);\r\n\r\n        renderAtomic.shader = this.renderAtomic.shader;\r\n        renderAtomic.renderParams = this.renderAtomic.renderParams;\r\n        renderAtomic.shaderMacro.IS_POINTS_MODE = this.renderParams.renderMode == RenderMode.POINTS;\r\n    }\r\n\r\n    /**\r\n     * 是否加载完成\r\n     */\r\n    get isLoaded()\r\n    {\r\n        var uniforms = this.uniforms;\r\n        for (const key in uniforms)\r\n        {\r\n            var texture = uniforms[key];\r\n            if (texture instanceof Texture2D || texture instanceof TextureCube)\r\n            {\r\n                if (!texture.isLoaded) return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 已加载完成或者加载完成时立即调用\r\n     * @param callback 完成回调\r\n     */\r\n    onLoadCompleted(callback: () => void)\r\n    {\r\n        var loadingNum = 0;\r\n        var uniforms = this.uniforms;\r\n        for (const key in uniforms)\r\n        {\r\n            var texture = uniforms[key];\r\n            if (texture instanceof Texture2D || texture instanceof TextureCube)\r\n            {\r\n                if (!texture.isLoaded)\r\n                {\r\n                    loadingNum++;\r\n                    (texture as Texture2D).on(\"loadCompleted\", () =>\r\n                    {\r\n                        loadingNum--;\r\n                        if (loadingNum == 0) callback();\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (loadingNum == 0) callback();\r\n    }\r\n\r\n    private _onShaderChanged()\r\n    {\r\n        var cls = shaderlib.shaderConfig.shaders[this.shaderName].cls;\r\n        if (cls)\r\n        {\r\n            if (this.uniforms == null || this.uniforms.constructor != cls)\r\n            {\r\n                var newuniforms = new cls();\r\n                this.uniforms = newuniforms;\r\n            }\r\n        } else\r\n        {\r\n            this.uniforms = <any>{};\r\n        }\r\n\r\n        var renderParams = shaderlib.shaderConfig.shaders[this.shaderName].renderParams;\r\n        renderParams && serialization.setValue(this.renderParams, renderParams);\r\n\r\n        this.renderAtomic.shader = new Shader(this.shaderName);\r\n    }\r\n\r\n    private _onUniformsChanged()\r\n    {\r\n        this.renderAtomic.uniforms = <any>this.uniforms;\r\n    }\r\n\r\n    private _onRenderParamsChanged()\r\n    {\r\n        this.renderAtomic.renderParams = this.renderParams;\r\n    }\r\n\r\n    /**\r\n     * 设置默认材质\r\n     * \r\n     * 资源名称与材质名称相同，且无法在检查器界面中编辑。\r\n     * \r\n     * @param name 材质名称\r\n     * @param material 材质数据\r\n     */\r\n    static setDefault<K extends keyof DefaultMaterial>(name: K, material: gPartial<Material>)\r\n    {\r\n        var newMaterial = this._defaultMaterials[<any>name] = new Material();\r\n        serialization.setValue(newMaterial, material);\r\n        serialization.setValue(newMaterial, { name: name, hideFlags: HideFlags.NotEditable });\r\n        AssetData.addAssetData(name, newMaterial);\r\n    }\r\n\r\n    /**\r\n     * 获取材质\r\n     * \r\n     * @param name 材质名称\r\n     */\r\n    static getDefault<K extends keyof DefaultMaterial>(name: K)\r\n    {\r\n        return this._defaultMaterials[name];\r\n    }\r\n    private static _defaultMaterials: DefaultMaterial = <any>{};\r\n}\r\n\r\n/**\r\n * 默认材质\r\n */\r\nexport interface DefaultMaterial\r\n{\r\n}\r\n","import { Behaviour } from \"../component/Behaviour\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { Box3 } from \"@feng3d/math\";\r\nimport { Ray3 } from \"@feng3d/math\";\r\nimport { PickingCollisionVO } from \"../pick/Raycaster\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { RayCastable: RayCastable; }\r\n}\r\n\r\n/**\r\n * 可射线捕获\r\n */\r\n@RegisterComponent()\r\nexport class RayCastable extends Behaviour\r\n{\r\n    protected _selfLocalBounds: Box3;\r\n    protected _selfWorldBounds: Box3;\r\n\r\n    /**\r\n     * 自身局部包围盒\r\n     */\r\n    get selfLocalBounds()\r\n    {\r\n        if (!this._selfLocalBounds)\r\n            this._updateBounds();\r\n\r\n        return this._selfLocalBounds;\r\n    }\r\n\r\n    /**\r\n     * 自身世界包围盒\r\n     */\r\n    get selfWorldBounds()\r\n    {\r\n        if (!this._selfWorldBounds)\r\n            this._updateWorldBounds();\r\n\r\n        return this._selfWorldBounds;\r\n    }\r\n\r\n    /**\r\n     * 与世界空间射线相交\r\n     * \r\n     * @param worldRay 世界空间射线\r\n     * \r\n     * @return 相交信息\r\n     */\r\n    worldRayIntersection(worldRay: Ray3): PickingCollisionVO\r\n    {\r\n        throw \"请在子类中实现！\";\r\n    }\r\n\r\n    protected _onScenetransformChanged()\r\n    {\r\n        this._selfWorldBounds = null;\r\n    }\r\n\r\n    /**\r\n     * 更新世界边界\r\n     */\r\n    protected _updateWorldBounds()\r\n    {\r\n        this._selfWorldBounds = this.selfLocalBounds.applyMatrixTo(this.node3d.localToWorldMatrix);\r\n    }\r\n\r\n    /**\r\n     * 处理包围盒变换事件\r\n     */\r\n    protected _onBoundsInvalid()\r\n    {\r\n        this._selfLocalBounds = null;\r\n        this._selfWorldBounds = null;\r\n\r\n        this.emit(\"selfBoundsChanged\", this);\r\n    }\r\n\r\n    protected _updateBounds()\r\n    {\r\n        throw \"请在子类中实现！\";\r\n    }\r\n}\r\n","import { Event } from \"@feng3d/event\";\r\nimport { Box3, Ray3, Vector3 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { Geometry, GeometryLike } from \"../geometry/Geometry\";\r\nimport { LightPicker } from \"../light/pickers/LightPicker\";\r\nimport { Material } from \"../materials/Material\";\r\nimport { PickingCollisionVO } from \"../pick/Raycaster\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { Node3D } from \"./Node3D\";\r\nimport { RayCastable } from \"./RayCastable\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { Renderable: Renderable; }\r\n}\r\n\r\n/**\r\n * 可渲染组件\r\n * \r\n * General functionality for all renderers.\r\n * \r\n * A renderer is what makes an object appear on the screen. Use this class to access the renderer of any object, mesh or Particle System. Renderers can be disabled to make objects invisible (see enabled), and the materials can be accessed and modified through them (see material).\r\n * \r\n * See Also: Renderer components for meshes, particles, lines and trails.\r\n */\r\n@RegisterComponent({ single: true })\r\nexport class Renderable extends RayCastable\r\n{\r\n    readonly renderAtomic = new RenderAtomic();\r\n\r\n    /**\r\n     * 几何体\r\n     */\r\n    @oav({ component: \"OAVPick\", tooltip: \"几何体，提供模型以形状\", componentParam: { accepttype: \"geometry\", datatype: \"geometry\" } })\r\n    @serialize\r\n    @watch(\"_onGeometryChanged\")\r\n    geometry: GeometryLike = Geometry.getDefault(\"Cube\");\r\n\r\n    /**\r\n     * 材质\r\n     */\r\n    @oav({ component: \"OAVPick\", tooltip: \"材质，提供模型以皮肤\", componentParam: { accepttype: \"material\", datatype: \"material\" } })\r\n    @serialize\r\n    get material()\r\n    {\r\n        return this._material || Material.getDefault(\"Default-Material\");\r\n    }\r\n    set material(v)\r\n    {\r\n        this._material = v;\r\n    }\r\n    protected _material: Material;\r\n\r\n    @oav({ tooltip: \"是否投射阴影\" })\r\n    @serialize\r\n    castShadows = true;\r\n\r\n    @oav({ tooltip: \"是否接受阴影\" })\r\n    @serialize\r\n    receiveShadows = true;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this._lightPicker = new LightPicker(this);\r\n    }\r\n\r\n    init()\r\n    {\r\n        super.init();\r\n        this.on(\"scenetransformChanged\", this._onScenetransformChanged, this);\r\n\r\n        this.on(\"getSelfBounds\", this._onGetSelfBounds, this);\r\n    }\r\n\r\n    /**\r\n     * 渲染前执行函数\r\n     * \r\n     * 可用于渲染前收集渲染数据，或者更新显示效果等\r\n     * \r\n     * @param renderAtomic \r\n     * @param scene \r\n     * @param camera \r\n     */\r\n    beforeRender(renderAtomic: RenderAtomic, scene: Scene, camera: Camera)\r\n    {\r\n        //\r\n        this.geometry.beforeRender(renderAtomic);\r\n        this.material.beforeRender(renderAtomic);\r\n        this._lightPicker.beforeRender(renderAtomic);\r\n\r\n        this.entity.components.forEach(element =>\r\n        {\r\n            if (element != this)\r\n                element.beforeRender(renderAtomic, scene, camera);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 与世界空间射线相交\r\n     * \r\n     * @param worldRay 世界空间射线\r\n     * \r\n     * @return 相交信息\r\n     */\r\n    worldRayIntersection(worldRay: Ray3)\r\n    {\r\n        var localRay = this.node3d.rayWorldToLocal(worldRay);\r\n        var pickingCollisionVO = this.localRayIntersection(localRay);\r\n        return pickingCollisionVO;\r\n    }\r\n\r\n    /**\r\n     * 与局部空间射线相交\r\n     * \r\n     * @param ray3D 局部空间射线\r\n     * \r\n     * @return 相交信息\r\n     */\r\n    localRayIntersection(localRay: Ray3)\r\n    {\r\n        var localNormal = new Vector3();\r\n\r\n        //检测射线与边界的碰撞\r\n        var rayEntryDistance = this.selfLocalBounds.rayIntersection(localRay.origin, localRay.direction, localNormal);\r\n        if (rayEntryDistance === Number.MAX_VALUE)\r\n            return null;\r\n\r\n        //保存碰撞数据\r\n        var pickingCollisionVO: PickingCollisionVO = {\r\n            node3d: this.node3d,\r\n            localNormal: localNormal,\r\n            localRay: localRay,\r\n            rayEntryDistance: rayEntryDistance,\r\n            rayOriginIsInsideBounds: rayEntryDistance == 0,\r\n            geometry: this.geometry,\r\n            cullFace: this.material.renderParams.cullFace,\r\n        };\r\n\r\n        return pickingCollisionVO;\r\n    }\r\n\r\n    /**\r\n     * 是否加载完成\r\n     */\r\n    get isLoaded()\r\n    {\r\n        return this.material.isLoaded;\r\n    }\r\n\r\n    /**\r\n     * 已加载完成或者加载完成时立即调用\r\n     * @param callback 完成回调\r\n     */\r\n    onLoadCompleted(callback: () => void)\r\n    {\r\n        if (this.isLoaded) callback();\r\n        this.material.onLoadCompleted(callback);\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    dispose()\r\n    {\r\n        this.geometry = <any>null;\r\n        this.material = <any>null;\r\n        super.dispose();\r\n    }\r\n\r\n    //\r\n    private _lightPicker: LightPicker;\r\n\r\n    private _onGeometryChanged(property: string, oldValue: Geometry, value: Geometry)\r\n    {\r\n        if (oldValue)\r\n        {\r\n            oldValue.off(\"boundsInvalid\", this._onBoundsInvalid, this);\r\n        }\r\n        if (value)\r\n        {\r\n            value.on(\"boundsInvalid\", this._onBoundsInvalid, this);\r\n        }\r\n        this.geometry = this.geometry || Geometry.getDefault(\"Cube\");\r\n        this._onBoundsInvalid();\r\n    }\r\n\r\n    protected _updateBounds()\r\n    {\r\n        this._selfLocalBounds = this.geometry.bounding;\r\n    }\r\n\r\n    protected _onGetSelfBounds(event: Event<{ bounds: Box3[]; }>)\r\n    {\r\n        event.data.bounds.push(this.geometry.bounding);\r\n    }\r\n\r\n}\r\n\r\ndeclare module \"./Node3D\"\r\n{\r\n    interface Node3D\r\n    {\r\n        /**\r\n         * 是否加载完成\r\n         */\r\n        isSelfLoaded: boolean;\r\n        /**\r\n         * 已加载完成或者加载完成时立即调用\r\n         * @param callback 完成回调\r\n         */\r\n        onSelfLoadCompleted(callback: () => void): void;\r\n    }\r\n}\r\n\r\nObject.defineProperty(Node3D.prototype, \"isSelfLoaded\", {\r\n    get: function get(this: Node3D)\r\n    {\r\n        var model = this.getComponent(Renderable);\r\n        if (model) return model.isLoaded\r\n        return true;\r\n    }\r\n});\r\n\r\nNode3D.prototype.onSelfLoadCompleted = function onSelfLoadCompleted(this: Node3D, callback: () => void)\r\n{\r\n    if (this.isSelfLoaded)\r\n    {\r\n        callback();\r\n        return;\r\n    }\r\n    var model = this.getComponent(Renderable);\r\n    if (model)\r\n    {\r\n        model.onLoadCompleted(callback);\r\n    }\r\n    else callback();\r\n}","import { Animation } from \"../../animation/Animation\";\r\nimport { Camera } from \"../../cameras/Camera\";\r\nimport { RegisterComponent } from \"../../component/Component\";\r\nimport { HideFlags } from \"../../core/HideFlags\";\r\nimport { Renderable } from \"../../core/Renderable\";\r\nimport { Matrix4x4 } from \"@feng3d/math\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { Scene } from \"../../scene/Scene\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { SkeletonComponent } from \"./SkeletonComponent\";\r\n\r\ndeclare module \"../../component/Component\"\r\n{\r\n    export interface ComponentMap { SkinnedMeshRenderer: SkinnedMeshRenderer }\r\n}\r\n\r\n@RegisterComponent({ single: true })\r\nexport class SkinnedMeshRenderer extends Renderable\r\n{\r\n    __class__: \"feng3d.SkinnedMeshRenderer\";\r\n\r\n    @serialize\r\n    @oav()\r\n    skinSkeleton: SkinSkeleton;\r\n\r\n    @serialize\r\n    initMatrix: Matrix4x4;\r\n\r\n    /**\r\n     * 创建一个骨骼动画类\r\n     */\r\n    init()\r\n    {\r\n        super.init();\r\n        this.hideFlags = HideFlags.DontTransform;\r\n    }\r\n\r\n    beforeRender(renderAtomic: RenderAtomic, scene: Scene, camera: Camera)\r\n    {\r\n        super.beforeRender(renderAtomic, scene, camera);\r\n\r\n        var frameId: string = null;\r\n        var animation = this.getComponentsInParents(Animation)[0];\r\n        if (animation)\r\n        {\r\n            frameId = animation.clipName + \"&\" + animation.frame;\r\n        }\r\n\r\n        renderAtomic.uniforms.u_modelMatrix = () => this.u_modelMatrix;\r\n        renderAtomic.uniforms.u_ITModelMatrix = () => this.u_ITModelMatrix;\r\n        //\r\n        var skeletonGlobalMatriices = this.cacheU_skeletonGlobalMatriices[frameId];\r\n        if (!skeletonGlobalMatriices)\r\n        {\r\n            skeletonGlobalMatriices = this.u_skeletonGlobalMatriices;\r\n            if (frameId) this.cacheU_skeletonGlobalMatriices[frameId] = skeletonGlobalMatriices;\r\n        }\r\n        renderAtomic.uniforms.u_skeletonGlobalMatriices = skeletonGlobalMatriices;\r\n\r\n        renderAtomic.shaderMacro.HAS_SKELETON_ANIMATION = true;\r\n        renderAtomic.shaderMacro.NUM_SKELETONJOINT = this.skinSkeleton.joints.length;\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    dispose()\r\n    {\r\n        this.cacheSkeletonComponent = null;\r\n        super.dispose();\r\n    }\r\n\r\n    /**\r\n     * 缓存，通过寻找父结点获得\r\n     */\r\n    private cacheSkeletonComponent: SkeletonComponent;\r\n\r\n    private cacheU_skeletonGlobalMatriices: { [id: string]: Matrix4x4[] } = {};\r\n\r\n    private get u_modelMatrix()\r\n    {\r\n        if (this.cacheSkeletonComponent)\r\n            return this.cacheSkeletonComponent.node3d.localToWorldMatrix;\r\n        return this.node3d.localToWorldMatrix\r\n    }\r\n\r\n    private get u_ITModelMatrix()\r\n    {\r\n        if (this.cacheSkeletonComponent)\r\n            return this.cacheSkeletonComponent.node3d.ITlocalToWorldMatrix;\r\n        return this.node3d.ITlocalToWorldMatrix\r\n    }\r\n\r\n    private get u_skeletonGlobalMatriices() \r\n    {\r\n        if (!this.cacheSkeletonComponent)\r\n        {\r\n            var node3d = this.node3d;\r\n            var skeletonComponent: SkeletonComponent = null;\r\n            while (node3d && !skeletonComponent)\r\n            {\r\n                skeletonComponent = node3d.getComponent(SkeletonComponent)\r\n                node3d = node3d.parent;\r\n            }\r\n            this.cacheSkeletonComponent = skeletonComponent;\r\n        }\r\n        var skeletonGlobalMatriices: Matrix4x4[] = [];\r\n        if (this.skinSkeleton && this.cacheSkeletonComponent)\r\n        {\r\n            var joints = this.skinSkeleton.joints;\r\n            var globalMatrices = this.cacheSkeletonComponent.globalMatrices;\r\n            for (var i = joints.length - 1; i >= 0; i--)\r\n            {\r\n                skeletonGlobalMatriices[i] = globalMatrices[joints[i][0]].clone();\r\n                if (this.initMatrix)\r\n                {\r\n                    skeletonGlobalMatriices[i].prepend(this.initMatrix);\r\n                }\r\n            }\r\n        } else\r\n        {\r\n            skeletonGlobalMatriices = defaultSkeletonGlobalMatriices;\r\n        }\r\n        return skeletonGlobalMatriices;\r\n    }\r\n}\r\n\r\nvar defaultSkeletonGlobalMatriices: Matrix4x4[] = (() => { var v = [new Matrix4x4()]; var i = 150; while (i-- > 1) v.push(v[0]); return v; })();\r\n\r\nexport class SkinSkeleton\r\n{\r\n    /**\r\n     * [在整个骨架中的编号，骨骼名称]\r\n     */\r\n    @serialize\r\n    joints: [number, string][] = [];\r\n    /**\r\n     * 当前模型包含骨骼数量\r\n     */\r\n    @serialize\r\n    numJoint = 0;\r\n}\r\n\r\nexport class SkinSkeletonTemp extends SkinSkeleton\r\n{\r\n    /**\r\n     * temp 解析时临时数据\r\n     */\r\n    cache_map: { [oldjointid: number]: number } = {};\r\n\r\n    resetJointIndices(jointIndices: number[], skeleton: SkeletonComponent)\r\n    {\r\n        var len = jointIndices.length;\r\n        for (var i = 0; i < len; i++)\r\n        {\r\n            if (this.cache_map[jointIndices[i]] === undefined)\r\n                this.cache_map[jointIndices[i]] = this.numJoint++;\r\n            jointIndices[i] = this.cache_map[jointIndices[i]];\r\n        }\r\n\r\n        this.joints.length = 0;\r\n        for (var key in this.cache_map)\r\n        {\r\n            if (this.cache_map.hasOwnProperty(key))\r\n            {\r\n                this.joints[this.cache_map[key]] = [parseInt(key), skeleton.joints[key].name];\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Lazy, lazy } from \"@feng3d/polyfill\";\r\n\r\n/**\r\n * 心跳计时器\r\n */\r\nexport class Ticker \r\n{\r\n    /**\r\n     * 帧率\r\n     */\r\n    frameRate = 60\r\n    /**\r\n     * 注册帧函数\r\n     * @param func  执行方法\r\n     * @param thisObject    方法this指针\r\n     * @param priority      执行优先级\r\n     */\r\n    onframe(func: (interval: number) => void, thisObject?: Object, priority = 0)\r\n    {\r\n        this.on(() => 1000 / this.frameRate, func, thisObject, priority);\r\n        return this;\r\n    }\r\n    /**\r\n     * 下一帧执行方法\r\n     * @param func  执行方法\r\n     * @param thisObject    方法this指针\r\n     * @param priority      执行优先级\r\n     */\r\n    nextframe(func: (interval: number) => void, thisObject?: Object, priority = 0)\r\n    {\r\n        this.once(() => 1000 / this.frameRate, func, thisObject, priority);\r\n        return this;\r\n    }\r\n    /**\r\n     * 注销帧函数（只执行一次）\r\n     * @param func  执行方法\r\n     * @param thisObject    方法this指针\r\n     * @param priority      执行优先级\r\n     */\r\n    offframe(func: (interval: number) => void, thisObject?: Object)\r\n    {\r\n        this.off(() => 1000 / this.frameRate, func, thisObject);\r\n        return this;\r\n    }\r\n    /**\r\n     * 注册周期函数\r\n     * @param interval  执行周期，以ms为单位\r\n     * @param func  执行方法\r\n     * @param thisObject    方法this指针\r\n     * @param priority      执行优先级\r\n     */\r\n    on(interval: Lazy<number>, func: (interval: number) => void, thisObject?: Object, priority = 0)\r\n    {\r\n        addTickerFunc({ interval: interval, func: func, thisObject: thisObject, priority: priority, once: false });\r\n        return this;\r\n    }\r\n    /**\r\n     * 注册周期函数（只执行一次）\r\n     * @param interval  执行周期，以ms为单位\r\n     * @param func  执行方法\r\n     * @param thisObject    方法this指针\r\n     * @param priority      执行优先级\r\n     */\r\n    once(interval: Lazy<number>, func: (interval: number) => void, thisObject?: Object, priority = 0)\r\n    {\r\n        addTickerFunc({ interval: interval, func: func, thisObject: thisObject, priority: priority, once: true });\r\n        return this;\r\n    }\r\n    /**\r\n     * 注销周期函数\r\n     * @param interval  执行周期，以ms为单位\r\n     * @param func  执行方法\r\n     * @param thisObject    方法this指针\r\n     */\r\n    off(interval: Lazy<number>, func: (interval: number) => void, thisObject?: Object)\r\n    {\r\n        removeTickerFunc({ interval: interval, func: func, thisObject: thisObject });\r\n        return this;\r\n    }\r\n    /**\r\n     * 重复指定次数 执行函数\r\n     * @param interval  执行周期，以ms为单位\r\n     * @param \trepeatCount     执行次数\r\n     * @param func  执行方法\r\n     * @param thisObject    方法this指针\r\n     * @param priority      执行优先级\r\n     */\r\n    repeat(interval: Lazy<number>, repeatCount: number, func: (interval: number) => void, thisObject?: Object, priority = 0)\r\n    {\r\n        repeatCount = ~~repeatCount;\r\n        if (repeatCount < 1)\r\n            return;\r\n        var timer = new Timer(this, interval, repeatCount, func, thisObject, priority);\r\n        return timer;\r\n    }\r\n}\r\n\r\n/**\r\n * 心跳计时器\r\n */\r\n export const ticker = new Ticker();\r\n\r\nexport class Timer\r\n{\r\n    private ticker: Ticker;\r\n    private interval: Lazy<number>;\r\n    private priority: number;\r\n    private func: (interval: number) => void;\r\n    private thisObject: Object\r\n\r\n    /**\r\n     * 计时器从 0 开始后触发的总次数。\r\n     */\r\n    currentCount = 0\r\n    /**\r\n     * 计时器事件间的延迟（以毫秒为单位）。\r\n     */\r\n    delay: number\r\n    /**\r\n     * 设置的计时器运行总次数。\r\n     */\r\n    repeatCount: number\r\n\r\n    constructor(ticker: Ticker, interval: Lazy<number>, repeatCount: number, func: (interval: number) => void, thisObject?: Object, priority = 0)\r\n    {\r\n        this.ticker = ticker;\r\n        this.interval = interval;\r\n        this.func = func;\r\n        this.thisObject = thisObject;\r\n        this.priority = priority;\r\n    }\r\n    /**\r\n     * 如果计时器尚未运行，则启动计时器。\r\n     */\r\n    start()\r\n    {\r\n        this.ticker.on(this.interval, this.runfunc, this, this.priority);\r\n        return this;\r\n    }\r\n    /**\r\n     * 停止计时器。\r\n     */\r\n    stop()\r\n    {\r\n        this.ticker.off(this.interval, this.runfunc, this);\r\n        return this;\r\n    }\r\n    /**\r\n     * 如果计时器正在运行，则停止计时器，并将 currentCount 属性设回为 0，这类似于秒表的重置按钮。\r\n     */\r\n    reset()\r\n    {\r\n        this.stop();\r\n        this.currentCount = 0;\r\n        return this;\r\n    }\r\n\r\n    private runfunc()\r\n    {\r\n        this.currentCount++;\r\n        this.repeatCount--;\r\n        this.func.call(this.thisObject, lazy.getvalue(this.interval));\r\n        if (this.repeatCount < 1)\r\n            this.stop();\r\n    }\r\n}\r\n\r\ninterface TickerFuncItem\r\n{\r\n    interval: Lazy<number>,\r\n    func: (interval: number) => void,\r\n    thisObject?: Object,\r\n    priority?: number,\r\n    once?: boolean\r\n    //\r\n    runtime?: number;\r\n}\r\nvar tickerFuncs: TickerFuncItem[] = [];\r\n\r\nfunction addTickerFunc(item: TickerFuncItem)\r\n{\r\n    if (running)\r\n    {\r\n        affers.push([addTickerFunc, [item]]);\r\n        return;\r\n    }\r\n    // removeTickerFunc(item);\r\n    if (item.priority == undefined)\r\n        item.priority = 0;\r\n    item.runtime = Date.now() + lazy.getvalue(item.interval);\r\n    tickerFuncs.push(item);\r\n}\r\n\r\nfunction removeTickerFunc(item: TickerFuncItem)\r\n{\r\n    if (running)\r\n    {\r\n        affers.push([removeTickerFunc, [item]]);\r\n        return;\r\n    }\r\n    for (let i = tickerFuncs.length - 1; i >= 0; i--)\r\n    {\r\n        var element = tickerFuncs[i];\r\n        if (lazy.getvalue(element.interval) == lazy.getvalue(item.interval)\r\n            && element.func == item.func\r\n            && element.thisObject == item.thisObject\r\n        )\r\n        {\r\n            tickerFuncs.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n\r\nvar running = false;\r\nvar affers: [Function, any[]][] = [];\r\n\r\nfunction runTickerFuncs()\r\n{\r\n    running = true;\r\n    //倒序，优先级高的排在后面\r\n    tickerFuncs.sort((a, b) =>\r\n    {\r\n        return <number>a.priority - <number>b.priority;\r\n    });\r\n    var currenttime = Date.now();\r\n    var needTickerFuncItems: TickerFuncItem[] = [];\r\n    for (let i = tickerFuncs.length - 1; i >= 0; i--)\r\n    {\r\n        var element = tickerFuncs[i];\r\n        if (<number>element.runtime < currenttime)\r\n        {\r\n            needTickerFuncItems.push(element);\r\n            if (element.once)\r\n            {\r\n                tickerFuncs.splice(i, 1);\r\n                continue;\r\n            }\r\n            element.runtime = nextRuntime(<number>element.runtime, lazy.getvalue(element.interval));\r\n        }\r\n    }\r\n    needTickerFuncItems.reverse();\r\n    // 相同的函数只执行一个\r\n    Array.unique(needTickerFuncItems, (a, b) => { return (a.func == b.func && a.thisObject == b.thisObject) });\r\n    needTickerFuncItems.forEach(v =>\r\n    {\r\n        // try\r\n        // {\r\n        v.func.call(v.thisObject, lazy.getvalue(v.interval));\r\n        // } catch (error)\r\n        // {\r\n        //     console.warn(`${v.func} 方法执行错误，从 ticker 中移除`, error)\r\n        //     var index = tickerFuncs.indexOf(v);\r\n        //     if (index != -1) tickerFuncs.splice(index, 1);\r\n        // }\r\n    });\r\n    running = false;\r\n\r\n    for (let i = 0; i < affers.length; i++)\r\n    {\r\n        const affer = affers[i];\r\n        affer[0].apply(null, affer[1]);\r\n    }\r\n    affers.length = 0;\r\n\r\n    localrequestAnimationFrame(runTickerFuncs);\r\n\r\n    function nextRuntime(runtime: number, interval: number)\r\n    {\r\n        return runtime + Math.ceil((currenttime - runtime) / interval) * interval;\r\n    }\r\n}\r\n\r\nvar localrequestAnimationFrame: (callback: FrameRequestCallback) => number;\r\nif (typeof requestAnimationFrame == \"undefined\")\r\n{\r\n    var _global: Window;\r\n    var global: any;\r\n    if (typeof window != \"undefined\")\r\n    {\r\n        _global = window;\r\n        localrequestAnimationFrame =\r\n            window[\"requestAnimationFrame\"] ||\r\n            window[\"webkitRequestAnimationFrame\"] ||\r\n            window[\"mozRequestAnimationFrame\"] ||\r\n            window[\"oRequestAnimationFrame\"] ||\r\n            window[\"msRequestAnimationFrame\"];\r\n    } else if (typeof global != \"undefined\")\r\n    {\r\n        _global = <any>global;\r\n    }\r\n    if (localrequestAnimationFrame == undefined)\r\n    {\r\n        localrequestAnimationFrame = function (callback)\r\n        {\r\n            return _global.setTimeout(callback, 1000 / ticker.frameRate);\r\n        };\r\n    }\r\n} else\r\n{\r\n    localrequestAnimationFrame = requestAnimationFrame;\r\n}\r\n\r\nrunTickerFuncs();\r\n","import { event } from \"@feng3d/event\";\r\nimport { pathUtils } from \"@feng3d/filesystem\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { ticker } from \"../utils/Ticker\";\r\nimport { AssetMeta } from \"./AssetMeta\";\r\nimport { AssetType } from \"./AssetType\";\r\nimport type { FolderAsset } from \"./FolderAsset\";\r\nimport type { ReadWriteRS } from \"./rs/ReadWriteRS\";\r\n\r\nexport function getAssetTypeClass<K extends keyof AssetTypeClassMap>(type: K)\r\n{\r\n    return assetTypeClassMap[type];\r\n}\r\n\r\nexport function setAssetTypeClass<K extends keyof AssetTypeClassMap>(type: K, cls: AssetTypeClassMap[K])\r\n{\r\n    assetTypeClassMap[type] = cls;\r\n}\r\n\r\nexport interface AssetTypeClassMap\r\n{\r\n}\r\nexport const assetTypeClassMap: AssetTypeClassMap = <any>{};\r\n\r\n/**\r\n * feng3d资源\r\n */\r\nexport abstract class FileAsset\r\n{\r\n    /**\r\n     * 资源路径\r\n     */\r\n    @serialize\r\n    assetPath: string;\r\n\r\n    /**\r\n     * 资源编号\r\n     */\r\n    @serialize\r\n    assetId: string;\r\n\r\n    /**\r\n     * 资源元标签，该对象也用来判断资源是否被加载，值为null表示未加载，否则已加载。\r\n     * \r\n     * 并且该对象还会用于存储主文件无法存储的数据，比如 TextureAsset 中存储了 Texture2D 信息\r\n     */\r\n    meta: AssetMeta;\r\n\r\n    /**\r\n     * 资源系统\r\n     * \r\n     * 加载或者创建该资源的资源系统\r\n     */\r\n    rs: ReadWriteRS;\r\n\r\n    /**\r\n     * 资源类型，由具体对象类型决定\r\n     */\r\n    assetType: AssetType;\r\n\r\n    /**\r\n     * 是否已加载\r\n     */\r\n    isLoaded = false;\r\n\r\n    /**\r\n     * 是否正在加载中\r\n     */\r\n    isLoading = false\r\n\r\n    /**\r\n     * 文件后缀\r\n     */\r\n    get extenson()\r\n    {\r\n        console.assert(!!this.assetPath);\r\n        var ext = pathUtils.extname(this.assetPath);\r\n        return ext;\r\n    }\r\n\r\n    /**\r\n     * 父资源\r\n     */\r\n    get parentAsset()\r\n    {\r\n        var dir = pathUtils.dirname(this.assetPath);\r\n        var parent = this.rs.getAssetByPath(dir) as FolderAsset;\r\n        return parent;\r\n    }\r\n\r\n    /**\r\n     * 文件名称\r\n     * \r\n     * 不包含后缀\r\n     */\r\n    get fileName()\r\n    {\r\n        console.assert(!!this.assetPath);\r\n        var fn = pathUtils.getName(this.assetPath);\r\n        return fn;\r\n    }\r\n\r\n    /**\r\n     * 资源对象\r\n     */\r\n    data: any;\r\n\r\n    /**\r\n     * 初始化资源\r\n     */\r\n    initAsset()\r\n    {\r\n    }\r\n\r\n    /**\r\n     * 获取资源数据\r\n     * \r\n     * @param callback 完成回调，当资源已加载时会立即调用回调，否则在资源加载完成后调用。\r\n     */\r\n    getAssetData(callback?: (result: any) => void)\r\n    {\r\n        if (!this.isLoaded)\r\n        {\r\n            if (callback)\r\n            {\r\n                this.read(err =>\r\n                {\r\n                    console.assert(!err);\r\n                    this.getAssetData(callback);\r\n                });\r\n            }\r\n            return null;\r\n        }\r\n        var assetData = this._getAssetData();\r\n        callback && callback(assetData);\r\n        return assetData;\r\n    }\r\n\r\n    /**\r\n     * 资源已加载时获取资源数据，内部使用\r\n     */\r\n    protected _getAssetData()\r\n    {\r\n        return this.data;\r\n    }\r\n\r\n    /**\r\n     * 读取资源\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    read(callback: (err?: Error) => void)\r\n    {\r\n        if (this.isLoaded)\r\n        {\r\n            callback();\r\n            return;\r\n        }\r\n        var eventtype = \"loaded\";\r\n        event.once(this, eventtype, () =>\r\n        {\r\n            this.isLoaded = true;\r\n            this.isLoading = false;\r\n            callback();\r\n        });\r\n        if (this.isLoading) return;\r\n        this.isLoading = true;\r\n        this.readMeta((err) =>\r\n        {\r\n            if (err)\r\n            {\r\n                event.emit(this, eventtype);\r\n                return;\r\n            }\r\n            this.readFile((err) =>\r\n            {\r\n                event.emit(this, eventtype);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 写入资源\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    write(callback?: (err: Error) => void)\r\n    {\r\n        this.meta.mtimeMs = Date.now();\r\n        this.writeMeta((err) =>\r\n        {\r\n            if (err)\r\n            {\r\n                callback && callback(err);\r\n                return;\r\n            }\r\n            this.saveFile(err =>\r\n            {\r\n                callback && callback(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 删除资源\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    delete(callback?: (err?: Error) => void)\r\n    {\r\n        // 删除 meta 文件\r\n        this.deleteMeta((err) =>\r\n        {\r\n            if (err)\r\n            {\r\n                callback && callback(err);\r\n                return;\r\n            }\r\n            this.deleteFile((err) =>\r\n            {\r\n                // 删除映射\r\n                this.rs.deleteAssetById(this.assetId);\r\n                callback && callback();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 读取资源预览图标\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    readPreview(callback: (err: Error, image: HTMLImageElement) => void)\r\n    {\r\n        if (this._preview)\r\n        {\r\n            callback(null, this._preview);\r\n            return;\r\n        }\r\n        this.rs.fs.readImage(this.previewPath, (err, image) =>\r\n        {\r\n            this._preview = image;\r\n            callback(err, image);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 读取资源预览图标\r\n     * \r\n     * @param image 预览图\r\n     * @param callback 完成回调\r\n     */\r\n    writePreview(image: HTMLImageElement, callback?: (err: Error) => void)\r\n    {\r\n        if (this._preview == image)\r\n        {\r\n            callback && callback(null);\r\n            return;\r\n        }\r\n        this._preview = image;\r\n        this.rs.fs.writeImage(this.previewPath, image, callback);\r\n    }\r\n\r\n    /**\r\n     * 删除资源预览图标\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    deletePreview(callback?: (err: Error) => void)\r\n    {\r\n        this.rs.fs.deleteFile(this.previewPath, callback);\r\n    }\r\n\r\n    /**\r\n     * 读取文件\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    abstract readFile(callback?: (err: Error) => void): void;\r\n\r\n    /**\r\n     * 保存文件\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    abstract saveFile(callback?: (err: Error) => void): void;\r\n\r\n    /**\r\n     * 删除文件\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    protected deleteFile(callback?: (err: Error) => void)\r\n    {\r\n        this.rs.fs.deleteFile(this.assetPath, callback);\r\n\r\n        // 延迟一帧判断该资源是否被删除，排除移动文件时出现的临时删除情况\r\n        ticker.once(1000, () =>\r\n        {\r\n            if (this.rs.getAssetById(this.assetId) == null)\r\n            {\r\n                this.deletePreview();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 元标签路径\r\n     */\r\n    protected get metaPath()\r\n    {\r\n        return this.assetPath + \".meta\";\r\n    }\r\n\r\n    /**\r\n     * 读取元标签\r\n     * \r\n     * @param callback 完成回调 \r\n     */\r\n    protected readMeta(callback?: (err?: Error) => void)\r\n    {\r\n        this.rs.fs.readObject(this.metaPath, (err, meta: AssetMeta) =>\r\n        {\r\n            this.meta = meta;\r\n            callback && callback(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 写元标签\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    protected writeMeta(callback?: (err: Error) => void)\r\n    {\r\n        this.rs.fs.writeObject(this.metaPath, this.meta, callback);\r\n    }\r\n\r\n    /**\r\n     * 删除元标签\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    protected deleteMeta(callback?: (err: Error) => void)\r\n    {\r\n        this.rs.fs.deleteFile(this.metaPath, callback);\r\n    }\r\n\r\n    /**\r\n     * 预览图\r\n     */\r\n    private _preview: HTMLImageElement;\r\n\r\n    /**\r\n     * 预览图路径\r\n     */\r\n    private get previewPath()\r\n    {\r\n        return \"previews/\" + this.assetId + \".png\";\r\n    }\r\n}\r\n\r\n","import { ov } from \"@feng3d/objectview\";\r\nimport { AssetType } from \"./AssetType\";\r\nimport { FileAsset, setAssetTypeClass } from \"./FileAsset\";\r\n\r\n/**\r\n * 文件夹资源\r\n */\r\n@ov({ component: \"OVFolderAsset\" })\r\nexport class FolderAsset extends FileAsset\r\n{\r\n    static extenson = \"\";\r\n\r\n    assetType = AssetType.folder;\r\n\r\n    /**\r\n     * 子资源列表\r\n     */\r\n    get childrenAssets()\r\n    {\r\n        var children = this.rs.getChildrenAssetByPath(this.assetPath);\r\n        return children;\r\n    }\r\n\r\n    initAsset()\r\n    {\r\n    }\r\n\r\n    /**\r\n     * 删除资源\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    delete(callback?: (err: Error) => void)\r\n    {\r\n        super.delete(callback);\r\n    }\r\n\r\n    /**\r\n     * 保存文件\r\n     * @param callback 完成回调\r\n     */\r\n    saveFile(callback?: (err: Error) => void)\r\n    {\r\n        this.rs.fs.mkdir(this.assetPath, callback);\r\n    }\r\n\r\n    /**\r\n     * 读取文件\r\n     * @param callback 完成回调\r\n     */\r\n    readFile(callback?: (err: Error) => void)\r\n    {\r\n        callback && callback(null);\r\n    }\r\n}\r\ndeclare module \"./FileAsset\"\r\n{\r\n    export interface AssetTypeClassMap\r\n    {\r\n        \"folder\": new () => FolderAsset;\r\n    }\r\n}\r\nsetAssetTypeClass(\"folder\", FolderAsset);\r\n","\r\n/**\r\n * 路径\r\n */\r\nexport interface Path\r\n{\r\n    /**\r\n     * 规范化字符串路径，减少'.'和'.'的部分。当发现多个斜杠时，它们被单个斜杠替换;当路径包含尾部斜杠时，它将被保留。在Windows上使用反斜杠。\r\n     *\r\n     * @param p 要规范化的字符串路径。\r\n     */\r\n    normalize(p: string): string;\r\n    /**\r\n     * 将所有参数连接在一起，并规范化生成的路径。参数必须是字符串。在v0.8中，非字符串参数被悄悄地忽略。在v0.10及以上版本中，会抛出异常。\r\n     *\r\n     * @param paths 用于连接的路径列表\r\n     */\r\n    join(...paths: string[]): string;\r\n    /**\r\n     * 最右边的参数被认为是{to}。其他参数被认为是{from}的数组。\r\n     *\r\n     * 从最左边的{from}参数开始，将{to}解析为一个绝对路径。\r\n     *\r\n     * 如果{to}还不是绝对的，则{from}参数将按从右到左的顺序预先设置，直到找到绝对路径为止。如果在使用所有{from}路径之后仍然没有找到绝对路径，则还将使用当前工作目录。得到的路径是规范化的，除非路径被解析到根目录，否则尾部斜杠将被删除。\r\n     *\r\n     * @param pathSegments 要连接的字符串路径。非字符串参数将被忽略。\r\n     */\r\n    resolve(...pathSegments: string[]): string;\r\n    /**\r\n     * 确定{path}是否是一个绝对路径。无论工作目录如何，绝对路径总是解析到相同的位置。\r\n     *\r\n     * @param path 用于测试的路径。\r\n     */\r\n    isAbsolute(path: string): boolean;\r\n    /**\r\n     * 解决从{from}到{to}的相对路径。有时我们有两条绝对路径，我们需要推导出一条到另一条的相对路径。这实际上是path.resolve的逆变换。\r\n     * \r\n     * @param from 起始路径 \r\n     * @param to 目标路径\r\n     */\r\n    relative(from: string, to: string): string;\r\n    /**\r\n     * 返回路径的目录名。类似于Unix的dirname命令。\r\n     *\r\n     * @param p 求值的路径。\r\n     */\r\n    dirname(p: string): string;\r\n    /**\r\n     * 返回路径的最后一部分。类似于Unix basename命令。通常用于从完全限定的路径中提取文件名。\r\n     *\r\n     * @param p 求值的路径。\r\n     * @param ext 可选地，从结果中删除的扩展。\r\n     */\r\n    basename(p: string, ext?: string): string;\r\n    /**\r\n     * 返回路径的扩展名，在路径的最后一部分从最后一个'.'到字符串末尾。如果在路径的最后部分没有'.'或者最后一个字符时'.'则返回一个空字符串。\r\n     *\r\n     * @param p 求值的路径。\r\n     */\r\n    extname(p: string): string;\r\n    /**\r\n     * 特定平台的文件分隔符。'\\\\'或'/'。\r\n     */\r\n    sep: '\\\\' | '/';\r\n    /**\r\n     * 特定平台的文件分隔符。 ';' 或者 ':'.\r\n     */\r\n    delimiter: ';' | ':';\r\n    /**\r\n     * 从路径字符串返回一个对象 —— 与format()相反。\r\n     *\r\n     * @param pathString 路径字符串。\r\n     */\r\n    parse(pathString: string): ParsedPath;\r\n    /**\r\n     * 从对象返回路径字符串——与parse()相反。\r\n     *\r\n     * @param pathObject 路径对象。\r\n     */\r\n    format(pathObject: FormatInputPathObject): string;\r\n\r\n    win32: Path;\r\n    posix: Path;\r\n}\r\n\r\n/**\r\n * 由path.parse()生成或由path.format()使用的已解析路径对象。\r\n */\r\nexport interface ParsedPath\r\n{\r\n    /**\r\n     * 路径的根，如'/'或'c:\\'\r\n     */\r\n    root: string;\r\n    /**\r\n     * 完整的目录路径，如'/home/user/dir'或'c:\\path\\dir'\r\n     */\r\n    dir: string;\r\n    /**\r\n     * 包含扩展名(如有)的文件名，如'index.html'\r\n     */\r\n    base: string;\r\n    /**\r\n     * 文件扩展名(如果有)，如'.html'\r\n     */\r\n    ext: string;\r\n    /**\r\n     * 没有扩展名(如果有)的文件名，如'index'\r\n     */\r\n    name: string;\r\n}\r\n\r\nexport interface FormatInputPathObject\r\n{\r\n    /**\r\n     * 路径的根，如'/'或'c:\\'\r\n     */\r\n    root?: string;\r\n    /**\r\n     * 完整的目录路径，如'/home/user/dir'或'c:\\path\\dir'\r\n     */\r\n    dir?: string;\r\n    /**\r\n     * 包含扩展名(如有)的文件名，如'index.html'\r\n     */\r\n    base?: string;\r\n    /**\r\n     * 文件扩展名(如果有)，如'.html'\r\n     */\r\n    ext?: string;\r\n    /**\r\n     * 没有扩展名(如果有)的文件名，如'index'\r\n     */\r\n    name?: string;\r\n}\r\n\r\n/**\r\n * . \r\n */\r\nconst CHAR_DOT = 46;\r\n/**\r\n * : \r\n */\r\nconst CHAR_COLON = 58;\r\n/**\r\n * ? \r\n */\r\nconst CHAR_QUESTION_MARK = 63;\r\n/**\r\n * A\r\n */\r\nconst CHAR_UPPERCASE_A = 65;\r\n/**\r\n * Z\r\n */\r\nconst CHAR_UPPERCASE_Z = 90;\r\n/**\r\n * a\r\n */\r\nconst CHAR_LOWERCASE_A = 97;\r\n/**\r\n * z\r\n */\r\nconst CHAR_LOWERCASE_Z = 122;\r\n/**\r\n * / \r\n */\r\nconst CHAR_FORWARD_SLASH = 47;\r\n/**\r\n * \\\r\n */\r\nconst CHAR_BACKWARD_SLASH = 92;\r\n\r\n/**\r\n * 未实现其功能\r\n */\r\nconst process = {\r\n    platform: 'win32',\r\n    env: <any>{},\r\n    cwd: function () { return \"\"; },\r\n};\r\n\r\nclass ERR_INVALID_ARG_TYPE extends TypeError\r\n{\r\n    constructor(name: string, expected: string, actual: any)\r\n    {\r\n        assert(typeof name === 'string', \"'name' must be a string\");\r\n\r\n        // determiner: 'must be' or 'must not be'\r\n        let determiner;\r\n        if (typeof expected === 'string' && expected.startsWith('not '))\r\n        {\r\n            determiner = 'must not be';\r\n            expected = expected.replace(/^not /, '');\r\n        } else\r\n        {\r\n            determiner = 'must be';\r\n        }\r\n\r\n        let msg;\r\n        if (name.endsWith(' argument'))\r\n        {\r\n            // For cases like 'first argument'\r\n            msg = `The ${name} ${determiner} ${oneOf(expected, 'type')}`;\r\n        } else\r\n        {\r\n            const type = name.includes('.') ? 'property' : 'argument';\r\n            msg = `The \"${name}\" ${type} ${determiner} ${oneOf(expected, 'type')}`;\r\n        }\r\n\r\n        // TODO(BridgeAR): Improve the output by showing `null` and similar.\r\n        msg += `. Received type ${typeof actual}`;\r\n\r\n        super(msg)\r\n    }\r\n}\r\n\r\nfunction oneOf(expected: string | string[], thing: string)\r\n{\r\n    assert(typeof thing === 'string', '`thing` has to be of type string');\r\n    if (Array.isArray(expected))\r\n    {\r\n        const len = expected.length;\r\n        assert(len > 0, 'At least one expected value needs to be specified');\r\n        expected = expected.map((i) => String(i));\r\n        if (len > 2)\r\n        {\r\n            return `one of ${thing} ${expected.slice(0, len - 1).join(', ')}, or ` +\r\n                expected[len - 1];\r\n        } else if (len === 2)\r\n        {\r\n            return `one of ${thing} ${expected[0]} or ${expected[1]}`;\r\n        } else\r\n        {\r\n            return `of ${thing} ${expected[0]}`;\r\n        }\r\n    } else\r\n    {\r\n        return `of ${thing} ${String(expected)}`;\r\n    }\r\n}\r\n\r\nfunction assert(b: boolean, msg: string)\r\n{\r\n    if (!b) throw msg;\r\n}\r\n\r\nfunction validateString(value: string, name: string)\r\n{\r\n    if (typeof value !== 'string')\r\n        throw new ERR_INVALID_ARG_TYPE(name, 'string', value);\r\n}\r\n\r\nfunction isPathSeparator(code: number)\r\n{\r\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\r\n}\r\n\r\nfunction isPosixPathSeparator(code: number)\r\n{\r\n    return code === CHAR_FORWARD_SLASH;\r\n}\r\n\r\nfunction isWindowsDeviceRoot(code: number)\r\n{\r\n    return code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\r\n        code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\r\n}\r\n\r\n// Resolves . and .. elements in a path with directory names\r\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code: number) => boolean)\r\n{\r\n    var res = '';\r\n    var lastSegmentLength = 0;\r\n    var lastSlash = -1;\r\n    var dots = 0;\r\n    var code = -1;\r\n    for (var i = 0; i <= path.length; ++i)\r\n    {\r\n        if (i < path.length)\r\n            code = path.charCodeAt(i);\r\n        else if (isPathSeparator(code))\r\n            break;\r\n        else\r\n            code = CHAR_FORWARD_SLASH;\r\n\r\n        if (isPathSeparator(code))\r\n        {\r\n            if (lastSlash === i - 1 || dots === 1)\r\n            {\r\n                // NOOP\r\n            } else if (lastSlash !== i - 1 && dots === 2)\r\n            {\r\n                if (res.length < 2 || lastSegmentLength !== 2 ||\r\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\r\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT)\r\n                {\r\n                    if (res.length > 2)\r\n                    {\r\n                        const lastSlashIndex = res.lastIndexOf(separator);\r\n                        if (lastSlashIndex === -1)\r\n                        {\r\n                            res = '';\r\n                            lastSegmentLength = 0;\r\n                        } else\r\n                        {\r\n                            res = res.slice(0, lastSlashIndex);\r\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\r\n                        }\r\n                        lastSlash = i;\r\n                        dots = 0;\r\n                        continue;\r\n                    } else if (res.length === 2 || res.length === 1)\r\n                    {\r\n                        res = '';\r\n                        lastSegmentLength = 0;\r\n                        lastSlash = i;\r\n                        dots = 0;\r\n                        continue;\r\n                    }\r\n                }\r\n                if (allowAboveRoot)\r\n                {\r\n                    if (res.length > 0)\r\n                        res += `${separator}..`;\r\n                    else\r\n                        res = '..';\r\n                    lastSegmentLength = 2;\r\n                }\r\n            } else\r\n            {\r\n                if (res.length > 0)\r\n                    res += separator + path.slice(lastSlash + 1, i);\r\n                else\r\n                    res = path.slice(lastSlash + 1, i);\r\n                lastSegmentLength = i - lastSlash - 1;\r\n            }\r\n            lastSlash = i;\r\n            dots = 0;\r\n        } else if (code === CHAR_DOT && dots !== -1)\r\n        {\r\n            ++dots;\r\n        } else\r\n        {\r\n            dots = -1;\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction _format(sep: string, pathObject: { dir: string, root: string, base: string, name: string, ext: string })\r\n{\r\n    const dir = pathObject.dir || pathObject.root;\r\n    const base = pathObject.base ||\r\n        ((pathObject.name || '') + (pathObject.ext || ''));\r\n    if (!dir)\r\n    {\r\n        return base;\r\n    }\r\n    if (dir === pathObject.root)\r\n    {\r\n        return dir + base;\r\n    }\r\n    return dir + sep + base;\r\n}\r\n\r\nclass Win32Path implements Path\r\n{\r\n    // path.resolve([from ...], to)\r\n    resolve(...pathSegments: string[]): string\r\n    {\r\n        var resolvedDevice = '';\r\n        var resolvedTail = '';\r\n        var resolvedAbsolute = false;\r\n\r\n        for (var i = arguments.length - 1; i >= -1; i--)\r\n        {\r\n            var path: string;\r\n            if (i >= 0)\r\n            {\r\n                path = arguments[i];\r\n            } else if (!resolvedDevice)\r\n            {\r\n                path = process.cwd();\r\n            } else\r\n            {\r\n                // Windows has the concept of drive-specific current working\r\n                // directories. If we've resolved a drive letter but not yet an\r\n                // absolute path, get cwd for that drive, or the process cwd if\r\n                // the drive cwd is not available. We're sure the device is not\r\n                // a UNC path at this points, because UNC paths are always absolute.\r\n                path = process.env['=' + resolvedDevice] || process.cwd();\r\n\r\n                // Verify that a cwd was found and that it actually points\r\n                // to our drive. If not, default to the drive's root.\r\n                if (path === undefined ||\r\n                    path.slice(0, 3).toLowerCase() !==\r\n                    resolvedDevice.toLowerCase() + '\\\\')\r\n                {\r\n                    path = resolvedDevice + '\\\\';\r\n                }\r\n            }\r\n\r\n            validateString(path, 'path');\r\n\r\n            // Skip empty entries\r\n            if (path.length === 0)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var len = path.length;\r\n            var rootEnd = 0;\r\n            var device = '';\r\n            var isAbsolute = false;\r\n            const code = path.charCodeAt(0);\r\n\r\n            // Try to match a root\r\n            if (len > 1)\r\n            {\r\n                if (isPathSeparator(code))\r\n                {\r\n                    // Possible UNC root\r\n\r\n                    // If we started with a separator, we know we at least have an\r\n                    // absolute path of some kind (UNC or otherwise)\r\n                    isAbsolute = true;\r\n\r\n                    if (isPathSeparator(path.charCodeAt(1)))\r\n                    {\r\n                        // Matched double path separator at beginning\r\n                        var j = 2;\r\n                        var last = j;\r\n                        // Match 1 or more non-path separators\r\n                        for (; j < len; ++j)\r\n                        {\r\n                            if (isPathSeparator(path.charCodeAt(j)))\r\n                                break;\r\n                        }\r\n                        if (j < len && j !== last)\r\n                        {\r\n                            const firstPart = path.slice(last, j);\r\n                            // Matched!\r\n                            last = j;\r\n                            // Match 1 or more path separators\r\n                            for (; j < len; ++j)\r\n                            {\r\n                                if (!isPathSeparator(path.charCodeAt(j)))\r\n                                    break;\r\n                            }\r\n                            if (j < len && j !== last)\r\n                            {\r\n                                // Matched!\r\n                                last = j;\r\n                                // Match 1 or more non-path separators\r\n                                for (; j < len; ++j)\r\n                                {\r\n                                    if (isPathSeparator(path.charCodeAt(j)))\r\n                                        break;\r\n                                }\r\n                                if (j === len)\r\n                                {\r\n                                    // We matched a UNC root only\r\n\r\n                                    device = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last);\r\n                                    rootEnd = j;\r\n                                } else if (j !== last)\r\n                                {\r\n                                    // We matched a UNC root with leftovers\r\n\r\n                                    device = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\r\n                                    rootEnd = j;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else\r\n                    {\r\n                        rootEnd = 1;\r\n                    }\r\n                } else if (isWindowsDeviceRoot(code))\r\n                {\r\n                    // Possible device root\r\n\r\n                    if (path.charCodeAt(1) === CHAR_COLON)\r\n                    {\r\n                        device = path.slice(0, 2);\r\n                        rootEnd = 2;\r\n                        if (len > 2)\r\n                        {\r\n                            if (isPathSeparator(path.charCodeAt(2)))\r\n                            {\r\n                                // Treat separator following drive name as an absolute path\r\n                                // indicator\r\n                                isAbsolute = true;\r\n                                rootEnd = 3;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (isPathSeparator(code))\r\n            {\r\n                // `path` contains just a path separator\r\n                rootEnd = 1;\r\n                isAbsolute = true;\r\n            }\r\n\r\n            if (device.length > 0 &&\r\n                resolvedDevice.length > 0 &&\r\n                device.toLowerCase() !== resolvedDevice.toLowerCase())\r\n            {\r\n                // This path points to another device so it is not applicable\r\n                continue;\r\n            }\r\n\r\n            if (resolvedDevice.length === 0 && device.length > 0)\r\n            {\r\n                resolvedDevice = device;\r\n            }\r\n            if (!resolvedAbsolute)\r\n            {\r\n                resolvedTail = path.slice(rootEnd) + '\\\\' + resolvedTail;\r\n                resolvedAbsolute = isAbsolute;\r\n            }\r\n\r\n            if (resolvedDevice.length > 0 && resolvedAbsolute)\r\n            {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // At this point the path should be resolved to a full absolute path,\r\n        // but handle relative paths to be safe (might happen when process.cwd()\r\n        // fails)\r\n\r\n        // Normalize the tail path\r\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\r\n            isPathSeparator);\r\n\r\n        return (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\r\n            '.';\r\n    }\r\n\r\n    normalize(path: string)\r\n    {\r\n        validateString(path, 'path');\r\n        const len = path.length;\r\n        if (len === 0)\r\n            return '.';\r\n        var rootEnd = 0;\r\n        var device;\r\n        var isAbsolute = false;\r\n        const code = path.charCodeAt(0);\r\n\r\n        // Try to match a root\r\n        if (len > 1)\r\n        {\r\n            if (isPathSeparator(code))\r\n            {\r\n                // Possible UNC root\r\n\r\n                // If we started with a separator, we know we at least have an absolute\r\n                // path of some kind (UNC or otherwise)\r\n                isAbsolute = true;\r\n\r\n                if (isPathSeparator(path.charCodeAt(1)))\r\n                {\r\n                    // Matched double path separator at beginning\r\n                    var j = 2;\r\n                    var last = j;\r\n                    // Match 1 or more non-path separators\r\n                    for (; j < len; ++j)\r\n                    {\r\n                        if (isPathSeparator(path.charCodeAt(j)))\r\n                            break;\r\n                    }\r\n                    if (j < len && j !== last)\r\n                    {\r\n                        const firstPart = path.slice(last, j);\r\n                        // Matched!\r\n                        last = j;\r\n                        // Match 1 or more path separators\r\n                        for (; j < len; ++j)\r\n                        {\r\n                            if (!isPathSeparator(path.charCodeAt(j)))\r\n                                break;\r\n                        }\r\n                        if (j < len && j !== last)\r\n                        {\r\n                            // Matched!\r\n                            last = j;\r\n                            // Match 1 or more non-path separators\r\n                            for (; j < len; ++j)\r\n                            {\r\n                                if (isPathSeparator(path.charCodeAt(j)))\r\n                                    break;\r\n                            }\r\n                            if (j === len)\r\n                            {\r\n                                // We matched a UNC root only\r\n                                // Return the normalized version of the UNC root since there\r\n                                // is nothing left to process\r\n\r\n                                return '\\\\\\\\' + firstPart + '\\\\' + path.slice(last) + '\\\\';\r\n                            } else if (j !== last)\r\n                            {\r\n                                // We matched a UNC root with leftovers\r\n\r\n                                device = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\r\n                                rootEnd = j;\r\n                            }\r\n                        }\r\n                    }\r\n                } else\r\n                {\r\n                    rootEnd = 1;\r\n                }\r\n            } else if (isWindowsDeviceRoot(code))\r\n            {\r\n                // Possible device root\r\n\r\n                if (path.charCodeAt(1) === CHAR_COLON)\r\n                {\r\n                    device = path.slice(0, 2);\r\n                    rootEnd = 2;\r\n                    if (len > 2)\r\n                    {\r\n                        if (isPathSeparator(path.charCodeAt(2)))\r\n                        {\r\n                            // Treat separator following drive name as an absolute path\r\n                            // indicator\r\n                            isAbsolute = true;\r\n                            rootEnd = 3;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (isPathSeparator(code))\r\n        {\r\n            // `path` contains just a path separator, exit early to avoid unnecessary\r\n            // work\r\n            return '\\\\';\r\n        }\r\n\r\n        var tail: string;\r\n        if (rootEnd < len)\r\n        {\r\n            tail = normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\',\r\n                isPathSeparator);\r\n        } else\r\n        {\r\n            tail = '';\r\n        }\r\n        if (tail.length === 0 && !isAbsolute)\r\n            tail = '.';\r\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1)))\r\n            tail += '\\\\';\r\n        if (device === undefined)\r\n        {\r\n            if (isAbsolute)\r\n            {\r\n                if (tail.length > 0)\r\n                    return '\\\\' + tail;\r\n                else\r\n                    return '\\\\';\r\n            } else if (tail.length > 0)\r\n            {\r\n                return tail;\r\n            } else\r\n            {\r\n                return '';\r\n            }\r\n        } else if (isAbsolute)\r\n        {\r\n            if (tail.length > 0)\r\n                return device + '\\\\' + tail;\r\n            else\r\n                return device + '\\\\';\r\n        } else if (tail.length > 0)\r\n        {\r\n            return device + tail;\r\n        } else\r\n        {\r\n            return device;\r\n        }\r\n    }\r\n\r\n    isAbsolute(path: string)\r\n    {\r\n        validateString(path, 'path');\r\n        const len = path.length;\r\n        if (len === 0)\r\n            return false;\r\n\r\n        const code = path.charCodeAt(0);\r\n        if (isPathSeparator(code))\r\n        {\r\n            return true;\r\n        } else if (isWindowsDeviceRoot(code))\r\n        {\r\n            // Possible device root\r\n\r\n            if (len > 2 && path.charCodeAt(1) === CHAR_COLON)\r\n            {\r\n                if (isPathSeparator(path.charCodeAt(2)))\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    join()\r\n    {\r\n        if (arguments.length === 0)\r\n            return '.';\r\n\r\n        var joined;\r\n        var firstPart;\r\n        for (var i = 0; i < arguments.length; ++i)\r\n        {\r\n            var arg = arguments[i];\r\n            validateString(arg, 'path');\r\n            if (arg.length > 0)\r\n            {\r\n                if (joined === undefined)\r\n                    joined = firstPart = arg;\r\n                else\r\n                    joined += '\\\\' + arg;\r\n            }\r\n        }\r\n\r\n        if (joined === undefined)\r\n            return '.';\r\n\r\n        // Make sure that the joined path doesn't start with two slashes, because\r\n        // normalize() will mistake it for an UNC path then.\r\n        //\r\n        // This step is skipped when it is very clear that the user actually\r\n        // intended to point at an UNC path. This is assumed when the first\r\n        // non-empty string arguments starts with exactly two slashes followed by\r\n        // at least one more non-slash character.\r\n        //\r\n        // Note that for normalize() to treat a path as an UNC path it needs to\r\n        // have at least 2 components, so we don't filter for that here.\r\n        // This means that the user can use join to construct UNC paths from\r\n        // a server name and a share name; for example:\r\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\r\n        var needsReplace = true;\r\n        var slashCount = 0;\r\n        if (isPathSeparator(firstPart.charCodeAt(0)))\r\n        {\r\n            ++slashCount;\r\n            const firstLen = firstPart.length;\r\n            if (firstLen > 1)\r\n            {\r\n                if (isPathSeparator(firstPart.charCodeAt(1)))\r\n                {\r\n                    ++slashCount;\r\n                    if (firstLen > 2)\r\n                    {\r\n                        if (isPathSeparator(firstPart.charCodeAt(2)))\r\n                            ++slashCount;\r\n                        else\r\n                        {\r\n                            // We matched a UNC path in the first part\r\n                            needsReplace = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (needsReplace)\r\n        {\r\n            // Find any more consecutive slashes we need to replace\r\n            for (; slashCount < joined.length; ++slashCount)\r\n            {\r\n                if (!isPathSeparator(joined.charCodeAt(slashCount)))\r\n                    break;\r\n            }\r\n\r\n            // Replace the slashes if needed\r\n            if (slashCount >= 2)\r\n                joined = '\\\\' + joined.slice(slashCount);\r\n        }\r\n\r\n        return win32.normalize(joined);\r\n    }\r\n\r\n\r\n    // It will solve the relative path from `from` to `to`, for instance:\r\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\r\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\r\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\r\n    relative(from: string, to: string)\r\n    {\r\n        validateString(from, 'from');\r\n        validateString(to, 'to');\r\n\r\n        if (from === to)\r\n            return '';\r\n\r\n        var fromOrig = win32.resolve(from);\r\n        var toOrig = win32.resolve(to);\r\n\r\n        if (fromOrig === toOrig)\r\n            return '';\r\n\r\n        from = fromOrig.toLowerCase();\r\n        to = toOrig.toLowerCase();\r\n\r\n        if (from === to)\r\n            return '';\r\n\r\n        // Trim any leading backslashes\r\n        var fromStart = 0;\r\n        for (; fromStart < from.length; ++fromStart)\r\n        {\r\n            if (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH)\r\n                break;\r\n        }\r\n        // Trim trailing backslashes (applicable to UNC paths only)\r\n        var fromEnd = from.length;\r\n        for (; fromEnd - 1 > fromStart; --fromEnd)\r\n        {\r\n            if (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH)\r\n                break;\r\n        }\r\n        var fromLen = (fromEnd - fromStart);\r\n\r\n        // Trim any leading backslashes\r\n        var toStart = 0;\r\n        for (; toStart < to.length; ++toStart)\r\n        {\r\n            if (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH)\r\n                break;\r\n        }\r\n        // Trim trailing backslashes (applicable to UNC paths only)\r\n        var toEnd = to.length;\r\n        for (; toEnd - 1 > toStart; --toEnd)\r\n        {\r\n            if (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH)\r\n                break;\r\n        }\r\n        var toLen = (toEnd - toStart);\r\n\r\n        // Compare paths to find the longest common path from root\r\n        var length = (fromLen < toLen ? fromLen : toLen);\r\n        var lastCommonSep = -1;\r\n        var i = 0;\r\n        for (; i <= length; ++i)\r\n        {\r\n            if (i === length)\r\n            {\r\n                if (toLen > length)\r\n                {\r\n                    if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH)\r\n                    {\r\n                        // We get here if `from` is the exact base path for `to`.\r\n                        // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\r\n                        return toOrig.slice(toStart + i + 1);\r\n                    } else if (i === 2)\r\n                    {\r\n                        // We get here if `from` is the device root.\r\n                        // For example: from='C:\\\\'; to='C:\\\\foo'\r\n                        return toOrig.slice(toStart + i);\r\n                    }\r\n                }\r\n                if (fromLen > length)\r\n                {\r\n                    if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH)\r\n                    {\r\n                        // We get here if `to` is the exact base path for `from`.\r\n                        // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\r\n                        lastCommonSep = i;\r\n                    } else if (i === 2)\r\n                    {\r\n                        // We get here if `to` is the device root.\r\n                        // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\r\n                        lastCommonSep = 3;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            var fromCode = from.charCodeAt(fromStart + i);\r\n            var toCode = to.charCodeAt(toStart + i);\r\n            if (fromCode !== toCode)\r\n                break;\r\n            else if (fromCode === CHAR_BACKWARD_SLASH)\r\n                lastCommonSep = i;\r\n        }\r\n\r\n        // We found a mismatch before the first common path separator was seen, so\r\n        // return the original `to`.\r\n        if (i !== length && lastCommonSep === -1)\r\n        {\r\n            return toOrig;\r\n        }\r\n\r\n        var out = '';\r\n        if (lastCommonSep === -1)\r\n            lastCommonSep = 0;\r\n        // Generate the relative path based on the path difference between `to` and\r\n        // `from`\r\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i)\r\n        {\r\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH)\r\n            {\r\n                if (out.length === 0)\r\n                    out += '..';\r\n                else\r\n                    out += '\\\\..';\r\n            }\r\n        }\r\n\r\n        // Lastly, append the rest of the destination (`to`) path that comes after\r\n        // the common path parts\r\n        if (out.length > 0)\r\n            return out + toOrig.slice(toStart + lastCommonSep, toEnd);\r\n        else\r\n        {\r\n            toStart += lastCommonSep;\r\n            if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH)\r\n                ++toStart;\r\n            return toOrig.slice(toStart, toEnd);\r\n        }\r\n    }\r\n\r\n    toNamespacedPath(path: string)\r\n    {\r\n        // Note: this will *probably* throw somewhere.\r\n        if (typeof path !== 'string')\r\n            return path;\r\n\r\n        if (path.length === 0)\r\n        {\r\n            return '';\r\n        }\r\n\r\n        const resolvedPath = win32.resolve(path);\r\n\r\n        if (resolvedPath.length >= 3)\r\n        {\r\n            if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH)\r\n            {\r\n                // Possible UNC root\r\n\r\n                if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH)\r\n                {\r\n                    const code = resolvedPath.charCodeAt(2);\r\n                    if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT)\r\n                    {\r\n                        // Matched non-long UNC root, convert the path to a long UNC path\r\n                        return '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.slice(2);\r\n                    }\r\n                }\r\n            } else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)))\r\n            {\r\n                // Possible device root\r\n\r\n                if (resolvedPath.charCodeAt(1) === CHAR_COLON &&\r\n                    resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH)\r\n                {\r\n                    // Matched device root, convert the path to a long UNC path\r\n                    return '\\\\\\\\?\\\\' + resolvedPath;\r\n                }\r\n            }\r\n        }\r\n\r\n        return path;\r\n    }\r\n\r\n    dirname(path: string)\r\n    {\r\n        validateString(path, 'path');\r\n        const len = path.length;\r\n        if (len === 0)\r\n            return '.';\r\n        var rootEnd = -1;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        var offset = 0;\r\n        const code = path.charCodeAt(0);\r\n\r\n        // Try to match a root\r\n        if (len > 1)\r\n        {\r\n            if (isPathSeparator(code))\r\n            {\r\n                // Possible UNC root\r\n\r\n                rootEnd = offset = 1;\r\n\r\n                if (isPathSeparator(path.charCodeAt(1)))\r\n                {\r\n                    // Matched double path separator at beginning\r\n                    var j = 2;\r\n                    var last = j;\r\n                    // Match 1 or more non-path separators\r\n                    for (; j < len; ++j)\r\n                    {\r\n                        if (isPathSeparator(path.charCodeAt(j)))\r\n                            break;\r\n                    }\r\n                    if (j < len && j !== last)\r\n                    {\r\n                        // Matched!\r\n                        last = j;\r\n                        // Match 1 or more path separators\r\n                        for (; j < len; ++j)\r\n                        {\r\n                            if (!isPathSeparator(path.charCodeAt(j)))\r\n                                break;\r\n                        }\r\n                        if (j < len && j !== last)\r\n                        {\r\n                            // Matched!\r\n                            last = j;\r\n                            // Match 1 or more non-path separators\r\n                            for (; j < len; ++j)\r\n                            {\r\n                                if (isPathSeparator(path.charCodeAt(j)))\r\n                                    break;\r\n                            }\r\n                            if (j === len)\r\n                            {\r\n                                // We matched a UNC root only\r\n                                return path;\r\n                            }\r\n                            if (j !== last)\r\n                            {\r\n                                // We matched a UNC root with leftovers\r\n\r\n                                // Offset by 1 to include the separator after the UNC root to\r\n                                // treat it as a \"normal root\" on top of a (UNC) root\r\n                                rootEnd = offset = j + 1;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (isWindowsDeviceRoot(code))\r\n            {\r\n                // Possible device root\r\n\r\n                if (path.charCodeAt(1) === CHAR_COLON)\r\n                {\r\n                    rootEnd = offset = 2;\r\n                    if (len > 2)\r\n                    {\r\n                        if (isPathSeparator(path.charCodeAt(2)))\r\n                            rootEnd = offset = 3;\r\n                    }\r\n                }\r\n            }\r\n        } else if (isPathSeparator(code))\r\n        {\r\n            // `path` contains just a path separator, exit early to avoid\r\n            // unnecessary work\r\n            return path;\r\n        }\r\n\r\n        for (var i = len - 1; i >= offset; --i)\r\n        {\r\n            if (isPathSeparator(path.charCodeAt(i)))\r\n            {\r\n                if (!matchedSlash)\r\n                {\r\n                    end = i;\r\n                    break;\r\n                }\r\n            } else\r\n            {\r\n                // We saw the first non-path separator\r\n                matchedSlash = false;\r\n            }\r\n        }\r\n\r\n        if (end === -1)\r\n        {\r\n            if (rootEnd === -1)\r\n                return '.';\r\n            else\r\n                end = rootEnd;\r\n        }\r\n        return path.slice(0, end);\r\n    }\r\n\r\n    basename(path: string, ext: string)\r\n    {\r\n        if (ext !== undefined)\r\n            validateString(ext, 'ext');\r\n        validateString(path, 'path');\r\n        var start = 0;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        var i;\r\n\r\n        // Check for a drive letter prefix so as not to mistake the following\r\n        // path separator as an extra separator at the end of the path that can be\r\n        // disregarded\r\n        if (path.length >= 2)\r\n        {\r\n            const drive = path.charCodeAt(0);\r\n            if (isWindowsDeviceRoot(drive))\r\n            {\r\n                if (path.charCodeAt(1) === CHAR_COLON)\r\n                    start = 2;\r\n            }\r\n        }\r\n\r\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length)\r\n        {\r\n            if (ext.length === path.length && ext === path)\r\n                return '';\r\n            var extIdx = ext.length - 1;\r\n            var firstNonSlashEnd = -1;\r\n            for (i = path.length - 1; i >= start; --i)\r\n            {\r\n                const code = path.charCodeAt(i);\r\n                if (isPathSeparator(code))\r\n                {\r\n                    // If we reached a path separator that was not part of a set of path\r\n                    // separators at the end of the string, stop now\r\n                    if (!matchedSlash)\r\n                    {\r\n                        start = i + 1;\r\n                        break;\r\n                    }\r\n                } else\r\n                {\r\n                    if (firstNonSlashEnd === -1)\r\n                    {\r\n                        // We saw the first non-path separator, remember this index in case\r\n                        // we need it if the extension ends up not matching\r\n                        matchedSlash = false;\r\n                        firstNonSlashEnd = i + 1;\r\n                    }\r\n                    if (extIdx >= 0)\r\n                    {\r\n                        // Try to match the explicit extension\r\n                        if (code === ext.charCodeAt(extIdx))\r\n                        {\r\n                            if (--extIdx === -1)\r\n                            {\r\n                                // We matched the extension, so mark this as the end of our path\r\n                                // component\r\n                                end = i;\r\n                            }\r\n                        } else\r\n                        {\r\n                            // Extension does not match, so our result is the entire path\r\n                            // component\r\n                            extIdx = -1;\r\n                            end = firstNonSlashEnd;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (start === end)\r\n                end = firstNonSlashEnd;\r\n            else if (end === -1)\r\n                end = path.length;\r\n            return path.slice(start, end);\r\n        } else\r\n        {\r\n            for (i = path.length - 1; i >= start; --i)\r\n            {\r\n                if (isPathSeparator(path.charCodeAt(i)))\r\n                {\r\n                    // If we reached a path separator that was not part of a set of path\r\n                    // separators at the end of the string, stop now\r\n                    if (!matchedSlash)\r\n                    {\r\n                        start = i + 1;\r\n                        break;\r\n                    }\r\n                } else if (end === -1)\r\n                {\r\n                    // We saw the first non-path separator, mark this as the end of our\r\n                    // path component\r\n                    matchedSlash = false;\r\n                    end = i + 1;\r\n                }\r\n            }\r\n\r\n            if (end === -1)\r\n                return '';\r\n            return path.slice(start, end);\r\n        }\r\n    }\r\n\r\n    extname(path: string)\r\n    {\r\n        validateString(path, 'path');\r\n        var start = 0;\r\n        var startDot = -1;\r\n        var startPart = 0;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        // Track the state of characters (if any) we see before our first dot and\r\n        // after any path separator we find\r\n        var preDotState = 0;\r\n\r\n        // Check for a drive letter prefix so as not to mistake the following\r\n        // path separator as an extra separator at the end of the path that can be\r\n        // disregarded\r\n\r\n        if (path.length >= 2 &&\r\n            path.charCodeAt(1) === CHAR_COLON &&\r\n            isWindowsDeviceRoot(path.charCodeAt(0)))\r\n        {\r\n            start = startPart = 2;\r\n        }\r\n\r\n        for (var i = path.length - 1; i >= start; --i)\r\n        {\r\n            const code = path.charCodeAt(i);\r\n            if (isPathSeparator(code))\r\n            {\r\n                // If we reached a path separator that was not part of a set of path\r\n                // separators at the end of the string, stop now\r\n                if (!matchedSlash)\r\n                {\r\n                    startPart = i + 1;\r\n                    break;\r\n                }\r\n                continue;\r\n            }\r\n            if (end === -1)\r\n            {\r\n                // We saw the first non-path separator, mark this as the end of our\r\n                // extension\r\n                matchedSlash = false;\r\n                end = i + 1;\r\n            }\r\n            if (code === CHAR_DOT)\r\n            {\r\n                // If this is our first dot, mark it as the start of our extension\r\n                if (startDot === -1)\r\n                    startDot = i;\r\n                else if (preDotState !== 1)\r\n                    preDotState = 1;\r\n            } else if (startDot !== -1)\r\n            {\r\n                // We saw a non-dot and non-path separator before our dot, so we should\r\n                // have a good chance at having a non-empty extension\r\n                preDotState = -1;\r\n            }\r\n        }\r\n\r\n        if (startDot === -1 ||\r\n            end === -1 ||\r\n            // We saw a non-dot character immediately before the dot\r\n            preDotState === 0 ||\r\n            // The (right-most) trimmed path component is exactly '..'\r\n            (preDotState === 1 &&\r\n                startDot === end - 1 &&\r\n                startDot === startPart + 1))\r\n        {\r\n            return '';\r\n        }\r\n        return path.slice(startDot, end);\r\n    }\r\n\r\n    format(pathObject: {\r\n        dir: string;\r\n        root: string;\r\n        base: string;\r\n        name: string;\r\n        ext: string;\r\n    })\r\n    {\r\n        if (pathObject === null || typeof pathObject !== 'object')\r\n        {\r\n            throw new ERR_INVALID_ARG_TYPE('pathObject', 'Object', pathObject);\r\n        }\r\n        return _format('\\\\', pathObject);\r\n    }\r\n\r\n    parse(path: string)\r\n    {\r\n        validateString(path, 'path');\r\n\r\n        var ret = { root: '', dir: '', base: '', ext: '', name: '' };\r\n        if (path.length === 0)\r\n            return ret;\r\n\r\n        var len = path.length;\r\n        var rootEnd = 0;\r\n        let code = path.charCodeAt(0);\r\n\r\n        // Try to match a root\r\n        if (len > 1)\r\n        {\r\n            if (isPathSeparator(code))\r\n            {\r\n                // Possible UNC root\r\n\r\n                rootEnd = 1;\r\n                if (isPathSeparator(path.charCodeAt(1)))\r\n                {\r\n                    // Matched double path separator at beginning\r\n                    var j = 2;\r\n                    var last = j;\r\n                    // Match 1 or more non-path separators\r\n                    for (; j < len; ++j)\r\n                    {\r\n                        if (isPathSeparator(path.charCodeAt(j)))\r\n                            break;\r\n                    }\r\n                    if (j < len && j !== last)\r\n                    {\r\n                        // Matched!\r\n                        last = j;\r\n                        // Match 1 or more path separators\r\n                        for (; j < len; ++j)\r\n                        {\r\n                            if (!isPathSeparator(path.charCodeAt(j)))\r\n                                break;\r\n                        }\r\n                        if (j < len && j !== last)\r\n                        {\r\n                            // Matched!\r\n                            last = j;\r\n                            // Match 1 or more non-path separators\r\n                            for (; j < len; ++j)\r\n                            {\r\n                                if (isPathSeparator(path.charCodeAt(j)))\r\n                                    break;\r\n                            }\r\n                            if (j === len)\r\n                            {\r\n                                // We matched a UNC root only\r\n\r\n                                rootEnd = j;\r\n                            } else if (j !== last)\r\n                            {\r\n                                // We matched a UNC root with leftovers\r\n\r\n                                rootEnd = j + 1;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (isWindowsDeviceRoot(code))\r\n            {\r\n                // Possible device root\r\n\r\n                if (path.charCodeAt(1) === CHAR_COLON)\r\n                {\r\n                    rootEnd = 2;\r\n                    if (len > 2)\r\n                    {\r\n                        if (isPathSeparator(path.charCodeAt(2)))\r\n                        {\r\n                            if (len === 3)\r\n                            {\r\n                                // `path` contains just a drive root, exit early to avoid\r\n                                // unnecessary work\r\n                                ret.root = ret.dir = path;\r\n                                return ret;\r\n                            }\r\n                            rootEnd = 3;\r\n                        }\r\n                    } else\r\n                    {\r\n                        // `path` contains just a drive root, exit early to avoid\r\n                        // unnecessary work\r\n                        ret.root = ret.dir = path;\r\n                        return ret;\r\n                    }\r\n                }\r\n            }\r\n        } else if (isPathSeparator(code))\r\n        {\r\n            // `path` contains just a path separator, exit early to avoid\r\n            // unnecessary work\r\n            ret.root = ret.dir = path;\r\n            return ret;\r\n        }\r\n\r\n        if (rootEnd > 0)\r\n            ret.root = path.slice(0, rootEnd);\r\n\r\n        var startDot = -1;\r\n        var startPart = rootEnd;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        var i = path.length - 1;\r\n\r\n        // Track the state of characters (if any) we see before our first dot and\r\n        // after any path separator we find\r\n        var preDotState = 0;\r\n\r\n        // Get non-dir info\r\n        for (; i >= rootEnd; --i)\r\n        {\r\n            code = path.charCodeAt(i);\r\n            if (isPathSeparator(code))\r\n            {\r\n                // If we reached a path separator that was not part of a set of path\r\n                // separators at the end of the string, stop now\r\n                if (!matchedSlash)\r\n                {\r\n                    startPart = i + 1;\r\n                    break;\r\n                }\r\n                continue;\r\n            }\r\n            if (end === -1)\r\n            {\r\n                // We saw the first non-path separator, mark this as the end of our\r\n                // extension\r\n                matchedSlash = false;\r\n                end = i + 1;\r\n            }\r\n            if (code === CHAR_DOT)\r\n            {\r\n                // If this is our first dot, mark it as the start of our extension\r\n                if (startDot === -1)\r\n                    startDot = i;\r\n                else if (preDotState !== 1)\r\n                    preDotState = 1;\r\n            } else if (startDot !== -1)\r\n            {\r\n                // We saw a non-dot and non-path separator before our dot, so we should\r\n                // have a good chance at having a non-empty extension\r\n                preDotState = -1;\r\n            }\r\n        }\r\n\r\n        if (startDot === -1 ||\r\n            end === -1 ||\r\n            // We saw a non-dot character immediately before the dot\r\n            preDotState === 0 ||\r\n            // The (right-most) trimmed path component is exactly '..'\r\n            (preDotState === 1 &&\r\n                startDot === end - 1 &&\r\n                startDot === startPart + 1))\r\n        {\r\n            if (end !== -1)\r\n            {\r\n                ret.base = ret.name = path.slice(startPart, end);\r\n            }\r\n        } else\r\n        {\r\n            ret.name = path.slice(startPart, startDot);\r\n            ret.base = path.slice(startPart, end);\r\n            ret.ext = path.slice(startDot, end);\r\n        }\r\n\r\n        // If the directory is the root, use the entire root as the `dir` including\r\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\r\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\r\n        if (startPart > 0 && startPart !== rootEnd)\r\n            ret.dir = path.slice(0, startPart - 1);\r\n        else\r\n            ret.dir = ret.root;\r\n\r\n        return ret;\r\n    }\r\n\r\n    sep: \"\\\\\" | \"/\" = '\\\\';\r\n    delimiter: \";\" | \":\" = ';';\r\n    win32: Win32Path = <any>null;\r\n    posix: PosixPath = <any>null;\r\n};\r\n\r\nclass PosixPath implements Path\r\n{\r\n    // path.resolve([from ...], to)\r\n    resolve(...pathSegments: string[]): string\r\n    {\r\n        var resolvedPath = '';\r\n        var resolvedAbsolute = false;\r\n\r\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--)\r\n        {\r\n            var path;\r\n            if (i >= 0)\r\n                path = arguments[i];\r\n            else\r\n            {\r\n                path = process.cwd();\r\n            }\r\n\r\n            validateString(path, 'path');\r\n\r\n            // Skip empty entries\r\n            if (path.length === 0)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            resolvedPath = path + '/' + resolvedPath;\r\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n        }\r\n\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n\r\n        // Normalize the path\r\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\r\n            isPosixPathSeparator);\r\n\r\n        if (resolvedAbsolute)\r\n        {\r\n            if (resolvedPath.length > 0)\r\n                return '/' + resolvedPath;\r\n            else\r\n                return '/';\r\n        } else if (resolvedPath.length > 0)\r\n        {\r\n            return resolvedPath;\r\n        } else\r\n        {\r\n            return '.';\r\n        }\r\n    }\r\n\r\n\r\n    normalize(path: string)\r\n    {\r\n        validateString(path, 'path');\r\n\r\n        if (path.length === 0)\r\n            return '.';\r\n\r\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n        const trailingSeparator =\r\n            path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\r\n\r\n        // Normalize the path\r\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\r\n\r\n        if (path.length === 0 && !isAbsolute)\r\n            path = '.';\r\n        if (path.length > 0 && trailingSeparator)\r\n            path += '/';\r\n\r\n        if (isAbsolute)\r\n            return '/' + path;\r\n        return path;\r\n    }\r\n\r\n    isAbsolute(path: string)\r\n    {\r\n        validateString(path, 'path');\r\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n    }\r\n\r\n    join()\r\n    {\r\n        if (arguments.length === 0)\r\n            return '.';\r\n        var joined;\r\n        for (var i = 0; i < arguments.length; ++i)\r\n        {\r\n            var arg = arguments[i];\r\n            validateString(arg, 'path');\r\n            if (arg.length > 0)\r\n            {\r\n                if (joined === undefined)\r\n                    joined = arg;\r\n                else\r\n                    joined += '/' + arg;\r\n            }\r\n        }\r\n        if (joined === undefined)\r\n            return '.';\r\n        return posix.normalize(joined);\r\n    }\r\n\r\n    relative(from: string, to: string)\r\n    {\r\n        validateString(from, 'from');\r\n        validateString(to, 'to');\r\n\r\n        if (from === to)\r\n            return '';\r\n\r\n        from = posix.resolve(from);\r\n        to = posix.resolve(to);\r\n\r\n        if (from === to)\r\n            return '';\r\n\r\n        // Trim any leading backslashes\r\n        var fromStart = 1;\r\n        for (; fromStart < from.length; ++fromStart)\r\n        {\r\n            if (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH)\r\n                break;\r\n        }\r\n        var fromEnd = from.length;\r\n        var fromLen = (fromEnd - fromStart);\r\n\r\n        // Trim any leading backslashes\r\n        var toStart = 1;\r\n        for (; toStart < to.length; ++toStart)\r\n        {\r\n            if (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH)\r\n                break;\r\n        }\r\n        var toEnd = to.length;\r\n        var toLen = (toEnd - toStart);\r\n\r\n        // Compare paths to find the longest common path from root\r\n        var length = (fromLen < toLen ? fromLen : toLen);\r\n        var lastCommonSep = -1;\r\n        var i = 0;\r\n        for (; i <= length; ++i)\r\n        {\r\n            if (i === length)\r\n            {\r\n                if (toLen > length)\r\n                {\r\n                    if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH)\r\n                    {\r\n                        // We get here if `from` is the exact base path for `to`.\r\n                        // For example: from='/foo/bar'; to='/foo/bar/baz'\r\n                        return to.slice(toStart + i + 1);\r\n                    } else if (i === 0)\r\n                    {\r\n                        // We get here if `from` is the root\r\n                        // For example: from='/'; to='/foo'\r\n                        return to.slice(toStart + i);\r\n                    }\r\n                } else if (fromLen > length)\r\n                {\r\n                    if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH)\r\n                    {\r\n                        // We get here if `to` is the exact base path for `from`.\r\n                        // For example: from='/foo/bar/baz'; to='/foo/bar'\r\n                        lastCommonSep = i;\r\n                    } else if (i === 0)\r\n                    {\r\n                        // We get here if `to` is the root.\r\n                        // For example: from='/foo'; to='/'\r\n                        lastCommonSep = 0;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            var fromCode = from.charCodeAt(fromStart + i);\r\n            var toCode = to.charCodeAt(toStart + i);\r\n            if (fromCode !== toCode)\r\n                break;\r\n            else if (fromCode === CHAR_FORWARD_SLASH)\r\n                lastCommonSep = i;\r\n        }\r\n\r\n        var out = '';\r\n        // Generate the relative path based on the path difference between `to`\r\n        // and `from`\r\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i)\r\n        {\r\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH)\r\n            {\r\n                if (out.length === 0)\r\n                    out += '..';\r\n                else\r\n                    out += '/..';\r\n            }\r\n        }\r\n\r\n        // Lastly, append the rest of the destination (`to`) path that comes after\r\n        // the common path parts\r\n        if (out.length > 0)\r\n            return out + to.slice(toStart + lastCommonSep);\r\n        else\r\n        {\r\n            toStart += lastCommonSep;\r\n            if (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH)\r\n                ++toStart;\r\n            return to.slice(toStart);\r\n        }\r\n    }\r\n\r\n    toNamespacedPath(path: string)\r\n    {\r\n        // Non-op on posix systems\r\n        return path;\r\n    }\r\n\r\n    dirname(path: string)\r\n    {\r\n        validateString(path, 'path');\r\n        if (path.length === 0)\r\n            return '.';\r\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        for (var i = path.length - 1; i >= 1; --i)\r\n        {\r\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH)\r\n            {\r\n                if (!matchedSlash)\r\n                {\r\n                    end = i;\r\n                    break;\r\n                }\r\n            } else\r\n            {\r\n                // We saw the first non-path separator\r\n                matchedSlash = false;\r\n            }\r\n        }\r\n\r\n        if (end === -1)\r\n            return hasRoot ? '/' : '.';\r\n        if (hasRoot && end === 1)\r\n            return '//';\r\n        return path.slice(0, end);\r\n    }\r\n\r\n    basename(path: string, ext: string)\r\n    {\r\n        if (ext !== undefined)\r\n            validateString(ext, 'ext');\r\n        validateString(path, 'path');\r\n\r\n        var start = 0;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        var i;\r\n\r\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length)\r\n        {\r\n            if (ext.length === path.length && ext === path)\r\n                return '';\r\n            var extIdx = ext.length - 1;\r\n            var firstNonSlashEnd = -1;\r\n            for (i = path.length - 1; i >= 0; --i)\r\n            {\r\n                const code = path.charCodeAt(i);\r\n                if (code === CHAR_FORWARD_SLASH)\r\n                {\r\n                    // If we reached a path separator that was not part of a set of path\r\n                    // separators at the end of the string, stop now\r\n                    if (!matchedSlash)\r\n                    {\r\n                        start = i + 1;\r\n                        break;\r\n                    }\r\n                } else\r\n                {\r\n                    if (firstNonSlashEnd === -1)\r\n                    {\r\n                        // We saw the first non-path separator, remember this index in case\r\n                        // we need it if the extension ends up not matching\r\n                        matchedSlash = false;\r\n                        firstNonSlashEnd = i + 1;\r\n                    }\r\n                    if (extIdx >= 0)\r\n                    {\r\n                        // Try to match the explicit extension\r\n                        if (code === ext.charCodeAt(extIdx))\r\n                        {\r\n                            if (--extIdx === -1)\r\n                            {\r\n                                // We matched the extension, so mark this as the end of our path\r\n                                // component\r\n                                end = i;\r\n                            }\r\n                        } else\r\n                        {\r\n                            // Extension does not match, so our result is the entire path\r\n                            // component\r\n                            extIdx = -1;\r\n                            end = firstNonSlashEnd;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (start === end)\r\n                end = firstNonSlashEnd;\r\n            else if (end === -1)\r\n                end = path.length;\r\n            return path.slice(start, end);\r\n        } else\r\n        {\r\n            for (i = path.length - 1; i >= 0; --i)\r\n            {\r\n                if (path.charCodeAt(i) === CHAR_FORWARD_SLASH)\r\n                {\r\n                    // If we reached a path separator that was not part of a set of path\r\n                    // separators at the end of the string, stop now\r\n                    if (!matchedSlash)\r\n                    {\r\n                        start = i + 1;\r\n                        break;\r\n                    }\r\n                } else if (end === -1)\r\n                {\r\n                    // We saw the first non-path separator, mark this as the end of our\r\n                    // path component\r\n                    matchedSlash = false;\r\n                    end = i + 1;\r\n                }\r\n            }\r\n\r\n            if (end === -1)\r\n                return '';\r\n            return path.slice(start, end);\r\n        }\r\n    }\r\n\r\n    extname(path: string)\r\n    {\r\n        validateString(path, 'path');\r\n        var startDot = -1;\r\n        var startPart = 0;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        // Track the state of characters (if any) we see before our first dot and\r\n        // after any path separator we find\r\n        var preDotState = 0;\r\n        for (var i = path.length - 1; i >= 0; --i)\r\n        {\r\n            const code = path.charCodeAt(i);\r\n            if (code === CHAR_FORWARD_SLASH)\r\n            {\r\n                // If we reached a path separator that was not part of a set of path\r\n                // separators at the end of the string, stop now\r\n                if (!matchedSlash)\r\n                {\r\n                    startPart = i + 1;\r\n                    break;\r\n                }\r\n                continue;\r\n            }\r\n            if (end === -1)\r\n            {\r\n                // We saw the first non-path separator, mark this as the end of our\r\n                // extension\r\n                matchedSlash = false;\r\n                end = i + 1;\r\n            }\r\n            if (code === CHAR_DOT)\r\n            {\r\n                // If this is our first dot, mark it as the start of our extension\r\n                if (startDot === -1)\r\n                    startDot = i;\r\n                else if (preDotState !== 1)\r\n                    preDotState = 1;\r\n            } else if (startDot !== -1)\r\n            {\r\n                // We saw a non-dot and non-path separator before our dot, so we should\r\n                // have a good chance at having a non-empty extension\r\n                preDotState = -1;\r\n            }\r\n        }\r\n\r\n        if (startDot === -1 ||\r\n            end === -1 ||\r\n            // We saw a non-dot character immediately before the dot\r\n            preDotState === 0 ||\r\n            // The (right-most) trimmed path component is exactly '..'\r\n            (preDotState === 1 &&\r\n                startDot === end - 1 &&\r\n                startDot === startPart + 1))\r\n        {\r\n            return '';\r\n        }\r\n        return path.slice(startDot, end);\r\n    }\r\n\r\n    format(pathObject: {\r\n        dir: string;\r\n        root: string;\r\n        base: string;\r\n        name: string;\r\n        ext: string;\r\n    })\r\n    {\r\n        if (pathObject === null || typeof pathObject !== 'object')\r\n        {\r\n            throw new ERR_INVALID_ARG_TYPE('pathObject', 'Object', pathObject);\r\n        }\r\n        return _format('/', pathObject);\r\n    }\r\n\r\n    parse(path: string)\r\n    {\r\n        validateString(path, 'path');\r\n\r\n        var ret = { root: '', dir: '', base: '', ext: '', name: '' };\r\n        if (path.length === 0)\r\n            return ret;\r\n        var isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n        var start;\r\n        if (isAbsolute)\r\n        {\r\n            ret.root = '/';\r\n            start = 1;\r\n        } else\r\n        {\r\n            start = 0;\r\n        }\r\n        var startDot = -1;\r\n        var startPart = 0;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        var i = path.length - 1;\r\n\r\n        // Track the state of characters (if any) we see before our first dot and\r\n        // after any path separator we find\r\n        var preDotState = 0;\r\n\r\n        // Get non-dir info\r\n        for (; i >= start; --i)\r\n        {\r\n            const code = path.charCodeAt(i);\r\n            if (code === CHAR_FORWARD_SLASH)\r\n            {\r\n                // If we reached a path separator that was not part of a set of path\r\n                // separators at the end of the string, stop now\r\n                if (!matchedSlash)\r\n                {\r\n                    startPart = i + 1;\r\n                    break;\r\n                }\r\n                continue;\r\n            }\r\n            if (end === -1)\r\n            {\r\n                // We saw the first non-path separator, mark this as the end of our\r\n                // extension\r\n                matchedSlash = false;\r\n                end = i + 1;\r\n            }\r\n            if (code === CHAR_DOT)\r\n            {\r\n                // If this is our first dot, mark it as the start of our extension\r\n                if (startDot === -1)\r\n                    startDot = i;\r\n                else if (preDotState !== 1)\r\n                    preDotState = 1;\r\n            } else if (startDot !== -1)\r\n            {\r\n                // We saw a non-dot and non-path separator before our dot, so we should\r\n                // have a good chance at having a non-empty extension\r\n                preDotState = -1;\r\n            }\r\n        }\r\n\r\n        if (startDot === -1 ||\r\n            end === -1 ||\r\n            // We saw a non-dot character immediately before the dot\r\n            preDotState === 0 ||\r\n            // The (right-most) trimmed path component is exactly '..'\r\n            (preDotState === 1 &&\r\n                startDot === end - 1 &&\r\n                startDot === startPart + 1))\r\n        {\r\n            if (end !== -1)\r\n            {\r\n                if (startPart === 0 && isAbsolute)\r\n                    ret.base = ret.name = path.slice(1, end);\r\n                else\r\n                    ret.base = ret.name = path.slice(startPart, end);\r\n            }\r\n        } else\r\n        {\r\n            if (startPart === 0 && isAbsolute)\r\n            {\r\n                ret.name = path.slice(1, startDot);\r\n                ret.base = path.slice(1, end);\r\n            } else\r\n            {\r\n                ret.name = path.slice(startPart, startDot);\r\n                ret.base = path.slice(startPart, end);\r\n            }\r\n            ret.ext = path.slice(startDot, end);\r\n        }\r\n\r\n        if (startPart > 0)\r\n            ret.dir = path.slice(0, startPart - 1);\r\n        else if (isAbsolute)\r\n            ret.dir = '/';\r\n\r\n        return ret;\r\n    }\r\n\r\n    sep: \"\\\\\" | \"/\" = '/';\r\n    delimiter: \";\" | \":\" = ':';\r\n    win32: Win32Path = <any>null;\r\n    posix: PosixPath = <any>null;\r\n};\r\n\r\nconst win32 = new Win32Path();\r\nconst posix = new PosixPath();\r\n\r\nposix.win32 = win32.win32 = win32;\r\nposix.posix = win32.posix = posix;\r\n\r\n// Legacy internal API, docs-only deprecated: DEP0080\r\n// win32._makeLong = win32.toNamespacedPath;\r\n// posix._makeLong = posix.toNamespacedPath;\r\n\r\n// if (process.platform === 'win32')\r\n//     module.exports = win32;\r\n// else\r\n//     module.exports = posix;\r\n\r\n// \r\n\r\n/**\r\n * 路径\r\n * \r\n * 从nodeJs的path移植\r\n * \r\n * @see http://nodejs.cn/api/path.html\r\n * @see https://github.com/nodejs/node/blob/master/lib/path.js\r\n */\r\nexport const path = process.platform === 'win32' ? win32 : posix;","import { fs, pathUtils, ReadFS } from \"@feng3d/filesystem\";\r\nimport { classUtils, Constructor, gPartial, mathUtil, __class__ } from \"@feng3d/polyfill\";\r\nimport { serialization } from \"@feng3d/serialization\";\r\nimport { task } from \"@feng3d/task\";\r\nimport { AssetData } from \"../../core/AssetData\";\r\nimport { path } from \"../../utils/Path\";\r\nimport { FileAsset } from \"../FileAsset\";\r\nimport { FolderAsset } from \"../FolderAsset\";\r\n\r\n/**\r\n * 可读资源系统\r\n */\r\nexport class ReadRS\r\n{\r\n    /**\r\n     * 文件系统\r\n     */\r\n    get fs() { return this._fs || fs; }\r\n    protected _fs: ReadFS;\r\n\r\n    /**\r\n     * 根资源路径\r\n     */\r\n    get rootPath() { return this._rootPath; }\r\n    private _rootPath = \"Assets\";\r\n\r\n    /**\r\n     * 根资源\r\n     */\r\n    get root() { return this.getAssetByPath(this.rootPath) as FolderAsset; }\r\n\r\n    /**\r\n     * 资源编号映射\r\n     */\r\n    protected _idMap: { [id: string]: FileAsset } = {};\r\n\r\n    /**\r\n     * 资源路径映射\r\n     */\r\n    protected _pathMap: { [path: string]: FileAsset } = {};\r\n\r\n    /**\r\n     * 资源树保存路径\r\n     */\r\n    protected resources = \"resource.json\";\r\n\r\n    /**\r\n     * 构建可读资源系统\r\n     * \r\n     * @param fs 可读文件系统\r\n     */\r\n    constructor(fs?: ReadFS)\r\n    {\r\n        this._fs = fs;\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    init(callback?: () => void)\r\n    {\r\n        this.fs.readObject(this.resources, (err, object) =>\r\n        {\r\n            if (object)\r\n            {\r\n                var allAssets: FileAsset[] = <any>serialization.deserialize(object);\r\n                //\r\n                allAssets.forEach(asset =>\r\n                {\r\n                    // 设置资源系统\r\n                    asset.rs = <any>this;\r\n                    // 新增映射\r\n                    this.addAsset(asset);\r\n                });\r\n                callback();\r\n            } else\r\n            {\r\n                this.createAsset(FolderAsset, this.rootPath, null, null, (err, asset) =>\r\n                {\r\n                    callback();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 新建资源\r\n     * \r\n     * @param cls 资源类定义\r\n     * @param fileName 文件名称\r\n     * @param value 初始数据\r\n     * @param parent 所在文件夹，如果值为null时默认添加到根文件夹中\r\n     * @param callback 完成回调函数\r\n     */\r\n    createAsset<T extends FileAsset>(cls: new () => T, fileName?: string, value?: gPartial<T>, parent?: FolderAsset, callback?: (err: Error, asset: T) => void)\r\n    {\r\n        parent = parent || this.root;\r\n        //\r\n        var asset: FileAsset = new cls();\r\n        var assetId = mathUtil.uuid()\r\n\r\n        // 初始化\r\n        asset.rs = <any>this;\r\n        serialization.setValue(<T>asset, value);\r\n        asset.assetId = assetId;\r\n        asset.meta = { guid: assetId, mtimeMs: Date.now(), birthtimeMs: Date.now(), assetType: asset.assetType };\r\n        asset.initAsset();\r\n        AssetData.addAssetData(asset.assetId, asset.data);\r\n\r\n        // 计算扩展名\r\n        var extenson = path.extname(fileName);\r\n        if (extenson == \"\") extenson = cls[\"extenson\"];\r\n        console.assert(extenson != undefined, `对象 ${cls} 没有设置 extenson 值，参考 FolderAsset.extenson`);\r\n\r\n        // 计算名称\r\n        fileName = pathUtils.getName(fileName);\r\n        // 设置默认名称\r\n        fileName = fileName || \"new \" + asset.assetType;\r\n        // \r\n        if (parent) \r\n        {\r\n            // 计算有效名称\r\n            fileName = this.getValidChildName(parent, fileName);\r\n            asset.assetPath = parent.assetPath + \"/\" + fileName + extenson;\r\n        }\r\n        else\r\n        {\r\n            asset.assetPath = fileName + extenson;\r\n        }\r\n\r\n        // 新增映射\r\n        this.addAsset(asset);\r\n\r\n        //\r\n        asset.write((err) =>\r\n        {\r\n            callback && callback(null, <T>asset);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取有效子文件名称\r\n     * \r\n     * @param parent 父文件夹\r\n     * @param fileName 文件名称\r\n     */\r\n    getValidChildName(parent: FolderAsset, fileName: string)\r\n    {\r\n        var childrenNames = parent.childrenAssets.map(v => v.fileName);\r\n        var newName = fileName;\r\n        var index = 1;\r\n        while (childrenNames.indexOf(newName) != -1)\r\n        {\r\n            newName = fileName + index;\r\n            index++;\r\n        }\r\n        return newName;\r\n    }\r\n\r\n    /**\r\n     * 读取文件为资源对象\r\n     * @param id 资源编号\r\n     * @param callback 读取完成回调\r\n     */\r\n    readAsset(id: string, callback: (err: Error, asset: FileAsset) => void)\r\n    {\r\n        var asset = this.getAssetById(id);\r\n        if (!asset)\r\n        {\r\n            callback(new Error(`不存在资源 ${id}`), asset);\r\n            return;\r\n        }\r\n        asset.read((err) =>\r\n        {\r\n            if (asset)\r\n                AssetData.addAssetData(asset.assetId, asset.data);\r\n            callback(err, asset);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 读取资源数据\r\n     * \r\n     * @param id 资源编号\r\n     * @param callback 完成回调\r\n     */\r\n    readAssetData(id: string, callback: (err: Error, data: AssetData) => void)\r\n    {\r\n        var asset = AssetData.getLoadedAssetData(id);\r\n        if (asset)\r\n        {\r\n            callback(null, asset);\r\n            return;\r\n        }\r\n        this.readAsset(id, (err, asset) =>\r\n        {\r\n            callback(err, asset && asset.getAssetData());\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 读取资源数据列表\r\n     * \r\n     * @param assetids 资源编号列表\r\n     * @param callback 完成回调\r\n     */\r\n    readAssetDatas(assetids: string[], callback: (err: Error, data: AssetData[]) => void)\r\n    {\r\n        var result: AssetData[] = [];\r\n        var fns = assetids.map(v => (callback) =>\r\n        {\r\n            rs.readAssetData(v, (err, data) =>\r\n            {\r\n                console.assert(!!data);\r\n                result.push(data);\r\n                callback();\r\n            });\r\n        });\r\n        task.parallel(fns)(() =>\r\n        {\r\n            console.assert(assetids.length == result.filter(v => v != null).length);\r\n            callback(null, result);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取指定类型资源\r\n     * \r\n     * @param type 资源类型\r\n     */\r\n    getAssetsByType<T extends FileAsset>(type: Constructor<T>): T[]\r\n    {\r\n        var assets = Object.keys(this._idMap).map(v => this._idMap[v]);\r\n        return <any>assets.filter(v => v instanceof type);\r\n    }\r\n\r\n    /**\r\n     * 获取指定类型资源数据\r\n     * \r\n     * @param type 资源类型\r\n     */\r\n    getLoadedAssetDatasByType<T extends any>(type: Constructor<T>): T[]\r\n    {\r\n        var assets = AssetData.getAllLoadedAssetDatas();\r\n        return <any>assets.filter(v => v instanceof type);\r\n    }\r\n\r\n    /**\r\n     * 获取指定编号资源\r\n     * \r\n     * @param id 资源编号\r\n     */\r\n    getAssetById(id: string)\r\n    {\r\n        return this._idMap[id];\r\n    }\r\n\r\n    /**\r\n     * 获取指定路径资源\r\n     * \r\n     * @param path 资源路径\r\n     */\r\n    getAssetByPath(path: string)\r\n    {\r\n        return this._pathMap[path];\r\n    }\r\n\r\n    /**\r\n     * 获取文件夹内子文件路径列表\r\n     * \r\n     * @param path 路径\r\n     */\r\n    getChildrenPathsByPath(path: string)\r\n    {\r\n        var paths = this.getAllPaths();\r\n        var childrenPaths = paths.filter(v =>\r\n        {\r\n            return pathUtils.dirname(v) == path;\r\n        });\r\n        return childrenPaths;\r\n    }\r\n\r\n    /**\r\n     * 获取文件夹内子文件列表\r\n     * \r\n     * @param path 文件夹路径\r\n     */\r\n    getChildrenAssetByPath(path: string)\r\n    {\r\n        var childrenPaths = this.getChildrenPathsByPath(path);\r\n\r\n        var children: FileAsset[] = childrenPaths.map(v => this.getAssetByPath(v));\r\n        return children;\r\n    }\r\n\r\n    /**\r\n     * 新增资源\r\n     * \r\n     * @param asset 资源\r\n     */\r\n    addAsset(asset: FileAsset)\r\n    {\r\n        this._idMap[asset.assetId] = asset;\r\n        this._pathMap[asset.assetPath] = asset;\r\n    }\r\n\r\n    /**\r\n     * 获取所有资源编号列表\r\n     */\r\n    getAllIds()\r\n    {\r\n        return Object.keys(this._idMap);\r\n    }\r\n\r\n    /**\r\n     * 获取所有资源路径列表\r\n     */\r\n    getAllPaths()\r\n    {\r\n        return Object.keys(this._pathMap);\r\n    }\r\n\r\n    /**\r\n     * 获取所有资源\r\n     */\r\n    getAllAssets()\r\n    {\r\n        var assets = this.getAllIds().map(v => this.getAssetById(v));\r\n        return assets;\r\n    }\r\n\r\n    /**\r\n     * 删除指定编号的资源\r\n     * \r\n     * @param id 资源编号\r\n     */\r\n    deleteAssetById(id: string)\r\n    {\r\n        this.deleteAsset0(this.getAssetById(id));\r\n    }\r\n\r\n    /**\r\n     * 删除指定路径的资源\r\n     * \r\n     * @param path 资源路径\r\n     */\r\n    deleteAssetByPath(path: string)\r\n    {\r\n        this.deleteAsset0(this._pathMap[path]);\r\n    }\r\n\r\n    /**\r\n     * 删除资源\r\n     * \r\n     * @param asset 资源\r\n     */\r\n    deleteAsset0(asset: FileAsset)\r\n    {\r\n        delete this._idMap[asset.assetId];\r\n        delete this._pathMap[asset.assetPath];\r\n    }\r\n\r\n    /**\r\n     * 获取需要反序列化对象中的资源id列表\r\n     */\r\n    getAssetsWithObject(object: any, assetids: string[] = [])\r\n    {\r\n        if (Object.isBaseType(object)) return [];\r\n        //\r\n        if (AssetData.isAssetData(object)) assetids.push(object.assetId);\r\n        //\r\n        if (Object.isObject(object) || Array.isArray(object))\r\n        {\r\n            var keys = Object.keys(object);\r\n            keys.forEach(k =>\r\n            {\r\n                this.getAssetsWithObject(object[k], assetids);\r\n            });\r\n        }\r\n        return assetids;\r\n    }\r\n\r\n    /**\r\n     * 反序列化包含资源的对象\r\n     * \r\n     * @param object 反序列化的对象\r\n     * @param callback 完成回调\r\n     */\r\n    deserializeWithAssets(object: any, callback: (result: any) => void)\r\n    {\r\n        // 获取所包含的资源列表\r\n        var assetids = this.getAssetsWithObject(object);\r\n        // 不需要加载本资源，移除自身资源\r\n        Array.delete(assetids, object.assetId);\r\n        // 加载包含的资源数据\r\n        this.readAssetDatas(assetids, (err, result) =>\r\n        {\r\n            // 创建资源数据实例\r\n            var assetData = classUtils.getInstanceByName(object[__class__]);\r\n            //默认反序列\r\n            serialization.setValue(assetData, object);\r\n            callback(assetData);\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * 默认资源系统\r\n */\r\nexport const rs = new ReadRS();\r\n","import { ReadWriteFS } from \"@feng3d/filesystem\";\r\nimport { gPartial } from \"@feng3d/polyfill\";\r\nimport { serialization } from \"@feng3d/serialization\";\r\nimport { AssetData } from \"../../core/AssetData\";\r\nimport { ticker } from \"../../utils/Ticker\";\r\nimport { FileAsset } from \"../FileAsset\";\r\nimport { FolderAsset } from \"../FolderAsset\";\r\nimport { ReadRS } from \"./ReadRS\";\r\n\r\n/**\r\n * 可读写资源系统\r\n */\r\nexport class ReadWriteRS extends ReadRS\r\n{\r\n    /**\r\n     * 文件系统\r\n     */\r\n    get fs() { return this._fs; }\r\n    protected _fs: ReadWriteFS;\r\n\r\n    /**\r\n     * 延迟保存执行函数\r\n     */\r\n    private laterSaveFunc = (interval: number) => { this.save(); };\r\n    /**\r\n     * 延迟保存，避免多次操作时频繁调用保存\r\n     */\r\n    private laterSave = () => { ticker.nextframe(this.laterSaveFunc, this); };\r\n\r\n    /**\r\n     * 构建可读写资源系统\r\n     * \r\n     * @param fs 可读写文件系统\r\n     */\r\n    constructor(fs?: ReadWriteFS)\r\n    {\r\n        super(fs);\r\n    }\r\n\r\n    /**\r\n     * 在更改资源结构（新增，移动，删除）时会自动保存\r\n     * \r\n     * @param callback 完成回调\r\n     */\r\n    private save(callback?: (err: Error) => void)\r\n    {\r\n        var allAssets = this.getAllAssets();\r\n        var object = serialization.serialize(allAssets);\r\n        this.fs.writeObject(this.resources, object, callback)\r\n    }\r\n\r\n    /**\r\n     * 新建资源\r\n     * \r\n     * @param cls 资源类定义\r\n     * @param fileName 文件名称\r\n     * @param value 初始数据\r\n     * @param parent 所在文件夹，如果值为null时默认添加到根文件夹中\r\n     * @param callback 完成回调函数\r\n     */\r\n    createAsset<T extends FileAsset>(cls: new () => T, fileName?: string, value?: gPartial<T>, parent?: FolderAsset, callback?: (err: Error, asset: T) => void)\r\n    {\r\n        // 新建资源\r\n        super.createAsset(cls, fileName, value, parent, (err, asset) =>\r\n        {\r\n            if (asset)\r\n            {\r\n                // 保存资源\r\n                this.writeAsset(asset, (err) =>\r\n                {\r\n                    callback && callback(err, asset);\r\n\r\n                    // 保存资源库\r\n                    this.laterSave();\r\n                });\r\n            } else\r\n            {\r\n                callback && callback(err, null);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 写（保存）资源\r\n     * \r\n     * @param asset 资源对象\r\n     * @param callback 完成回调\r\n     */\r\n    writeAsset(asset: FileAsset, callback?: (err: Error) => void)\r\n    {\r\n        asset.write(callback);\r\n    }\r\n\r\n    /**\r\n     * 移动资源到指定文件夹\r\n     * \r\n     * @param asset 被移动资源\r\n     * @param folder 目标文件夹\r\n     * @param callback 完成回调\r\n     */\r\n    moveAsset(asset: FileAsset, folder: FolderAsset, callback?: (err: Error) => void)\r\n    {\r\n        var filename = asset.fileName + asset.extenson\r\n\r\n        var cnames = folder.childrenAssets.map(v => v.fileName + v.extenson);\r\n        if (cnames.indexOf(filename) != -1)\r\n        {\r\n            callback && callback(new Error(`目标文件夹中存在同名文件（夹），无法移动`));\r\n            return;\r\n        }\r\n        var fp = folder;\r\n        while (fp)\r\n        {\r\n            if (fp == <any>asset)\r\n            {\r\n                callback && callback(new Error(`无法移动达到子文件夹中`));\r\n                return;\r\n            }\r\n            fp = fp.parentAsset;\r\n        }\r\n\r\n        // 获取需要移动的资源列表\r\n        var assets = [asset];\r\n        var index = 0;\r\n        while (index < assets.length)\r\n        {\r\n            var ca = assets[index];\r\n            if (ca instanceof FolderAsset)\r\n            {\r\n                assets = assets.concat(ca.childrenAssets);\r\n            }\r\n            index++;\r\n        }\r\n\r\n        // 最后根据 parentAsset 修复 childrenAssets\r\n        var copyassets = assets.concat();\r\n\r\n        // 移动最后一个资源\r\n        var moveLastAsset = () =>\r\n        {\r\n            if (assets.length == 0)\r\n            {\r\n                callback && callback(null);\r\n                // 保存资源库\r\n                this.laterSave();\r\n                return;\r\n            }\r\n            var la = assets.pop();\r\n            // 读取资源\r\n            this.readAsset(la.assetId, (err, a) =>\r\n            {\r\n                if (err)\r\n                {\r\n                    callback && callback(err);\r\n                    return;\r\n                }\r\n                // 从原路径上删除资源\r\n                this.deleteAsset(la, (err) =>\r\n                {\r\n                    if (err)\r\n                    {\r\n                        callback && callback(err);\r\n                        return;\r\n                    }\r\n                    // 计算资源新路径\r\n                    var np = la.fileName + la.extenson;\r\n                    var p = la.parentAsset;\r\n                    while (p)\r\n                    {\r\n                        np = p.fileName + \"/\" + np;\r\n                        p = p.parentAsset;\r\n                    }\r\n                    la.assetPath = np;\r\n                    // 新增映射\r\n                    this.addAsset(la);\r\n                    // 保存资源到新路径\r\n                    this.writeAsset(la, (err) =>\r\n                    {\r\n                        if (err)\r\n                        {\r\n                            callback && callback(err);\r\n                            return;\r\n                        }\r\n                        moveLastAsset();\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        moveLastAsset();\r\n    }\r\n\r\n    /**\r\n     * 删除资源\r\n     * \r\n     * @param asset 资源\r\n     * @param callback 完成回调\r\n     */\r\n    deleteAsset(asset: FileAsset, callback?: (err: Error) => void)\r\n    {\r\n        // 获取需要移动的资源列表\r\n        var assets = [asset];\r\n        var index = 0;\r\n        while (index < assets.length)\r\n        {\r\n            var ca = assets[index];\r\n            if (ca instanceof FolderAsset)\r\n            {\r\n                assets = assets.concat(ca.childrenAssets);\r\n            }\r\n            index++;\r\n        }\r\n\r\n        // 删除最后一个资源\r\n        var deleteLastAsset = () =>\r\n        {\r\n            if (assets.length == 0)\r\n            {\r\n                callback && callback(null);\r\n                // 保存资源库\r\n                this.laterSave();\r\n                return;\r\n            }\r\n            var la = assets.pop();\r\n\r\n            la.delete(() =>\r\n            {\r\n                AssetData.deleteAssetData(la.data);\r\n                deleteLastAsset();\r\n            });\r\n        };\r\n        deleteLastAsset();\r\n    }\r\n}\r\n","import { Behaviour } from \"../component/Behaviour\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { AudioListener: AudioListener; }\r\n}\r\n\r\n/**\r\n * 声音监听器\r\n */\r\n@AddComponentMenu(\"Audio/AudioListener\")\r\n@RegisterComponent()\r\nexport class AudioListener extends Behaviour\r\n{\r\n    gain: GainNode;\r\n\r\n    @watch(\"_enabledChanged\")\r\n    enabled = true;\r\n\r\n    /**\r\n     * 音量\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"音量\" })\r\n    get volume()\r\n    {\r\n        return this._volume;\r\n    }\r\n    set volume(v)\r\n    {\r\n        this._volume = v;\r\n        this.gain.gain.setTargetAtTime(v, audioCtx.currentTime, 0.01);\r\n    }\r\n    private _volume = 1;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.gain = audioCtx.createGain();\r\n        this.gain.connect(audioCtx.destination);\r\n        this._enabledChanged();\r\n    }\r\n\r\n    init()\r\n    {\r\n        super.init();\r\n        this.on(\"scenetransformChanged\", this._onScenetransformChanged, this);\r\n        this._onScenetransformChanged();\r\n    }\r\n\r\n    private _onScenetransformChanged()\r\n    {\r\n        var localToWorldMatrix = this.node3d.localToWorldMatrix;\r\n        var position = localToWorldMatrix.getPosition();\r\n        var forward = localToWorldMatrix.getAxisZ();\r\n        var up = localToWorldMatrix.getAxisY();\r\n        //\r\n        var listener = audioCtx.listener;\r\n        // feng3d中为左手坐标系，listener中使用的为右手坐标系，参考https://developer.mozilla.org/en-US/docs/Web/API/AudioListener\r\n        if (listener.forwardX)\r\n        {\r\n            listener.positionX.setValueAtTime(position.x, audioCtx.currentTime);\r\n            listener.positionY.setValueAtTime(position.y, audioCtx.currentTime);\r\n            listener.positionZ.setValueAtTime(-position.z, audioCtx.currentTime);\r\n            listener.forwardX.setValueAtTime(forward.x, audioCtx.currentTime);\r\n            listener.forwardY.setValueAtTime(forward.y, audioCtx.currentTime);\r\n            listener.forwardZ.setValueAtTime(-forward.z, audioCtx.currentTime);\r\n            listener.upX.setValueAtTime(up.x, audioCtx.currentTime);\r\n            listener.upY.setValueAtTime(up.y, audioCtx.currentTime);\r\n            listener.upZ.setValueAtTime(-up.z, audioCtx.currentTime);\r\n        } else\r\n        {\r\n            listener.setOrientation(forward.x, forward.y, -forward.z, up.x, up.y, -up.z);\r\n            listener.setPosition(position.x, position.y, -position.z);\r\n        }\r\n    }\r\n\r\n    private _enabledChanged()\r\n    {\r\n        if (!this.gain) return;\r\n        if (this.enabled)\r\n        {\r\n            globalGain.connect(this.gain);\r\n        } else\r\n        {\r\n            globalGain.disconnect(this.gain);\r\n        }\r\n    }\r\n\r\n    dispose()\r\n    {\r\n        this.off(\"scenetransformChanged\", this._onScenetransformChanged, this);\r\n        super.dispose();\r\n    }\r\n}\r\n\r\nexport const audioCtx = new AudioContext();\r\n\r\nexport const globalGain = audioCtx.createGain();\r\n// 新增无音Gain，避免没有AudioListener组件时暂停声音播放进度\r\nvar zeroGain = audioCtx.createGain();\r\nzeroGain.connect(audioCtx.destination);\r\nglobalGain.connect(zeroGain);\r\nzeroGain.gain.setTargetAtTime(0, audioCtx.currentTime, 0.01);\r\n//\r\nvar listener = audioCtx.listener;\r\naudioCtx.createGain();\r\nif (listener.forwardX)\r\n{\r\n    listener.forwardX.value = 0;\r\n    listener.forwardY.value = 0;\r\n    listener.forwardZ.value = -1;\r\n    listener.upX.value = 0;\r\n    listener.upY.value = 1;\r\n    listener.upZ.value = 0;\r\n} else\r\n{\r\n    listener.setOrientation(0, 0, -1, 0, 1, 0);\r\n}","import { fs } from \"@feng3d/filesystem\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { Behaviour } from \"../component/Behaviour\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { audioCtx, globalGain } from \"./AudioListener\";\r\n\r\n/**\r\n * 音量与距离算法\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/PannerNode/distanceModel\r\n * @see https://mdn.github.io/webaudio-examples/panner-node/\r\n * @see https://github.com/mdn/webaudio-examples\r\n */\r\nexport enum DistanceModelType\r\n{\r\n    /**\r\n     * 1 - rolloffFactor * (distance - refDistance) / (maxDistance - refDistance)\r\n     */\r\n    linear = \"linear\",\r\n    /**\r\n     * refDistance / (refDistance + rolloffFactor * (distance - refDistance))\r\n     */\r\n    inverse = \"inverse\",\r\n    /**\r\n     * pow(distance / refDistance, -rolloffFactor)\r\n     */\r\n    exponential = \"exponential\",\r\n}\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { AudioSource: AudioSource; }\r\n}\r\n\r\n/**\r\n * 声源\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\r\n */\r\n@AddComponentMenu(\"Audio/AudioSource\")\r\n@RegisterComponent()\r\nexport class AudioSource extends Behaviour\r\n{\r\n    private panner: PannerNode;\r\n    private source: AudioBufferSourceNode;\r\n    private buffer: AudioBuffer;\r\n    private gain: GainNode;\r\n\r\n    @watch(\"_enabledChanged\")\r\n    enabled = true;\r\n\r\n    /**\r\n     * 声音文件路径\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVPick\", tooltip: \"声音文件路径\", componentParam: { accepttype: \"audio\" } })\r\n    @watch(\"_onUrlChanged\")\r\n    url = \"\";\r\n\r\n    /**\r\n     * 是否循环播放\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"是否循环播放\" })\r\n    get loop()\r\n    {\r\n        return this._loop;\r\n    }\r\n    set loop(v)\r\n    {\r\n        this._loop = v;\r\n        if (this.source) this.source.loop = v;\r\n    }\r\n    private _loop = true;\r\n\r\n    /**\r\n     * 音量\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"音量\" })\r\n    get volume()\r\n    {\r\n        return this._volume;\r\n    }\r\n    set volume(v)\r\n    {\r\n        this._volume = v;\r\n        this.gain.gain.setTargetAtTime(v, audioCtx.currentTime, 0.01);\r\n    }\r\n    private _volume: number;\r\n\r\n    /**\r\n     * 是否启用位置影响声音\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"是否启用位置影响声音\" })\r\n    get enablePosition()\r\n    {\r\n        return this._enablePosition;\r\n    }\r\n    set enablePosition(v)\r\n    {\r\n        this._disconnect();\r\n        this._enablePosition = v;\r\n        this._connect();\r\n    }\r\n    private _enablePosition = true;;\r\n\r\n    // @serialize\r\n    // @oav()\r\n    get coneInnerAngle()\r\n    {\r\n        return this._coneInnerAngle;\r\n    }\r\n    set coneInnerAngle(v)\r\n    {\r\n        this._coneInnerAngle = v;\r\n        this.panner.coneInnerAngle = v;\r\n    }\r\n    private _coneInnerAngle: number;\r\n\r\n    // @serialize\r\n    // @oav()\r\n    get coneOuterAngle()\r\n    {\r\n        return this._coneOuterAngle;\r\n    }\r\n    set coneOuterAngle(v)\r\n    {\r\n        this._coneOuterAngle = v;\r\n        this.panner.coneOuterAngle = v;\r\n    }\r\n    private _coneOuterAngle: number;\r\n\r\n    // @serialize\r\n    // @oav()\r\n    get coneOuterGain()\r\n    {\r\n        return this._coneOuterGain;\r\n    }\r\n    set coneOuterGain(v)\r\n    {\r\n        this._coneOuterGain = v;\r\n        this.panner.coneOuterGain = v;\r\n    }\r\n    private _coneOuterGain: number;\r\n\r\n    /**\r\n     * 该接口的distanceModel属性PannerNode是一个枚举值，用于确定在音频源离开收听者时用于减少音频源音量的算法。\r\n     * \r\n     * 可能的值是：\r\n     * * linear：根据以下公式计算由距离引起的增益的线性距离模型：\r\n     *      1 - rolloffFactor * (distance - refDistance) / (maxDistance - refDistance)\r\n     * * inverse：根据以下公式计算由距离引起的增益的反距离模型：\r\n     *      refDistance / (refDistance + rolloffFactor * (distance - refDistance))\r\n     * * exponential：按照下式计算由距离引起的增益的指数距离模型\r\n     *      pow(distance / refDistance, -rolloffFactor)。\r\n     * \r\n     * inverse是的默认值distanceModel。\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVEnum\", tooltip: \"距离模式，距离影响声音的方式\", componentParam: { enumClass: DistanceModelType } })\r\n    get distanceModel()\r\n    {\r\n        return this._distanceModel;\r\n    }\r\n    set distanceModel(v)\r\n    {\r\n        this._distanceModel = v;\r\n        this.panner.distanceModel = v;\r\n    }\r\n    private _distanceModel: DistanceModelType;\r\n\r\n    /**\r\n     * 表示音频源和收听者之间的最大距离，之后音量不会再降低。该值仅由linear距离模型使用。默认值是10000。\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"表示音频源和收听者之间的最大距离，之后音量不会再降低。该值仅由linear距离模型使用。默认值是10000。\" })\r\n    get maxDistance()\r\n    {\r\n        return this._maxDistance;\r\n    }\r\n    set maxDistance(v)\r\n    {\r\n        this._maxDistance = v;\r\n        this.panner.maxDistance = v;\r\n    }\r\n    private _maxDistance: number;\r\n\r\n    // @serialize\r\n    // @oav()\r\n    get panningModel()\r\n    {\r\n        return this._panningModel;\r\n    }\r\n    set panningModel(v)\r\n    {\r\n        this._panningModel = v;\r\n        this.panner.panningModel = v;\r\n    }\r\n    private _panningModel: PanningModelType;\r\n\r\n    /**\r\n     * 表示随着音频源远离收听者而减小音量的参考距离。此值由所有距离模型使用。默认值是1。\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"表示随着音频源远离收听者而减小音量的参考距离。此值由所有距离模型使用。默认值是1。\" })\r\n    get refDistance()\r\n    {\r\n        return this._refDistance;\r\n    }\r\n    set refDistance(v)\r\n    {\r\n        this._refDistance = v;\r\n        this.panner.refDistance = v;\r\n    }\r\n    private _refDistance: number;\r\n\r\n    /**\r\n     * 描述了音源离开收听者音量降低的速度。此值由所有距离模型使用。默认值是1。\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"描述了音源离开收听者音量降低的速度。此值由所有距离模型使用。默认值是1。\" })\r\n    get rolloffFactor()\r\n    {\r\n        return this._rolloffFactor;\r\n    }\r\n    set rolloffFactor(v)\r\n    {\r\n        this._rolloffFactor = v;\r\n        this.panner.rolloffFactor = v;\r\n    }\r\n    private _rolloffFactor: number;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.panner = createPanner();\r\n        this.panningModel = 'HRTF';\r\n        this.distanceModel = DistanceModelType.inverse;\r\n        this.refDistance = 1;\r\n        this.maxDistance = 10000;\r\n        this.rolloffFactor = 1;\r\n        this.coneInnerAngle = 360;\r\n        this.coneOuterAngle = 0;\r\n        this.coneOuterGain = 0;\r\n        //\r\n        this.gain = audioCtx.createGain();\r\n        this.volume = 1;\r\n        //\r\n        this._enabledChanged()\r\n        this._connect();\r\n    }\r\n\r\n    init()\r\n    {\r\n        super.init();\r\n        this.on(\"scenetransformChanged\", this._onScenetransformChanged, this);\r\n    }\r\n\r\n    @oav()\r\n    play()\r\n    {\r\n        this.stop();\r\n        if (this.buffer)\r\n        {\r\n            this.source = audioCtx.createBufferSource();\r\n            this.source.buffer = this.buffer;\r\n            this._connect();\r\n            this.source.loop = this.loop;\r\n            this.source.start(0);\r\n        }\r\n    }\r\n\r\n    @oav()\r\n    stop()\r\n    {\r\n        if (this.source)\r\n        {\r\n            this.source.stop(0);\r\n            this._disconnect();\r\n            this.source = null;\r\n        }\r\n    }\r\n\r\n    private _onScenetransformChanged()\r\n    {\r\n        var localToWorldMatrix = this.node3d.localToWorldMatrix;\r\n        var scenePosition = localToWorldMatrix.getPosition();\r\n\r\n        //\r\n        var panner = this.panner;\r\n        // feng3d使用左手坐标系，panner使用右手坐标系，参考https://developer.mozilla.org/en-US/docs/Web/API/PannerNode\r\n        if (panner.orientationX)\r\n        {\r\n            panner.positionX.value = scenePosition.x;\r\n            panner.positionY.value = scenePosition.y;\r\n            panner.positionZ.value = -scenePosition.z;\r\n            panner.orientationX.value = 1;\r\n            panner.orientationY.value = 0;\r\n            panner.orientationZ.value = 0;\r\n        } else\r\n        {\r\n            panner.setPosition(scenePosition.x, scenePosition.y, -scenePosition.z);\r\n            panner.setOrientation(1, 0, 0);\r\n        }\r\n    }\r\n\r\n    private _onUrlChanged()\r\n    {\r\n        this.stop();\r\n        if (this.url)\r\n        {\r\n            var url = this.url;\r\n            fs.readArrayBuffer(this.url, (err, data) =>\r\n            {\r\n                if (err)\r\n                {\r\n                    console.warn(err);\r\n                    return;\r\n                }\r\n                if (url != this.url)\r\n                    return;\r\n                audioCtx.decodeAudioData(data, (buffer) =>\r\n                {\r\n                    this.buffer = buffer;\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    private _connect()\r\n    {\r\n        var arr = this._getAudioNodes();\r\n        for (let i = 0; i < arr.length - 1; i++)\r\n        {\r\n            arr[i + 1].connect(arr[i]);\r\n        }\r\n    }\r\n\r\n    private _disconnect()\r\n    {\r\n        var arr = this._getAudioNodes();\r\n        for (let i = 0; i < arr.length - 1; i++)\r\n        {\r\n            arr[i + 1].disconnect(arr[i]);\r\n        }\r\n    }\r\n\r\n    private _getAudioNodes()\r\n    {\r\n        var arr: AudioNode[] = [];\r\n        arr.push(this.gain);\r\n        if (this._enablePosition)\r\n            arr.push(this.panner);\r\n        if (this.source)\r\n            arr.push(this.source);\r\n        return arr;\r\n    }\r\n\r\n    private _enabledChanged()\r\n    {\r\n        if (!this.gain)\r\n            return;\r\n        if (this.enabled)\r\n            this.gain.connect(globalGain);\r\n        else\r\n            this.gain.disconnect(globalGain);\r\n    }\r\n\r\n    dispose()\r\n    {\r\n        this.off(\"scenetransformChanged\", this._onScenetransformChanged, this);\r\n        this._disconnect();\r\n        super.dispose();\r\n    }\r\n}\r\n\r\nfunction createPanner()\r\n{\r\n    var panner = this.panner = audioCtx.createPanner();\r\n\r\n    if (panner.orientationX)\r\n    {\r\n        panner.orientationX.value = 1;\r\n        panner.orientationY.value = 0;\r\n        panner.orientationZ.value = 0;\r\n    } else\r\n    {\r\n        panner.setOrientation(1, 0, 0);\r\n    }\r\n    return panner;\r\n}\r\n\r\n","\r\n/**\r\n * 摄像机投影类型\r\n */\r\nexport enum Projection\r\n{\r\n    /**\r\n     * 透视投影\r\n     */\r\n    Perspective,\r\n    /**\r\n     * 正交投影\r\n     */\r\n    Orthographic,\r\n}\r\n","import { Matrix4x4, Ray3, Vector3, Vector4 } from \"@feng3d/math\";\r\nimport { Feng3dObject } from \"../../core/Feng3dObject\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Projection } from \"../Projection\";\r\n\r\n/**\r\n * 摄像机镜头\r\n * \r\n * 镜头主要作用是投影以及逆投影。\r\n * 投影指的是从摄像机空间可视区域内的坐标投影至GPU空间可视区域内的坐标。\r\n * \r\n * 摄像机可视区域：由近、远，上，下，左，右组成的四棱柱\r\n * GPU空间可视区域：立方体 [(-1, -1, -1), (1, 1, 1)]\r\n * \r\n */\r\nexport abstract class LensBase extends Feng3dObject\r\n{\r\n\t/**\r\n\t * 摄像机投影类型\r\n\t */\r\n\tget projectionType()\r\n\t{\r\n\t\treturn this._projectionType;\r\n\t}\r\n\tprotected _projectionType: Projection;\r\n\r\n\t/**\r\n\t * 最近距离\r\n\t */\r\n\t@serialize\r\n\t@oav()\r\n\t@watch(\"invalidate\")\r\n\tnear: number;\r\n\r\n\t/**\r\n\t * 最远距离\r\n\t */\r\n\t@watch(\"invalidate\")\r\n\t@serialize\r\n\t@oav()\r\n\tfar: number;\r\n\r\n\t/**\r\n\t * 视窗缩放比例(width/height)，在渲染器中设置\r\n\t */\r\n\t@watch(\"invalidate\")\r\n\taspect: number;\r\n\r\n\t/**\r\n\t * 创建一个摄像机镜头\r\n\t */\r\n\tconstructor(aspectRatio = 1, near = 0.3, far = 1000)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.aspect = aspectRatio;\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\t}\r\n\r\n\t/**\r\n\t * 投影矩阵\r\n\t */\r\n\tget matrix(): Matrix4x4\r\n\t{\r\n\t\tif (this._matrixInvalid)\r\n\t\t{\r\n\t\t\tthis._updateMatrix();\r\n\t\t\tthis._matrixInvalid = false;\r\n\t\t}\r\n\t\treturn this._matrix;\r\n\t}\r\n\r\n\t/**\r\n\t * 逆矩阵\r\n\t */\r\n\tget inverseMatrix(): Matrix4x4\r\n\t{\r\n\t\tif (this._invertMatrixInvalid)\r\n\t\t{\r\n\t\t\tthis._updateInverseMatrix();\r\n\t\t\tthis._invertMatrixInvalid = false;\r\n\t\t}\r\n\t\treturn this._inverseMatrix;\r\n\t}\r\n\r\n\t/**\r\n\t * 摄像机空间坐标投影到GPU空间坐标\r\n\t * @param point3d 摄像机空间坐标\r\n\t * @param v GPU空间坐标\r\n\t * @return GPU空间坐标\r\n\t */\r\n\tproject(point3d: Vector3, v = new Vector3()): Vector3\r\n\t{\r\n\t\tvar v4 = this.matrix.transformVector4(Vector4.fromVector3(point3d, 1));\r\n\t\tv4.toVector3(v);\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * GPU空间坐标投影到摄像机空间坐标\r\n\t * @param point3d GPU空间坐标\r\n\t * @param v 摄像机空间坐标（输出）\r\n\t * @returns 摄像机空间坐标\r\n\t */\r\n\tunproject(point3d: Vector3, v = new Vector3())\r\n\t{\r\n\t\tvar v4 = this.inverseMatrix.transformVector4(Vector4.fromVector3(point3d, 1));\r\n\t\tv4.toVector3(v);\r\n\t\treturn v;\r\n\t}\r\n\r\n\t/**\r\n\t * 逆投影求射线\r\n\t * \r\n\t * 通过GPU空间坐标x与y值求出摄像机空间坐标的射线\r\n\t * \r\n\t * @param x GPU空间坐标x值\r\n\t * @param y GPU空间坐标y值\r\n\t */\r\n\tunprojectRay(x: number, y: number, ray = new Ray3())\r\n\t{\r\n\t\tvar p0 = this.unproject(new Vector3(x, y, 0));\r\n\t\tvar p1 = this.unproject(new Vector3(x, y, 1));\r\n\t\t// 初始化射线\r\n\t\tray.fromPosAndDir(p0, p1.sub(p0));\r\n\t\t// 获取z==0的点\r\n\t\tvar sp = ray.getPointWithZ(0);\r\n\t\tray.origin = sp;\r\n\t\treturn ray;\r\n\t}\r\n\r\n\t/**\r\n\t * 指定深度逆投影\r\n\t * \r\n\t * 获取投影在指定GPU坐标且摄像机前方（深度）sZ处的点的3D坐标\r\n\t * \r\n\t * @param nX GPU空间坐标X\r\n\t * @param nY GPU空间坐标Y\r\n\t * @param sZ 到摄像机的距离\r\n\t * @param v 摄像机空间坐标（输出）\r\n\t * @return 摄像机空间坐标\r\n\t */\r\n\tunprojectWithDepth(nX: number, nY: number, sZ: number, v = new Vector3())\r\n\t{\r\n\t\treturn this.unprojectRay(nX, nY).getPointWithZ(sZ, v);\r\n\t}\r\n\r\n\t//\r\n\tprivate _inverseMatrix = new Matrix4x4();\r\n\tprivate _invertMatrixInvalid = true;\r\n\t//\r\n\tprotected _matrix = new Matrix4x4();\r\n\tprivate _matrixInvalid = true;\r\n\r\n\t/**\r\n\t * 投影矩阵失效\r\n\t */\r\n\tprotected invalidate()\r\n\t{\r\n\t\tconsole.assert(!isNaN(this.aspect));\r\n\r\n\t\tthis._matrixInvalid = true;\r\n\t\tthis._invertMatrixInvalid = true;\r\n\t\tthis.emit(\"lensChanged\", this);\r\n\t}\r\n\r\n\tprivate _updateInverseMatrix()\r\n\t{\r\n\t\tthis._inverseMatrix.copy(this.matrix);\r\n\t\tthis._inverseMatrix.invert();\r\n\t}\r\n\r\n\t/**\r\n\t * 更新投影矩阵\r\n\t */\r\n\tprotected abstract _updateMatrix(): void;\r\n\r\n\t/**\r\n\t * 克隆\r\n\t */\r\n\tabstract clone(): LensBase;\r\n}\r\n\r\n","import { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Projection } from \"../Projection\";\r\nimport { LensBase } from \"./LensBase\";\r\n\r\n/**\r\n * 正射投影镜头\r\n */\r\nexport class OrthographicLens extends LensBase\r\n{\r\n    /**\r\n     * 尺寸\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidate\")\r\n    size: number;\r\n\r\n    /**\r\n     * 构建正射投影镜头\r\n     * @param size 尺寸\r\n     */\r\n    constructor(size = 1, aspect = 1, near = 0.3, far = 1000)\r\n    {\r\n        super(aspect, near, far);\r\n        this._projectionType = Projection.Orthographic;\r\n        this.size = size;\r\n    }\r\n\r\n    protected _updateMatrix()\r\n    {\r\n        this._matrix.setOrtho(-this.size, this.size, this.size, -this.size, this.near, this.far);\r\n    }\r\n\r\n    clone()\r\n    {\r\n        return new OrthographicLens(this.size, this.aspect, this.near, this.far);\r\n    }\r\n}\r\n","import { Vector3, Vector4 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Projection } from \"../Projection\";\r\nimport { LensBase } from \"./LensBase\";\r\n\r\n\r\n/**\r\n * 透视摄像机镜头\r\n */\r\nexport class PerspectiveLens extends LensBase\r\n{\r\n    /**\r\n     * 垂直视角，视锥体顶面和底面间的夹角；单位为角度，取值范围 [1,179]\r\n     */\r\n    @watch(\"invalidate\")\r\n    @serialize\r\n    @oav()\r\n    fov: number;\r\n\r\n    /**\r\n     * 创建一个透视摄像机镜头\r\n     * @param fov 垂直视角，视锥体顶面和底面间的夹角；单位为角度，取值范围 [1,179]\r\n     * \r\n     */\r\n    constructor(fov = 60, aspect = 1, near = 0.3, far = 1000)\r\n    {\r\n        super(aspect, near, far);\r\n        this._projectionType = Projection.Perspective;\r\n        this.fov = fov;\r\n    }\r\n\r\n    /**\r\n     * 焦距\r\n     */\r\n    get focalLength(): number\r\n    {\r\n        return 1 / Math.tan(this.fov * Math.PI / 360);\r\n    }\r\n\r\n    set focalLength(value: number)\r\n    {\r\n        this.fov = Math.atan(1 / value) * 360 / Math.PI;\r\n    }\r\n\r\n    /**\r\n     * 投影\r\n     * \r\n     * 摄像机空间坐标投影到GPU空间坐标\r\n     * \r\n     * @param point3d 摄像机空间坐标\r\n     * @param v GPU空间坐标\r\n     * @return GPU空间坐标\r\n     */\r\n    project(point3d: Vector3, v = new Vector3()): Vector3\r\n    {\r\n        var v4 = this.matrix.transformVector4(Vector4.fromVector3(point3d, 1));\r\n        // 透视投影结果中w!=1，需要标准化齐次坐标\r\n        v4.scale(1 / v4.w);\r\n        v4.toVector3(v);\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 逆投影\r\n     * \r\n     * GPU空间坐标投影到摄像机空间坐标\r\n     * \r\n     * @param point3d GPU空间坐标\r\n     * @param v 摄像机空间坐标（输出）\r\n     * @returns 摄像机空间坐标\r\n     */\r\n    unproject(point3d: Vector3, v = new Vector3())\r\n    {\r\n        // ！！该计算过程需要参考或者研究透视投影矩阵\r\n        // 初始化齐次坐标\r\n        var p4 = Vector4.fromVector3(point3d, 1);\r\n        // 逆投影求出深度值\r\n        var v4 = this.inverseMatrix.transformVector4(p4);\r\n        var sZ = 1 / v4.w;\r\n        // 齐次坐标乘以深度值获取真实的投影结果\r\n        var p44 = p4.scaleTo(sZ);\r\n        // 计算逆投影\r\n        var v44 = this.inverseMatrix.transformVector4(p44);\r\n        // 输出3维坐标\r\n        v44.toVector3(v);\r\n        return v;\r\n    }\r\n\r\n    protected _updateMatrix()\r\n    {\r\n        this._matrix.setPerspectiveFromFOV(this.fov, this.aspect, this.near, this.far);\r\n    }\r\n\r\n    clone()\r\n    {\r\n        return new PerspectiveLens(this.fov, this.aspect, this.near, this.far);\r\n    }\r\n}\r\n\r\n","import { Box3, Frustum, Matrix4x4, Ray3, Vector2, Vector3 } from \"@feng3d/math\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { Component3D } from \"../component/Component3D\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialization, serialize } from \"@feng3d/serialization\";\r\nimport { LensBase } from \"./lenses/LensBase\";\r\nimport { OrthographicLens } from \"./lenses/OrthographicLens\";\r\nimport { PerspectiveLens } from \"./lenses/PerspectiveLens\";\r\nimport { Projection } from \"./Projection\";\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface EntityEventMap\r\n    {\r\n        lensChanged;\r\n    }\r\n    export interface PrimitiveEntity\r\n    {\r\n        Camera: Entity;\r\n    }\r\n}\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { Camera: Camera; }\r\n}\r\n\r\n/**\r\n * 摄像机\r\n */\r\n@AddComponentMenu(\"Rendering/Camera\")\r\n@RegisterComponent({ single: true })\r\nexport class Camera extends Component3D\r\n{\r\n    static create(name = \"Camera\")\r\n    {\r\n        var entity = new Entity();\r\n        entity.name = name;\r\n        var camera = entity.addComponent(Camera);\r\n        return camera;\r\n    }\r\n    __class__: \"feng3d.Camera\";\r\n\r\n    @oav({ component: \"OAVEnum\", componentParam: { enumClass: Projection } })\r\n    get projection()\r\n    {\r\n        return this.lens && this.lens.projectionType;\r\n    }\r\n    set projection(v)\r\n    {\r\n        var projectionType = this.projection;\r\n        if (projectionType == v) return;\r\n        //\r\n        var aspect = 1;\r\n        var near = 0.3;\r\n        var far = 1000;\r\n        if (this.lens)\r\n        {\r\n            aspect = this.lens.aspect;\r\n            near = this.lens.near;\r\n            far = this.lens.far;\r\n            serialization.setValue(this._backups, <any>this.lens);\r\n        }\r\n        var fov = this._backups ? this._backups.fov : 60;\r\n        var size = this._backups ? this._backups.size : 1;\r\n        if (v == Projection.Perspective)\r\n        {\r\n            this.lens = new PerspectiveLens(fov, aspect, near, far);\r\n        } else\r\n        {\r\n            this.lens = new OrthographicLens(size, aspect, near, far);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 镜头\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVObjectView\" })\r\n    get lens()\r\n    {\r\n        return this._lens;\r\n    }\r\n    set lens(v)\r\n    {\r\n        if (this._lens == v) return;\r\n\r\n        if (this._lens)\r\n        {\r\n            this._lens.off(\"lensChanged\", this.invalidateViewProjection, this);\r\n        }\r\n        this._lens = v;\r\n        if (this._lens)\r\n        {\r\n            this._lens.on(\"lensChanged\", this.invalidateViewProjection, this);\r\n        }\r\n\r\n        this.invalidateViewProjection();\r\n\r\n        this.emit(\"refreshView\");\r\n        this.emit(\"lensChanged\");\r\n    }\r\n    private _lens: LensBase;\r\n\r\n    /**\r\n     * 场景投影矩阵，世界空间转投影空间\r\n     */\r\n    get viewProjection(): Matrix4x4\r\n    {\r\n        if (this._viewProjectionInvalid)\r\n        {\r\n            //场景空间转摄像机空间\r\n            this._viewProjection.copy(this.node3d.worldToLocalMatrix);\r\n            //+摄像机空间转投影空间 = 场景空间转投影空间\r\n            this._viewProjection.append(this.lens.matrix);\r\n            this._viewProjectionInvalid = false;\r\n        }\r\n\r\n        return this._viewProjection;\r\n    }\r\n\r\n    /**\r\n     * 获取摄像机的截头锥体\r\n     */\r\n    get frustum()\r\n    {\r\n        if (this._frustumInvalid)\r\n        {\r\n            this._frustum.fromMatrix(this.viewProjection);\r\n            this._frustumInvalid = false;\r\n        }\r\n        return this._frustum;\r\n    }\r\n\r\n    /**\r\n     * 创建一个摄像机\r\n     */\r\n    init()\r\n    {\r\n        super.init();\r\n        this.lens = this.lens || new PerspectiveLens();\r\n        //\r\n        this.on(\"scenetransformChanged\", this.invalidateViewProjection, this);\r\n        this.invalidateViewProjection();\r\n    }\r\n\r\n    /**\r\n     * 获取与坐标重叠的射线\r\n     * @param x view3D上的X坐标\r\n     * @param y view3D上的X坐标\r\n     * @return\r\n     */\r\n    getRay3D(x: number, y: number, ray3D = new Ray3()): Ray3\r\n    {\r\n        return this.lens.unprojectRay(x, y, ray3D).applyMatri4x4(this.node3d.localToWorldMatrix);\r\n    }\r\n\r\n    /**\r\n     * 投影坐标（世界坐标转换为3D视图坐标）\r\n     * @param point3d 世界坐标\r\n     * @return 屏幕的绝对坐标\r\n     */\r\n    project(point3d: Vector3): Vector3\r\n    {\r\n        var v: Vector3 = this.lens.project(this.node3d.worldToLocalMatrix.transformPoint3(point3d));\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 屏幕坐标投影到场景坐标\r\n     * @param nX 屏幕坐标X ([0-width])\r\n     * @param nY 屏幕坐标Y ([0-height])\r\n     * @param sZ 到屏幕的距离\r\n     * @param v 场景坐标（输出）\r\n     * @return 场景坐标\r\n     */\r\n    unproject(sX: number, sY: number, sZ: number, v = new Vector3()): Vector3\r\n    {\r\n        return this.node3d.localToWorldMatrix.transformPoint3(this.lens.unprojectWithDepth(sX, sY, sZ, v), v);\r\n    }\r\n\r\n    /**\r\n     * 获取摄像机能够在指定深度处的视野；镜头在指定深度的尺寸。\r\n     * \r\n     * @param   depth   深度\r\n     */\r\n    getScaleByDepth(depth: number, dir = new Vector2(0, 1))\r\n    {\r\n        var lt = this.unproject(- 0.5 * dir.x, - 0.5 * dir.y, depth);\r\n        var rb = this.unproject(+ 0.5 * dir.x, + 0.5 * dir.y, depth);\r\n        var scale = lt.subTo(rb).length;\r\n        return scale;\r\n    }\r\n\r\n    /**\r\n     * 处理场景变换改变事件\r\n     */\r\n    protected invalidateViewProjection()\r\n    {\r\n        this._viewProjectionInvalid = true;\r\n        this._frustumInvalid = true;\r\n    }\r\n\r\n    //\r\n    private _viewProjection: Matrix4x4 = new Matrix4x4();\r\n    private _viewProjectionInvalid = true;\r\n    private _backups = { fov: 60, size: 1 };\r\n    private _frustum = new Frustum()\r\n    private _frustumInvalid = true;\r\n\r\n}\r\n// 投影后可视区域\r\nvar visibleBox = new Box3(new Vector3(-1, -1, -1), new Vector3(1, 1, 1));\r\n\r\nEntity.registerPrimitive(\"Camera\", (g) =>\r\n{\r\n    g.addComponent(Camera);\r\n});\r\n\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { RegisterComponent } from \"./Component\";\r\nimport { Component3D } from \"./Component3D\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { BillboardComponent: BillboardComponent; }\r\n}\r\n\r\n@AddComponentMenu(\"Layout/BillboardComponent\")\r\n@RegisterComponent()\r\nexport class BillboardComponent extends Component3D\r\n{\r\n    __class__: \"feng3d.BillboardComponent\";\r\n\r\n    /**\r\n     * 相机\r\n     */\r\n    @oav()\r\n    @watch(\"_onCameraChanged\")\r\n    camera: Camera;\r\n\r\n    init()\r\n    {\r\n        super.init();\r\n        this.node3d.on(\"updateLocalToWorldMatrix\", this._onUpdateLocalToWorldMatrix, this);\r\n        this._invalidHoldSizeMatrix();\r\n    }\r\n\r\n    private _onCameraChanged(property: string, oldValue: Camera, value: Camera)\r\n    {\r\n        if (oldValue) oldValue.off(\"scenetransformChanged\", this._invalidHoldSizeMatrix, this);\r\n        if (value) value.on(\"scenetransformChanged\", this._invalidHoldSizeMatrix, this);\r\n        this._invalidHoldSizeMatrix();\r\n    }\r\n\r\n    private _invalidHoldSizeMatrix()\r\n    {\r\n        if (this._entity) this.node3d[\"_invalidateSceneTransform\"]();\r\n    }\r\n\r\n    private _onUpdateLocalToWorldMatrix()\r\n    {\r\n        var _localToWorldMatrix = this.node3d[\"_localToWorldMatrix\"];\r\n        if (_localToWorldMatrix && this.camera)\r\n        {\r\n            var camera = this.camera;\r\n            var cameraPos = camera.node3d.worldPosition;\r\n            var yAxis = camera.node3d.localToWorldMatrix.getAxisY();\r\n            _localToWorldMatrix.lookAt(cameraPos, yAxis);\r\n        }\r\n    }\r\n\r\n    dispose()\r\n    {\r\n        this.camera = null;\r\n        this.node3d.off(\"updateLocalToWorldMatrix\", this._onUpdateLocalToWorldMatrix, this);\r\n        super.dispose();\r\n    }\r\n}\r\n","import { Color4, Vector4 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { RenderAtomic, Uniforms } from \"@feng3d/renderer\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { Component, RegisterComponent } from \"./Component\";\r\n\r\ndeclare module \"./Component\"\r\n{\r\n    export interface ComponentMap { CartoonComponent: CartoonComponent; }\r\n}\r\n\r\n/**\r\n * 参考\r\n */\r\n@AddComponentMenu(\"Rendering/CartoonComponent\")\r\n@RegisterComponent()\r\nexport class CartoonComponent extends Component\r\n{\r\n\r\n    __class__: \"feng3d.CartoonComponent\";\r\n\r\n    @oav()\r\n    @serialize\r\n    outlineSize = 1;\r\n\r\n    @oav()\r\n    @serialize\r\n    outlineColor = new Color4(0.2, 0.2, 0.2, 1.0);\r\n\r\n    @oav()\r\n    @serialize\r\n    outlineMorphFactor = 0.0;\r\n\r\n    /**\r\n     * 半兰伯特值diff，分段值 4个(0.0,1.0)\r\n     */\r\n    @oav()\r\n    @serialize\r\n    diffuseSegment = new Vector4(0.1, 0.3, 0.6, 1.0);\r\n    /**\r\n     * 半兰伯特值diff，替换分段值 4个(0.0,1.0)\r\n     */\r\n    @oav()\r\n    @serialize\r\n    diffuseSegmentValue = new Vector4(0.1, 0.3, 0.6, 1.0);\r\n\r\n    @oav()\r\n    @serialize\r\n    specularSegment = 0.5;\r\n\r\n    @oav()\r\n    @serialize\r\n    get cartoon_Anti_aliasing()\r\n    {\r\n        return this._cartoon_Anti_aliasing;\r\n    }\r\n    set cartoon_Anti_aliasing(value)\r\n    {\r\n        this._cartoon_Anti_aliasing = value;\r\n    }\r\n    _cartoon_Anti_aliasing = false;\r\n\r\n    beforeRender(renderAtomic: RenderAtomic, scene: Scene, camera: Camera)\r\n    {\r\n        renderAtomic.uniforms.u_diffuseSegment = this.diffuseSegment;\r\n        renderAtomic.uniforms.u_diffuseSegmentValue = this.diffuseSegmentValue;\r\n        renderAtomic.uniforms.u_specularSegment = this.specularSegment;\r\n        //\r\n        renderAtomic.uniforms.u_outlineSize = this.outlineSize;\r\n        renderAtomic.uniforms.u_outlineColor = this.outlineColor;\r\n        renderAtomic.uniforms.u_outlineMorphFactor = this.outlineMorphFactor;\r\n    }\r\n\r\n}\r\n\r\n\r\ndeclare module \"@feng3d/renderer\"\r\n{\r\n    export interface Uniforms\r\n    {\r\n        u_diffuseSegment: Vector4;\r\n        u_diffuseSegmentValue: Vector4;\r\n\r\n        u_specularSegment: number;\r\n    }\r\n}\r\n","import { dataTransform } from \"@feng3d/polyfill\";\r\nimport { Component } from \"./Component\";\r\n\r\n/**\r\n * Graphics 类包含一组可用来创建矢量形状的方法。\r\n */\r\nexport class Graphics extends Component \r\n{\r\n    __class__: \"feng3d.Graphics\";\r\n\r\n    private image: HTMLImageElement\r\n    private context2D: CanvasRenderingContext2D;\r\n    private canvas: HTMLCanvasElement;\r\n    private width: number;\r\n    private height: number;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.canvas.width = this.width;\r\n        this.canvas.height = this.height;\r\n        this.context2D = this.canvas.getContext('2d');\r\n\r\n        //\r\n        watchContext2D(this.context2D);\r\n    }\r\n\r\n    draw(width: number, height: number, callback: (context2D: CanvasRenderingContext2D) => void)\r\n    {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        var ctxt = canvas.getContext('2d');\r\n        callback(ctxt);\r\n        dataTransform.canvasToImage(canvas, \"png\", 1, (img) =>\r\n        {\r\n            this.image = img;\r\n        });\r\n        return this;\r\n    }\r\n}\r\n\r\nexport function watchContext2D(context2D: CanvasRenderingContext2D, watchFuncs = [\"rect\"])\r\n{\r\n    watchFuncs.forEach(v =>\r\n    {\r\n        var oldFunc = context2D[v];\r\n        context2D[v] = function (...args): void\r\n        {\r\n            oldFunc.apply(context2D, args);\r\n            // 标记更改\r\n            context2D[\"__changed\"] = true;\r\n        }\r\n    });\r\n}\r\n\r\n// var ctxts = [];\r\n// var num = 100;\r\n// for (var i = 0; i < num; i++)\r\n// {\r\n//     var canvas = document.createElement(\"canvas\");\r\n//     canvas.width = 100;\r\n//     canvas.height = 100;\r\n//     var ctxt = canvas.getContext('2d');\r\n//     ctxts.push(ctxt);\r\n// }","import { Camera } from \"../cameras/Camera\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { RegisterComponent } from \"./Component\";\r\nimport { Component3D } from \"./Component3D\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\nexport interface ComponentMap { HoldSizeComponent: HoldSizeComponent; }\r\n}\r\n\r\n@AddComponentMenu(\"Layout/HoldSizeComponent\")\r\n@RegisterComponent()\r\nexport class HoldSizeComponent extends Component3D\r\n{\r\n\r\n    __class__: \"feng3d.HoldSizeComponent\";\r\n\r\n    /**\r\n     * 保持缩放尺寸\r\n     */\r\n    @oav()\r\n    @watch(\"_invalidateSceneTransform\")\r\n    holdSize = 1;\r\n\r\n    /**\r\n     * 相机\r\n     */\r\n    @oav()\r\n    @watch(\"_onCameraChanged\")\r\n    camera: Camera;\r\n\r\n    init()\r\n    {\r\n        this.node3d.on(\"updateLocalToWorldMatrix\", this._onUpdateLocalToWorldMatrix, this);\r\n    }\r\n\r\n    dispose()\r\n    {\r\n        this.camera = null;\r\n        this.node3d.off(\"updateLocalToWorldMatrix\", this._onUpdateLocalToWorldMatrix, this);\r\n        super.dispose();\r\n    }\r\n\r\n    private _onCameraChanged(property: string, oldValue: Camera, value: Camera)\r\n    {\r\n        if (oldValue) oldValue.off(\"scenetransformChanged\", this._invalidateSceneTransform, this);\r\n        if (value) value.on(\"scenetransformChanged\", this._invalidateSceneTransform, this);\r\n        this._invalidateSceneTransform();\r\n    }\r\n\r\n    private _invalidateSceneTransform()\r\n    {\r\n        if (this._entity) this.node3d[\"_invalidateSceneTransform\"]();\r\n    }\r\n\r\n    private _onUpdateLocalToWorldMatrix()\r\n    {\r\n        var _localToWorldMatrix = this.node3d[\"_localToWorldMatrix\"];\r\n        if (this.holdSize && this.camera && _localToWorldMatrix)\r\n        {\r\n            var depthScale = this._getDepthScale(this.camera);\r\n            var vec = _localToWorldMatrix.toTRS();\r\n            vec[2].scaleNumber(depthScale * this.holdSize);\r\n            _localToWorldMatrix.fromTRS(vec[0], vec[1], vec[2]);\r\n\r\n            console.assert(!isNaN(_localToWorldMatrix.elements[0]));\r\n        }\r\n    }\r\n\r\n    private _getDepthScale(camera: Camera)\r\n    {\r\n        var cameraTranform = camera.node3d.localToWorldMatrix;\r\n        var distance = this.node3d.worldPosition.subTo(cameraTranform.getPosition());\r\n        if (distance.length == 0)\r\n            distance.x = 1;\r\n        var depth = distance.dot(cameraTranform.getAxisZ());\r\n        var scale = camera.getScaleByDepth(depth);\r\n        //限制在放大缩小100倍之间，否则容易出现矩阵不可逆问题\r\n        scale = Math.max(Math.min(100, scale), 0.01);\r\n        return scale;\r\n    }\r\n}\r\n","import { Color4 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { Component, RegisterComponent } from \"./Component\";\r\n\r\ndeclare module \"./Component\"\r\n{\r\n    export interface ComponentMap { OutLineComponent: OutLineComponent; }\r\n}\r\n\r\n@AddComponentMenu(\"Rendering/OutLineComponent\")\r\n@RegisterComponent()\r\nexport class OutLineComponent extends Component\r\n{\r\n    __class__: \"feng3d.OutLineComponent\";\r\n\r\n    @oav()\r\n    @serialize\r\n    size = 1;\r\n\r\n    @oav()\r\n    @serialize\r\n    color = new Color4(0.2, 0.2, 0.2, 1.0);\r\n\r\n    @oav()\r\n    @serialize\r\n    outlineMorphFactor = 0.0;\r\n\r\n    beforeRender(renderAtomic: RenderAtomic, scene: Scene, camera: Camera)\r\n    {\r\n        renderAtomic.uniforms.u_outlineSize = this.size;\r\n        renderAtomic.uniforms.u_outlineColor = this.color;\r\n        renderAtomic.uniforms.u_outlineMorphFactor = this.outlineMorphFactor;\r\n    }\r\n}\r\n\r\ndeclare module \"@feng3d/renderer\"\r\n{\r\n    export interface Uniforms\r\n    {\r\n        /**\r\n         * 描边宽度\r\n         */\r\n        u_outlineSize: number;\r\n        /**\r\n         * 描边颜色\r\n         */\r\n        u_outlineColor: Color4;\r\n        /**\r\n         * 描边形态因子\r\n         * (0.0，1.0):0.0表示延法线方向，1.0表示延顶点方向\r\n         */\r\n        u_outlineMorphFactor: number;\r\n    }\r\n}","import { Color4 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { RegisterComponent } from \"./Component\";\r\nimport { Component3D } from \"./Component3D\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { WireframeComponent: WireframeComponent; }\r\n}\r\n\r\n/**\r\n * 线框组件，将会对拥有该组件的对象绘制线框\r\n */\r\n@RegisterComponent()\r\nexport class WireframeComponent extends Component3D\r\n{\r\n\r\n    __class__: \"feng3d.WireframeComponent\";\r\n\r\n    @oav()\r\n    color = new Color4(125 / 255, 176 / 255, 250 / 255);\r\n}\r\n","import { Component3DEventMap } from \"../component/Component3D\";\r\nimport { Node3D } from \"../core/Node3D\";\r\n\r\nexport class ControllerBase\r\n{\r\n    /**\r\n     * 控制对象\r\n     */\r\n    protected _targetNode: Node3D<Component3DEventMap> | undefined;\r\n\r\n    /**\r\n     * 控制器基类，用于动态调整3D对象的属性\r\n     */\r\n    constructor(node3d?: Node3D)\r\n    {\r\n        this.targetNode = node3d;\r\n    }\r\n\r\n    /**\r\n     * 手动应用更新到目标3D对象\r\n     */\r\n    update(interpolate = true): void\r\n    {\r\n        throw new Error(\"Abstract method\");\r\n    }\r\n\r\n    get targetNode()\r\n    {\r\n        return this._targetNode;\r\n    }\r\n\r\n    set targetNode(val)\r\n    {\r\n        this._targetNode = val;\r\n    }\r\n}\r\n","import { Event } from \"@feng3d/event\";\r\nimport { Vector2, Vector3 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { windowEventProxy } from \"@feng3d/shortcut\";\r\nimport { Behaviour } from \"../component/Behaviour\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { RunEnvironment } from \"../core/RunEnvironment\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { FPSController: FPSController; }\r\n}\r\n/**\r\n * FPS模式控制器\r\n */\r\n@AddComponentMenu(\"Controller/FPSController\")\r\n@RegisterComponent()\r\nexport class FPSController extends Behaviour\r\n{\r\n    /**\r\n     * 加速度\r\n     */\r\n    @oav()\r\n    public acceleration = 0.001;\r\n\r\n    runEnvironment = RunEnvironment.feng3d;\r\n\r\n    /**\r\n     * 按键记录\r\n     */\r\n    private keyDownDic: { [key: string]: boolean };\r\n\r\n    /**\r\n     * 按键方向字典\r\n     */\r\n    private keyDirectionDic: { [key: string]: Vector3 };\r\n\r\n    /**\r\n     * 速度\r\n     */\r\n    private velocity: Vector3;\r\n\r\n    /**\r\n     * 上次鼠标位置\r\n     */\r\n    private preMousePoint: Vector2 | null;\r\n\r\n    private ischange = false;\r\n\r\n    private _auto: boolean;\r\n    get auto()\r\n    {\r\n        return this._auto;\r\n    }\r\n    set auto(value)\r\n    {\r\n        if (this._auto == value)\r\n            return;\r\n        if (this._auto)\r\n        {\r\n            windowEventProxy.off(\"mousedown\", this.onMousedown, this);\r\n            windowEventProxy.off(\"mouseup\", this.onMouseup, this);\r\n            this.onMouseup();\r\n        }\r\n        this._auto = value;\r\n        if (this._auto)\r\n        {\r\n            windowEventProxy.on(\"mousedown\", this.onMousedown, this);\r\n            windowEventProxy.on(\"mouseup\", this.onMouseup, this);\r\n        }\r\n    }\r\n\r\n    init()\r\n    {\r\n        super.init();\r\n\r\n        this.keyDirectionDic = {};\r\n        this.keyDirectionDic[\"a\"] = new Vector3(-1, 0, 0);//左\r\n        this.keyDirectionDic[\"d\"] = new Vector3(1, 0, 0);//右\r\n        this.keyDirectionDic[\"w\"] = new Vector3(0, 0, 1);//前\r\n        this.keyDirectionDic[\"s\"] = new Vector3(0, 0, -1);//后\r\n        this.keyDirectionDic[\"e\"] = new Vector3(0, 1, 0);//上\r\n        this.keyDirectionDic[\"q\"] = new Vector3(0, -1, 0);//下\r\n\r\n        this.keyDownDic = {};\r\n\r\n        this.auto = true;\r\n    }\r\n\r\n    onMousedown()\r\n    {\r\n        this.ischange = true;\r\n\r\n        this.preMousePoint = null;\r\n        this.mousePoint = null;\r\n        this.velocity = new Vector3();\r\n        this.keyDownDic = {};\r\n\r\n        windowEventProxy.on(\"keydown\", this.onKeydown, this);\r\n        windowEventProxy.on(\"keyup\", this.onKeyup, this);\r\n        windowEventProxy.on(\"mousemove\", this.onMouseMove, this);\r\n    }\r\n\r\n    onMouseup()\r\n    {\r\n        this.ischange = false;\r\n        this.preMousePoint = null;\r\n        this.mousePoint = null;\r\n\r\n        windowEventProxy.off(\"keydown\", this.onKeydown, this);\r\n        windowEventProxy.off(\"keyup\", this.onKeyup, this);\r\n        windowEventProxy.off(\"mousemove\", this.onMouseMove, this);\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    dispose()\r\n    {\r\n        this.auto = false;\r\n    }\r\n\r\n    /**\r\n     * 手动应用更新到目标3D对象\r\n     */\r\n    update(): void\r\n    {\r\n        if (!this.ischange)\r\n            return;\r\n\r\n        if (this.mousePoint && this.preMousePoint)\r\n        {\r\n            //计算旋转\r\n            var offsetPoint = this.mousePoint.subTo(this.preMousePoint)\r\n            offsetPoint.x *= 0.15;\r\n            offsetPoint.y *= 0.15;\r\n            // this.targetObject.node3d.rotate(Vector3.X_AXIS, offsetPoint.y, this.targetObject.node3d.position);\r\n            // this.targetObject.node3d.rotate(Vector3.Y_AXIS, offsetPoint.x, this.targetObject.node3d.position);\r\n\r\n            var matrix = this.node3d.localToWorldMatrix;\r\n            matrix.appendRotation(matrix.getAxisX(), offsetPoint.y, matrix.getPosition());\r\n            var up = Vector3.Y_AXIS.clone();\r\n            if (matrix.getAxisY().dot(up) < 0)\r\n            {\r\n                up.scaleNumber(-1);\r\n            }\r\n            matrix.appendRotation(up, offsetPoint.x, matrix.getPosition());\r\n            this.node3d.localToWorldMatrix = matrix;\r\n            //\r\n            this.preMousePoint = this.mousePoint;\r\n            this.mousePoint = null;\r\n        }\r\n\r\n        //计算加速度\r\n        var accelerationVec = new Vector3();\r\n        for (var key in this.keyDirectionDic)\r\n        {\r\n            if (this.keyDownDic[key] == true)\r\n            {\r\n                var element = this.keyDirectionDic[key];\r\n                accelerationVec.add(element);\r\n            }\r\n        }\r\n        accelerationVec.scaleNumber(this.acceleration);\r\n        //计算速度\r\n        this.velocity.add(accelerationVec);\r\n        var right = this.node3d.matrix.getAxisX();\r\n        var up = this.node3d.matrix.getAxisY();\r\n        var forward = this.node3d.matrix.getAxisZ();\r\n        right.scaleNumber(this.velocity.x);\r\n        up.scaleNumber(this.velocity.y);\r\n        forward.scaleNumber(this.velocity.z);\r\n        //计算位移\r\n        var displacement = right.clone();\r\n        displacement.add(up);\r\n        displacement.add(forward);\r\n        this.node3d.x += displacement.x;\r\n        this.node3d.y += displacement.y;\r\n        this.node3d.z += displacement.z;\r\n    }\r\n    private mousePoint: Vector2 | null;\r\n    /**\r\n     * 处理鼠标移动事件\r\n     */\r\n    private onMouseMove(event: Event<MouseEvent>)\r\n    {\r\n        this.mousePoint = new Vector2(event.data.clientX, event.data.clientY);\r\n\r\n        if (this.preMousePoint == null)\r\n        {\r\n            this.preMousePoint = this.mousePoint;\r\n            this.mousePoint = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 键盘按下事件\r\n     */\r\n    private onKeydown(event: Event<KeyboardEvent>): void\r\n    {\r\n        var boardKey = String.fromCharCode(event.data.keyCode).toLocaleLowerCase();\r\n        if (this.keyDirectionDic[boardKey] == null)\r\n            return;\r\n\r\n        if (!this.keyDownDic[boardKey])\r\n            this.stopDirectionVelocity(this.keyDirectionDic[boardKey]);\r\n        this.keyDownDic[boardKey] = true;\r\n    }\r\n\r\n    /**\r\n     * 键盘弹起事件\r\n     */\r\n    private onKeyup(event: Event<KeyboardEvent>): void\r\n    {\r\n        var boardKey = String.fromCharCode(event.data.keyCode).toLocaleLowerCase();\r\n        if (this.keyDirectionDic[boardKey] == null)\r\n            return;\r\n\r\n        this.keyDownDic[boardKey] = false;\r\n        this.stopDirectionVelocity(this.keyDirectionDic[boardKey]);\r\n    }\r\n\r\n    /**\r\n     * 停止xyz方向运动\r\n     * @param direction     停止运动的方向\r\n     */\r\n    private stopDirectionVelocity(direction: Vector3)\r\n    {\r\n        if (direction == null)\r\n            return;\r\n        if (direction.x != 0)\r\n        {\r\n            this.velocity.x = 0;\r\n        }\r\n        if (direction.y != 0)\r\n        {\r\n            this.velocity.y = 0;\r\n        }\r\n        if (direction.z != 0)\r\n        {\r\n            this.velocity.z = 0;\r\n        }\r\n    }\r\n}\r\n","import { Component3DEventMap } from \"../component/Component3D\";\r\nimport { Node3D } from \"../core/Node3D\";\r\nimport { Vector3 } from \"@feng3d/math\";\r\nimport { ControllerBase } from \"./ControllerBase\";\r\n\r\nexport class LookAtController extends ControllerBase\r\n{\r\n    protected _lookAtPosition: Vector3;\r\n    protected _lookAtNode3D: Node3D;\r\n    protected _origin: Vector3 = new Vector3(0.0, 0.0, 0.0);\r\n    protected _upAxis: Vector3 = Vector3.Y_AXIS;\r\n    protected _pos: Vector3 = new Vector3();\r\n\r\n    constructor(node3d?: Node3D, Node3D?: Node3D)\r\n    {\r\n        super(node3d);\r\n\r\n        if (Node3D)\r\n            this.lookAtObject = Node3D;\r\n        else\r\n            this.lookAtPosition = new Vector3();\r\n    }\r\n\r\n    get upAxis(): Vector3\r\n    {\r\n        return this._upAxis;\r\n    }\r\n\r\n    set upAxis(upAxis: Vector3)\r\n    {\r\n        this._upAxis = upAxis;\r\n    }\r\n\r\n    get lookAtPosition(): Vector3\r\n    {\r\n        return this._lookAtPosition;\r\n    }\r\n\r\n    set lookAtPosition(val: Vector3)\r\n    {\r\n        this._lookAtPosition = val;\r\n    }\r\n\r\n    get lookAtObject(): Node3D<Component3DEventMap>\r\n    {\r\n        return this._lookAtNode3D;\r\n    }\r\n\r\n    set lookAtObject(value)\r\n    {\r\n        if (this._lookAtNode3D == value)\r\n            return;\r\n\r\n        this._lookAtNode3D = value;\r\n    }\r\n\r\n    update(interpolate = true): void\r\n    {\r\n        if (this._targetNode)\r\n        {\r\n            if (this._lookAtPosition)\r\n            {\r\n                this._targetNode.lookAt(this.lookAtPosition, this._upAxis);\r\n            }\r\n            else if (this._lookAtNode3D)\r\n            {\r\n                this._pos = this._lookAtNode3D.getPosition();\r\n                this._targetNode.lookAt(this._pos, this._upAxis);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { mathUtil } from \"@feng3d/polyfill\";\r\nimport { Node3D } from \"../core/Node3D\";\r\nimport { LookAtController } from \"./LookAtController\";\r\n\r\nexport class HoverController extends LookAtController\r\n{\r\n    _currentPanAngle = 0;\r\n    _currentTiltAngle = 90;\r\n    private _panAngle = 0;\r\n    private _tiltAngle = 90;\r\n    private _distance = 1000;\r\n    private _minPanAngle = -Infinity;\r\n    private _maxPanAngle = Infinity;\r\n    private _minTiltAngle = -90;\r\n    private _maxTiltAngle = 90;\r\n    private _steps = 8;\r\n    private _yFactor = 2;\r\n    private _wrapPanAngle = false;\r\n    get steps(): number\r\n    {\r\n        return this._steps;\r\n    }\r\n\r\n    set steps(val: number)\r\n    {\r\n        val = (val < 1) ? 1 : val;\r\n        if (this._steps == val)\r\n            return;\r\n        this._steps = val;\r\n        this.update();\r\n    }\r\n\r\n    get panAngle(): number\r\n    {\r\n        return this._panAngle;\r\n    }\r\n\r\n    set panAngle(val: number)\r\n    {\r\n        val = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n        if (this._panAngle == val)\r\n            return;\r\n        this._panAngle = val;\r\n        this.update();\r\n    }\r\n\r\n    get tiltAngle(): number\r\n    {\r\n        return this._tiltAngle;\r\n    }\r\n\r\n    set tiltAngle(val: number)\r\n    {\r\n        val = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n        if (this._tiltAngle == val)\r\n            return;\r\n        this._tiltAngle = val;\r\n        this.update();\r\n    }\r\n\r\n    get distance(): number\r\n    {\r\n        return this._distance;\r\n    }\r\n\r\n    set distance(val: number)\r\n    {\r\n        if (this._distance == val)\r\n            return;\r\n        this._distance = val;\r\n        this.update();\r\n    }\r\n\r\n    get minPanAngle(): number\r\n    {\r\n        return this._minPanAngle;\r\n    }\r\n\r\n    set minPanAngle(val: number)\r\n    {\r\n        if (this._minPanAngle == val)\r\n            return;\r\n        this._minPanAngle = val;\r\n        this.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n    }\r\n\r\n    get maxPanAngle(): number\r\n    {\r\n        return this._maxPanAngle;\r\n    }\r\n\r\n    set maxPanAngle(val: number)\r\n    {\r\n        if (this._maxPanAngle == val)\r\n            return;\r\n        this._maxPanAngle = val;\r\n        this.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n    }\r\n\r\n    get minTiltAngle(): number\r\n    {\r\n        return this._minTiltAngle;\r\n    }\r\n\r\n    set minTiltAngle(val: number)\r\n    {\r\n        if (this._minTiltAngle == val)\r\n            return;\r\n        this._minTiltAngle = val;\r\n        this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n    }\r\n\r\n    get maxTiltAngle(): number\r\n    {\r\n        return this._maxTiltAngle;\r\n    }\r\n\r\n    set maxTiltAngle(val: number)\r\n    {\r\n        if (this._maxTiltAngle == val)\r\n            return;\r\n        this._maxTiltAngle = val;\r\n        this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n    }\r\n\r\n    get yFactor(): number\r\n    {\r\n        return this._yFactor;\r\n    }\r\n\r\n    set yFactor(val: number)\r\n    {\r\n        if (this._yFactor == val)\r\n            return;\r\n        this._yFactor = val;\r\n        this.update();\r\n    }\r\n\r\n    get wrapPanAngle(): boolean\r\n    {\r\n        return this._wrapPanAngle;\r\n    }\r\n\r\n    set wrapPanAngle(val: boolean)\r\n    {\r\n        if (this._wrapPanAngle == val)\r\n            return;\r\n        this._wrapPanAngle = val;\r\n        this.update();\r\n    }\r\n\r\n\r\n    constructor(node3d?: Node3D, lookAtObject?: Node3D, panAngle = 0, tiltAngle = 90, distance = 1000, minTiltAngle = -90, maxTiltAngle = 90, minPanAngle = NaN, maxPanAngle = NaN, steps = 8, yFactor = 2, wrapPanAngle = false)\r\n    {\r\n        super(node3d, lookAtObject);\r\n        this.distance = distance;\r\n        this.panAngle = panAngle;\r\n        this.tiltAngle = tiltAngle;\r\n        this.minPanAngle = minPanAngle || -Infinity;\r\n        this.maxPanAngle = maxPanAngle || Infinity;\r\n        this.minTiltAngle = minTiltAngle;\r\n        this.maxTiltAngle = maxTiltAngle;\r\n        this.steps = steps;\r\n        this.yFactor = yFactor;\r\n        this.wrapPanAngle = wrapPanAngle;\r\n        this._currentPanAngle = this._panAngle;\r\n        this._currentTiltAngle = this._tiltAngle;\r\n    }\r\n\r\n    update(interpolate = true)\r\n    {\r\n        if (this._tiltAngle != this._currentTiltAngle || this._panAngle != this._currentPanAngle)\r\n        {\r\n            if (this._wrapPanAngle)\r\n            {\r\n                if (this._panAngle < 0)\r\n                {\r\n                    this._currentPanAngle += this._panAngle % 360 + 360 - this._panAngle;\r\n                    this._panAngle = this._panAngle % 360 + 360;\r\n                }\r\n                else\r\n                {\r\n                    this._currentPanAngle += this._panAngle % 360 - this._panAngle;\r\n                    this._panAngle = this._panAngle % 360;\r\n                }\r\n                while (this._panAngle - this._currentPanAngle < -180)\r\n                    this._currentPanAngle -= 360;\r\n                while (this._panAngle - this._currentPanAngle > 180)\r\n                    this._currentPanAngle += 360;\r\n            }\r\n            if (interpolate)\r\n            {\r\n                this._currentTiltAngle += (this._tiltAngle - this._currentTiltAngle) / (this.steps + 1);\r\n                this._currentPanAngle += (this._panAngle - this._currentPanAngle) / (this.steps + 1);\r\n            }\r\n            else\r\n            {\r\n                this._currentPanAngle = this._panAngle;\r\n                this._currentTiltAngle = this._tiltAngle;\r\n            }\r\n            if ((Math.abs(this.tiltAngle - this._currentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._currentPanAngle) < 0.01))\r\n            {\r\n                this._currentTiltAngle = this._tiltAngle;\r\n                this._currentPanAngle = this._panAngle;\r\n            }\r\n        }\r\n        if (!this._targetNode)\r\n            return;\r\n        if (this._lookAtPosition)\r\n        {\r\n            this._pos.x = this._lookAtPosition.x;\r\n            this._pos.y = this._lookAtPosition.y;\r\n            this._pos.z = this._lookAtPosition.z;\r\n        }\r\n        else if (this._lookAtNode3D)\r\n        {\r\n            if (this._targetNode.parent && this._lookAtNode3D.parent)\r\n            {\r\n                if (this._targetNode.parent != this._lookAtNode3D.parent)\r\n                {\r\n                    this._pos.x = this._lookAtNode3D.worldPosition.x;\r\n                    this._pos.y = this._lookAtNode3D.worldPosition.y;\r\n                    this._pos.z = this._lookAtNode3D.worldPosition.z;\r\n                    this._targetNode.parent.worldToLocalMatrix.transformPoint3(this._pos, this._pos);\r\n                }\r\n                else\r\n                {\r\n                    this._lookAtNode3D.getPosition(this._pos);\r\n                }\r\n            }\r\n            else if (this._lookAtNode3D.scene)\r\n            {\r\n                this._pos.x = this._lookAtNode3D.worldPosition.x;\r\n                this._pos.y = this._lookAtNode3D.worldPosition.y;\r\n                this._pos.z = this._lookAtNode3D.worldPosition.z;\r\n            }\r\n            else\r\n            {\r\n                this._lookAtNode3D.getPosition(this._pos);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this._pos.x = this._origin.x;\r\n            this._pos.y = this._origin.y;\r\n            this._pos.z = this._origin.z;\r\n        }\r\n        this._targetNode.x = this._pos.x + this._distance * Math.sin(this._currentPanAngle * mathUtil.DEG2RAD) * Math.cos(this._currentTiltAngle * mathUtil.DEG2RAD);\r\n        this._targetNode.z = this._pos.z + this._distance * Math.cos(this._currentPanAngle * mathUtil.DEG2RAD) * Math.cos(this._currentTiltAngle * mathUtil.DEG2RAD);\r\n        this._targetNode.y = this._pos.y + this._distance * Math.sin(this._currentTiltAngle * mathUtil.DEG2RAD) * this._yFactor;\r\n        super.update();\r\n    }\r\n\r\n}\r\n\r\n","import { RegisterComponent } from \"../component/Component\";\r\nimport { Entity } from \"./Entity\";\r\nimport { Renderable } from \"./Renderable\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { MeshRenderer: MeshRenderer }\r\n}\r\n\r\n/**\r\n * 网格渲染器\r\n */\r\n@RegisterComponent()\r\nexport class MeshRenderer extends Renderable\r\n{\r\n    __class__: \"feng3d.MeshRenderer\";\r\n\r\n    static create(name = \"Mesh\", callback?: (component: MeshRenderer) => void)\r\n    {\r\n        var entity = new Entity();\r\n        entity.name = name;\r\n        var meshRenderer = entity.addComponent(MeshRenderer, callback);\r\n        return meshRenderer;\r\n    }\r\n}\r\n","import { Ray3, Vector2, Vector3 } from \"@feng3d/math\";\r\nimport { CullFace } from \"@feng3d/renderer\";\r\nimport { Node3D } from \"../core/Node3D\";\r\nimport { RayCastable } from \"../core/RayCastable\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\n\r\n/**\r\n * 射线投射拾取器\r\n */\r\nexport class Raycaster \r\n{\r\n    /**\r\n     * 获取射线穿过的实体\r\n     * @param ray3D 射线\r\n     * @param transforms 实体列表\r\n     * @return\r\n     */\r\n    pick(ray3D: Ray3, transforms: Node3D[])\r\n    {\r\n        if (transforms.length == 0) return null;\r\n\r\n        var pickingCollisionVOs = transforms.reduce((pv: PickingCollisionVO[], node3d) =>\r\n        {\r\n            var model = node3d.getComponent(RayCastable);\r\n            var pickingCollisionVO = model && model.worldRayIntersection(ray3D);\r\n            if (pickingCollisionVO) pv.push(pickingCollisionVO);\r\n            return pv;\r\n        }, []);\r\n\r\n        if (pickingCollisionVOs.length == 0) return null;\r\n\r\n        // 根据与包围盒距离进行排序\r\n        pickingCollisionVOs.sort((a, b) => a.rayEntryDistance - b.rayEntryDistance);\r\n\r\n        var shortestCollisionDistance = Number.MAX_VALUE;\r\n        var bestCollisionVO: PickingCollisionVO = null;\r\n        var collisionVOs: PickingCollisionVO[] = [];\r\n\r\n        for (var i = 0; i < pickingCollisionVOs.length; ++i)\r\n        {\r\n            var pickingCollisionVO = pickingCollisionVOs[i];\r\n            if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance)\r\n            {\r\n                var result = pickingCollisionVO.geometry.raycast(pickingCollisionVO.localRay, shortestCollisionDistance, pickingCollisionVO.cullFace);\r\n                if (result)\r\n                {\r\n                    pickingCollisionVO.rayEntryDistance = result.rayEntryDistance;\r\n                    pickingCollisionVO.index = result.index;\r\n                    pickingCollisionVO.localNormal = result.localNormal;\r\n                    pickingCollisionVO.localPosition = result.localPosition;\r\n                    pickingCollisionVO.uv = result.uv;\r\n                    //\r\n                    shortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n                    collisionVOs.push(pickingCollisionVO);\r\n                    bestCollisionVO = pickingCollisionVO;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestCollisionVO;\r\n    }\r\n\r\n    /**\r\n     * 获取射线穿过的实体\r\n     * @param ray3D 射线\r\n     * @param node3ds 实体列表\r\n     * @return\r\n     */\r\n    pickAll(ray3D: Ray3, node3ds: Node3D[])\r\n    {\r\n        if (node3ds.length == 0) return [];\r\n\r\n        var pickingCollisionVOs = node3ds.reduce((pv: PickingCollisionVO[], node3d) =>\r\n        {\r\n            var model = node3d.getComponent(RayCastable);\r\n            var pickingCollisionVO = model && model.worldRayIntersection(ray3D);\r\n            if (pickingCollisionVO) pv.push(pickingCollisionVO);\r\n            return pv;\r\n        }, []);\r\n\r\n        if (pickingCollisionVOs.length == 0) return [];\r\n\r\n        var collisionVOs = pickingCollisionVOs.filter(v =>\r\n        {\r\n            var result = v.geometry.raycast(v.localRay, Number.MAX_VALUE, v.cullFace);\r\n            if (result)\r\n            {\r\n                v.rayEntryDistance = result.rayEntryDistance;\r\n                v.index = result.index;\r\n                v.localNormal = result.localNormal;\r\n                v.localPosition = result.localPosition;\r\n                v.uv = result.uv;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        return collisionVOs;\r\n    }\r\n}\r\n\r\n/**\r\n * 射线投射拾取器\r\n */\r\nexport const raycaster = new Raycaster();\r\n\r\n/**\r\n * 拾取的碰撞数据\r\n */\r\nexport interface PickingCollisionVO\r\n{\r\n    /**\r\n     * 第一个穿过的物体\r\n     */\r\n    node3d: Node3D;\r\n\r\n    /**\r\n     * 碰撞的uv坐标\r\n     */\r\n    uv?: Vector2;\r\n\r\n    /**\r\n     * 实体上碰撞本地坐标\r\n     */\r\n    localPosition?: Vector3;\r\n\r\n    /**\r\n     * 射线顶点到实体的距离\r\n     */\r\n    rayEntryDistance: number;\r\n\r\n    /**\r\n     * 本地坐标系射线\r\n     */\r\n    localRay: Ray3;\r\n\r\n    /**\r\n     * 本地坐标碰撞法线\r\n     */\r\n    localNormal: Vector3;\r\n\r\n    /**\r\n     * 射线坐标是否在边界内\r\n     */\r\n    rayOriginIsInsideBounds: boolean;\r\n\r\n    /**\r\n     * 碰撞三角形索引\r\n     */\r\n    index?: number;\r\n\r\n    /**\r\n     * 碰撞关联的渲染对象\r\n     */\r\n    geometry: Geometry;\r\n\r\n    /**\r\n     * 剔除面\r\n     */\r\n    cullFace: CullFace;\r\n}\r\n\r\n\r\n\r\n\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport { Component3DEventMap } from \"../component/Component3D\";\r\nimport { Event, EventEmitter } from \"@feng3d/event\";\r\nimport { Rectangle } from \"@feng3d/math\";\r\nimport { raycaster } from \"../pick/Raycaster\";\r\nimport { Lazy, lazy } from \"@feng3d/polyfill\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { windowEventProxy } from \"@feng3d/shortcut\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Node3D } from \"./Node3D\";\r\nimport { View } from \"./View\";\r\n\r\n/**\r\n * 鼠标事件管理\r\n */\r\nexport class Mouse3DManager\r\n{\r\n    @watch(\"_mouseInputChanged\")\r\n    mouseInput: MouseInput;\r\n\r\n    get selectedTransform()\r\n    {\r\n        return this._selectedTransform;\r\n    }\r\n    set selectedTransform(v)\r\n    {\r\n        this.setSelectedNode3D(v);\r\n    }\r\n\r\n    /**\r\n     * 视窗，鼠标在该矩形内时为有效事件\r\n     */\r\n    viewport: Lazy<Rectangle>;\r\n\r\n    /**\r\n     * 拾取\r\n     * @param scene 场景\r\n     * @param camera 摄像机\r\n     */\r\n    pick(view: View, scene: Scene, camera: Camera)\r\n    {\r\n        if (this._mouseEventTypes.length == 0) return;\r\n        //计算得到鼠标射线相交的物体\r\n        var pickingCollisionVO = raycaster.pick(view.mouseRay3D, scene.mouseCheckObjects);\r\n\r\n        var node3d = pickingCollisionVO?.node3d;\r\n        return node3d;\r\n    }\r\n\r\n    constructor(mouseInput: MouseInput, viewport?: Lazy<Rectangle>)\r\n    {\r\n        //\r\n        this.mouseInput = mouseInput;\r\n        this.viewport = viewport;\r\n    }\r\n\r\n    private _selectedTransform: Node3D<Component3DEventMap>;\r\n    private _mouseEventTypes: string[] = [];\r\n\r\n    /**\r\n     * 鼠标按下时的对象，用于与鼠标弹起时对象做对比，如果相同触发click\r\n     */\r\n    private preMouseDownNode3D: Node3D;\r\n    /**\r\n     * 统计处理click次数，判断是否达到dblclick\r\n     */\r\n    private node3DClickNum: number;\r\n\r\n    private _mouseInputChanged(property: string, oldValue: MouseInput, newValue: MouseInput)\r\n    {\r\n        if (oldValue)\r\n        {\r\n            mouseEventTypes.forEach(element =>\r\n            {\r\n                oldValue.off(element, this.onMouseEvent, this);\r\n            });\r\n        }\r\n        if (newValue)\r\n        {\r\n            mouseEventTypes.forEach(element =>\r\n            {\r\n                newValue.on(element, this.onMouseEvent, this);\r\n            });\r\n        }\r\n    }\r\n\r\n    private dispatch(type)\r\n    {\r\n        if (this.viewport)\r\n        {\r\n            var bound = lazy.getvalue(this.viewport);\r\n            if (!bound.contains(windowEventProxy.clientX, windowEventProxy.clientY))\r\n                return;\r\n        }\r\n\r\n        if (this._mouseEventTypes.indexOf(type) == -1)\r\n            this._mouseEventTypes.push(type);\r\n    }\r\n\r\n    /**\r\n     * 监听鼠标事件收集事件类型\r\n     */\r\n    private onMouseEvent(event: Event<any>)\r\n    {\r\n        this.dispatch(event.type);\r\n    }\r\n\r\n    /**\r\n     * 设置选中对象\r\n     */\r\n    private setSelectedNode3D(value: Node3D)\r\n    {\r\n        if (this._selectedTransform != value)\r\n        {\r\n            if (this._selectedTransform)\r\n                this._selectedTransform.emit(\"mouseout\", null, true);\r\n            if (value)\r\n                value.emit(\"mouseover\", null, true);\r\n        }\r\n        this._selectedTransform = value;\r\n        this._mouseEventTypes.forEach(element =>\r\n        {\r\n            switch (element)\r\n            {\r\n                case \"mousedown\":\r\n                    if (this.preMouseDownNode3D != this._selectedTransform)\r\n                    {\r\n                        this.node3DClickNum = 0;\r\n                        this.preMouseDownNode3D = this._selectedTransform;\r\n                    }\r\n                    this._selectedTransform && this._selectedTransform.emit(element, null, true);\r\n                    break;\r\n                case \"mouseup\":\r\n                    if (this._selectedTransform == this.preMouseDownNode3D)\r\n                    {\r\n                        this.node3DClickNum++;\r\n                    } else\r\n                    {\r\n                        this.node3DClickNum = 0;\r\n                        this.preMouseDownNode3D = null;\r\n                    }\r\n                    this._selectedTransform && this._selectedTransform.emit(element, null, true);\r\n                    break;\r\n                case \"mousemove\":\r\n                    this._selectedTransform && this._selectedTransform.emit(element, null, true);\r\n                    break;\r\n                case \"click\":\r\n                    if (this.node3DClickNum > 0)\r\n                        this._selectedTransform && this._selectedTransform.emit(element, null, true);\r\n                    break;\r\n                case \"dblclick\":\r\n                    if (this.node3DClickNum > 1)\r\n                    {\r\n                        this._selectedTransform && this._selectedTransform.emit(element, null, true);\r\n                        this.node3DClickNum = 0;\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n        this._mouseEventTypes.length = 0;\r\n    }\r\n}\r\n\r\n/**\r\n * 鼠标事件输入\r\n */\r\nexport class MouseInput<T = MouseEventMap> extends EventEmitter<T>\r\n{\r\n    /**\r\n     * 是否启动\r\n     */\r\n    enable = true;\r\n\r\n    /**\r\n     * 是否捕获鼠标移动\r\n     */\r\n    catchMouseMove = false;\r\n\r\n    /**\r\n     * 将事件调度到事件流中. 事件目标是对其调用 dispatchEvent() 方法的 IEvent 对象。\r\n     * @param type                      事件的类型。类型区分大小写。\r\n     * @param data                      事件携带的自定义数据。\r\n     * @param bubbles                   表示事件是否为冒泡事件。如果事件可以冒泡，则此值为 true；否则为 false。\r\n     */\r\n    emit<K extends keyof T & string>(type: K, data?: T[K], bubbles = false)\r\n    {\r\n        if (!this.enable)\r\n            return null;\r\n        if (!this.catchMouseMove && type == \"mousemove\")\r\n            return null;\r\n        return super.emit(type, data, bubbles);\r\n    }\r\n\r\n    /**\r\n     * 派发事件\r\n     * @param event   事件对象\r\n     */\r\n    emitEvent<K extends keyof T & string>(event: Event<T[K]>)\r\n    {\r\n        if (!this.enable)\r\n            return false;\r\n        if (!this.catchMouseMove && event.type == \"mousemove\")\r\n            return false;\r\n        return super.emitEvent(event);\r\n    }\r\n}\r\n\r\n/**\r\n * 鼠标事件列表\r\n */\r\nvar mouseEventTypes: (keyof MouseEventMap)[] =\r\n    [\r\n        \"mouseout\",\r\n        \"mouseover\",\r\n        \"mousemove\",\r\n        \"mousedown\",\r\n        \"mouseup\",\r\n        \"click\",\r\n        \"middlemousedown\",\r\n        \"middlemouseup\",\r\n        \"middleclick\",\r\n        \"rightmousedown\",\r\n        \"rightmouseup\",\r\n        \"rightclick\",\r\n        \"dblclick\",\r\n    ];\r\n\r\n/**\r\n * Window鼠标事件输入\r\n */\r\nexport class WindowMouseInput extends MouseInput\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        windowEventProxy.on(\"click\", this.onMouseEvent, this);\r\n        windowEventProxy.on(\"dblclick\", this.onMouseEvent, this);\r\n        windowEventProxy.on(\"mousedown\", this.onMouseEvent, this);\r\n        windowEventProxy.on(\"mouseup\", this.onMouseEvent, this);\r\n        windowEventProxy.on(\"mousemove\", this.onMouseEvent, this);\r\n    }\r\n\r\n    /**\r\n     * 监听鼠标事件收集事件类型\r\n     */\r\n    private onMouseEvent(event: Event<MouseEvent>)\r\n    {\r\n        var type = event.type;\r\n        // 处理鼠标中键与右键\r\n        if (event.data instanceof MouseEvent)\r\n        {\r\n            if ([\"click\", \"mousedown\", \"mouseup\"].indexOf(event.type) != -1)\r\n            {\r\n                type = [\"\", \"middle\", \"right\"][event.data.button] + event.type;\r\n            }\r\n        }\r\n\r\n        this.emit(<any>type, { mouseX: event.data.clientX, mouseY: event.data.clientY });\r\n    }\r\n}\r\n\r\nexport interface MouseEventMap\r\n{\r\n    /**\r\n     * 鼠标移出对象\r\n     */\r\n    mouseout: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标移入对象\r\n     */\r\n    mouseover: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标在对象上移动\r\n     */\r\n    mousemove: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标左键按下\r\n     */\r\n    mousedown: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标左键弹起\r\n     */\r\n    mouseup: { clientX: number, clientY: number }\r\n    /**\r\n     * 单击\r\n     */\r\n    click: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标中键按下\r\n     */\r\n    middlemousedown: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标中键弹起\r\n     */\r\n    middlemouseup: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标中键单击\r\n     */\r\n    middleclick: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标右键按下\r\n     */\r\n    rightmousedown: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标右键弹起\r\n     */\r\n    rightmouseup: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标右键单击\r\n     */\r\n    rightclick: { clientX: number, clientY: number }\r\n    /**\r\n     * 鼠标双击\r\n     */\r\n    dblclick: { clientX: number, clientY: number }\r\n}\r\n","import { Entity } from \"./Entity\";\r\nimport { Node3D } from \"./Node3D\";\r\nimport { ScriptComponent } from \"./ScriptComponent\";\r\n\r\n/**\r\n * 3d对象脚本\r\n */\r\nexport class Script\r\n{\r\n    /**\r\n     * The game object this component is attached to. A component is always attached to a game object.\r\n     */\r\n    get entity(): Entity\r\n    {\r\n        return this.component.entity;\r\n    }\r\n\r\n    /**\r\n     * The Transform attached to this Entity (null if there is none attached).\r\n     */\r\n    get node3d(): Node3D\r\n    {\r\n        return this.component.node3d;\r\n    }\r\n\r\n    /**\r\n     * 宿主组件\r\n     */\r\n    component: ScriptComponent;\r\n\r\n    constructor()\r\n    {\r\n    }\r\n\r\n    /**\r\n     * Use this for initialization\r\n     */\r\n    init()\r\n    {\r\n\r\n    }\r\n\r\n    /**\r\n     * Update is called once per frame\r\n     * 每帧执行一次\r\n     */\r\n    update()\r\n    {\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    dispose()\r\n    {\r\n\r\n    }\r\n}\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { Component3D } from \"../component/Component3D\";\r\nimport { Event } from \"@feng3d/event\";\r\nimport { Vector3 } from \"@feng3d/math\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { ticker } from \"../utils/Ticker\";\r\nimport { watcher } from \"@feng3d/watcher\";\r\nimport { Node3D } from \"./Node3D\";\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface EntityEventMap\r\n    {\r\n        /**\r\n         * 尺寸变化事件\r\n         */\r\n        sizeChanged: TransformLayout;\r\n\r\n        /**\r\n         * 中心点变化事件\r\n         */\r\n        pivotChanged: TransformLayout;\r\n    }\r\n}\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { TransformLayout: TransformLayout; }\r\n}\r\n\r\n/**\r\n * 变换布局\r\n * \r\n * 提供了比Transform更加适用于2D元素的API\r\n * \r\n * 通过修改Transform的数值实现\r\n */\r\n@AddComponentMenu(\"Layout/TransformLayout\")\r\n@RegisterComponent({ single: true })\r\nexport class TransformLayout extends Component3D\r\n{\r\n    /**\r\n     * 创建一个实体，该类为虚类\r\n     */\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        watcher.watch(this._position, \"x\", this._invalidateLayout, this);\r\n        watcher.watch(this._position, \"y\", this._invalidateLayout, this);\r\n        watcher.watch(this._position, \"z\", this._invalidateLayout, this);\r\n        watcher.watch(this.anchorMin, \"x\", this._invalidateLayout, this);\r\n        watcher.watch(this.anchorMin, \"y\", this._invalidateLayout, this);\r\n        watcher.watch(this.anchorMin, \"z\", this._invalidateLayout, this);\r\n        watcher.watch(this.anchorMax, \"x\", this._invalidateLayout, this);\r\n        watcher.watch(this.anchorMax, \"y\", this._invalidateLayout, this);\r\n        watcher.watch(this.anchorMax, \"z\", this._invalidateLayout, this);\r\n        //\r\n        watcher.watch(this._leftTop, \"x\", this._invalidateSize, this);\r\n        watcher.watch(this._leftTop, \"y\", this._invalidateSize, this);\r\n        watcher.watch(this._leftTop, \"z\", this._invalidateSize, this);\r\n        watcher.watch(this._rightBottom, \"x\", this._invalidateSize, this);\r\n        watcher.watch(this._rightBottom, \"y\", this._invalidateSize, this);\r\n        watcher.watch(this._rightBottom, \"z\", this._invalidateSize, this);\r\n        //\r\n        watcher.watch(this._size, \"x\", this._invalidateSize, this);\r\n        watcher.watch(this._size, \"y\", this._invalidateSize, this);\r\n        watcher.watch(this._size, \"z\", this._invalidateSize, this);\r\n        watcher.watch(this.pivot, \"x\", this._invalidatePivot, this);\r\n        watcher.watch(this.pivot, \"y\", this._invalidatePivot, this);\r\n        watcher.watch(this.pivot, \"z\", this._invalidatePivot, this);\r\n        //\r\n        this.on(\"added\", this._onAdded, this);\r\n        this.on(\"removed\", this._onRemoved, this);\r\n    }\r\n\r\n    private _onAdded(event: Event<{ parent: Node3D; }>)\r\n    {\r\n        event.data.parent.on(\"sizeChanged\", this._invalidateLayout, this);\r\n        event.data.parent.on(\"pivotChanged\", this._invalidateLayout, this);\r\n        this._invalidateLayout();\r\n    }\r\n\r\n    private _onRemoved(event: Event<{ parent: Node3D; }>)\r\n    {\r\n        event.data.parent.off(\"sizeChanged\", this._invalidateLayout, this);\r\n        event.data.parent.off(\"pivotChanged\", this._invalidateLayout, this);\r\n    }\r\n\r\n    /**\r\n     * 位移\r\n     */\r\n    @oav({ tooltip: \"当anchorMin.x == anchorMax.x时对position.x赋值生效，当 anchorMin.y == anchorMax.y 时对position.y赋值生效，否则赋值无效，自动被覆盖。\", componentParam: { step: 1, stepScale: 1, stepDownup: 1 } })\r\n    @serialize\r\n    get position()\r\n    {\r\n        this._updateLayout();\r\n        return this._position;\r\n    }\r\n    set position(v) { this._position.copy(v); }\r\n    private readonly _position = new Vector3();\r\n\r\n    /**\r\n     * 尺寸，宽高。\r\n     */\r\n    @oav({ tooltip: \"宽度，不会影响到缩放值。当 anchorMin.x == anchorMax.x 时对 size.x 赋值生效，当anchorMin.y == anchorMax.y时对 size.y 赋值生效，否则赋值无效，自动被覆盖。\", componentParam: { step: 1, stepScale: 1, stepDownup: 1 } })\r\n    @serialize\r\n    get size()\r\n    {\r\n        this._updateLayout();\r\n        return this._size;\r\n    }\r\n    set size(v) { this._size.copy(v); }\r\n    private _size = new Vector3(1, 1, 1);\r\n\r\n    /**\r\n     * 与最小最大锚点形成的边框的left、right、top、bottom距离。当 anchorMin.x != anchorMax.x 时对 layout.x layout.y 赋值生效，当 anchorMin.y != anchorMax.y 时对 layout.z layout.w 赋值生效，否则赋值无效，自动被覆盖。\r\n     */\r\n    @oav({ tooltip: \"与最小最大锚点形成的边框的left、right、top、bottom距离。当 anchorMin.x != anchorMax.x 时对 layout.x layout.y 赋值生效，当 anchorMin.y != anchorMax.y 时对 layout.z layout.w 赋值生效，否则赋值无效，自动被覆盖。\", componentParam: { step: 1, stepScale: 1, stepDownup: 1 } })\r\n    @serialize\r\n    get leftTop()\r\n    {\r\n        return this._leftTop;\r\n    }\r\n    set leftTop(v)\r\n    {\r\n        this._leftTop.copy(v);\r\n    }\r\n    private _leftTop = new Vector3(0, 0, 0);\r\n\r\n    /**\r\n     * 与最小最大锚点形成的边框的left、right、top、bottom距离。当 anchorMin.x != anchorMax.x 时对 layout.x layout.y 赋值生效，当 anchorMin.y != anchorMax.y 时对 layout.z layout.w 赋值生效，否则赋值无效，自动被覆盖。\r\n     */\r\n    @oav({ tooltip: \"与最小最大锚点形成的边框的left、right、top、bottom距离。当 anchorMin.x != anchorMax.x 时对 layout.x layout.y 赋值生效，当 anchorMin.y != anchorMax.y 时对 layout.z layout.w 赋值生效，否则赋值无效，自动被覆盖。\", componentParam: { step: 1, stepScale: 1, stepDownup: 1 } })\r\n    @serialize\r\n    get rightBottom()\r\n    {\r\n        return this._rightBottom;\r\n    }\r\n    set rightBottom(v)\r\n    {\r\n        this._rightBottom.copy(v);\r\n    }\r\n    private _rightBottom = new Vector3(0, 0, 0);\r\n\r\n    /**\r\n     * 最小锚点，父Transform2D中左上角锚定的规范化位置。\r\n     */\r\n    @oav({ tooltip: \"父Transform2D中左上角锚定的规范化位置。\", componentParam: { step: 0.01, stepScale: 0.01, stepDownup: 0.01 } })\r\n    @serialize\r\n    anchorMin = new Vector3(0.5, 0.5, 0.5);\r\n\r\n    /**\r\n     * 最大锚点，父Transform2D中左上角锚定的规范化位置。\r\n     */\r\n    @oav({ tooltip: \"最大锚点，父Transform2D中左上角锚定的规范化位置。\", componentParam: { step: 0.01, stepScale: 0.01, stepDownup: 0.01 } })\r\n    @serialize\r\n    anchorMax = new Vector3(0.5, 0.5, 0.5);\r\n\r\n    /**\r\n     * The normalized position in this RectTransform that it rotates around.\r\n     */\r\n    @oav({ tooltip: \"中心点\" })\r\n    @serialize\r\n    pivot = new Vector3(0.5, 0.5, 0.5);\r\n\r\n    beforeRender(renderAtomic: RenderAtomic, scene: Scene, camera: Camera)\r\n    {\r\n        // renderAtomic.uniforms.u_rect = this.rect;\r\n    }\r\n\r\n    private _updateLayout()\r\n    {\r\n        if (!this._layoutInvalid) return;\r\n\r\n        var transformLayout = this.node3d?.parent?.getComponent(TransformLayout);\r\n        if (!transformLayout) return;\r\n\r\n        // 中心点基于anchorMin的坐标\r\n        var position = this._position;\r\n        // 尺寸\r\n        var size = this._size;\r\n        var leftTop = this._leftTop;\r\n        var rightBottom = this._rightBottom;\r\n\r\n        // 最小锚点\r\n        var anchorMin = this.anchorMin.clone();\r\n        // 最大锚点\r\n        var anchorMax = this.anchorMax.clone();\r\n        var pivot = this.pivot.clone();\r\n\r\n        // 父对象显示区域宽高\r\n        var parentSize = transformLayout.size;\r\n        var parentPivot = transformLayout.pivot;\r\n        // 锚点在父Transform2D中锚定的 leftRightTopBottom 位置。\r\n        var anchorLeftTop = new Vector3(\r\n            anchorMin.x * parentSize.x - parentPivot.x * parentSize.x,\r\n            anchorMin.y * parentSize.y - parentPivot.y * parentSize.y,\r\n            anchorMin.z * parentSize.z - parentPivot.z * parentSize.z,\r\n        );\r\n        var anchorRightBottom = new Vector3(\r\n            anchorMax.x * parentSize.x - parentPivot.x * parentSize.x,\r\n            anchorMax.y * parentSize.y - parentPivot.y * parentSize.y,\r\n            anchorMax.z * parentSize.z - parentPivot.z * parentSize.z,\r\n        );\r\n\r\n        if (anchorMin.x == anchorMax.x)\r\n        {\r\n            leftTop.x = (-pivot.x * size.x + position.x) - anchorLeftTop.x;\r\n            rightBottom.x = anchorRightBottom.x - (size.x - pivot.x * size.x + position.x);\r\n        } else \r\n        {\r\n            size.x = (anchorRightBottom.x - rightBottom.x) - (anchorLeftTop.x + leftTop.x);\r\n            position.x = leftTop.x + pivot.x * size.x;\r\n        }\r\n\r\n        if (anchorMin.y == anchorMax.y)\r\n        {\r\n            leftTop.y = (-pivot.y * size.y + position.y) - anchorLeftTop.y;\r\n            rightBottom.y = anchorRightBottom.y - (size.y - pivot.y * size.y + position.y);\r\n        } else \r\n        {\r\n            size.y = (anchorRightBottom.y - rightBottom.y) - (anchorLeftTop.y + leftTop.y);\r\n            position.y = leftTop.y + pivot.y * size.y;\r\n        }\r\n\r\n        if (anchorMin.z == anchorMax.z)\r\n        {\r\n            leftTop.z = (-pivot.z * size.z + position.z) - anchorLeftTop.z;\r\n            rightBottom.z = anchorRightBottom.z - (size.z - pivot.z * size.z + position.z);\r\n        } else\r\n        {\r\n            size.z = (anchorRightBottom.z - rightBottom.z) - (anchorLeftTop.z + leftTop.z);\r\n            position.z = leftTop.z + pivot.z * size.z;\r\n        }\r\n\r\n        //\r\n        this.node3d.x = anchorLeftTop.x + position.x;\r\n        this.node3d.y = anchorLeftTop.y + position.y;\r\n        this.node3d.z = anchorLeftTop.z + position.z;\r\n        //\r\n        this._layoutInvalid = false;\r\n        ticker.offframe(this._updateLayout, this);\r\n    }\r\n\r\n    /**\r\n     * 布局是否失效\r\n     */\r\n    private _layoutInvalid = true;\r\n\r\n    private _invalidateLayout()\r\n    {\r\n        this._layoutInvalid = true;\r\n        ticker.onframe(this._updateLayout, this);\r\n    }\r\n\r\n    private _invalidateSize()\r\n    {\r\n        this._invalidateLayout();\r\n        this.emit(\"sizeChanged\", this);\r\n    }\r\n\r\n    private _invalidatePivot()\r\n    {\r\n        this._invalidateLayout();\r\n        this.emit(\"pivotChanged\", this);\r\n    }\r\n}\r\n","import { Entity } from \"../core/Entity\";\r\nimport { MeshRenderer } from \"../core/MeshRenderer\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface GeometryTypes { PlaneGeometry: PlaneGeometry }\r\n}\r\n\r\n/**\r\n * 平面几何体\r\n */\r\nexport class PlaneGeometry extends Geometry\r\n{\r\n\r\n    __class__: \"feng3d.PlaneGeometry\";\r\n\r\n    /**\r\n     * 宽度\r\n     */\r\n    @oav()\r\n    @serialize\r\n    @watch(\"invalidateGeometry\")\r\n    width = 1;\r\n\r\n    /**\r\n     * 高度\r\n     */\r\n    @oav()\r\n    @serialize\r\n    @watch(\"invalidateGeometry\")\r\n    height = 1;\r\n\r\n    /**\r\n     * 横向分割数\r\n     */\r\n    @oav()\r\n    @serialize\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsW = 1;\r\n\r\n    /**\r\n     * 纵向分割数\r\n     */\r\n    @oav()\r\n    @serialize\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsH = 1;\r\n\r\n    /**\r\n     * 是否朝上\r\n     */\r\n    @oav()\r\n    @serialize\r\n    @watch(\"invalidateGeometry\")\r\n    yUp = true;\r\n\r\n    protected _name = \"Plane\";\r\n\r\n    /**\r\n     * 构建几何体数据\r\n     */\r\n    protected buildGeometry()\r\n    {\r\n        var vertexPositionData = this.buildPosition();\r\n        this.positions = vertexPositionData;\r\n\r\n        var vertexNormalData = this.buildNormal();\r\n        this.normals = vertexNormalData;\r\n\r\n        var vertexTangentData = this.buildTangent();\r\n        this.tangents = vertexTangentData;\r\n\r\n        var uvData = this.buildUVs();\r\n        this.uvs = uvData;\r\n\r\n        var indices = this.buildIndices();\r\n        this.indices = indices;\r\n    }\r\n\r\n    /**\r\n     * 构建顶点坐标\r\n     * @param this.width 宽度\r\n     * @param this.height 高度\r\n     * @param this.segmentsW 横向分割数\r\n     * @param this.segmentsH 纵向分割数\r\n     * @param this.yUp 正面朝向 true:Y+ false:Z+\r\n     */\r\n    private buildPosition()\r\n    {\r\n        var vertexPositionData: number[] = [];\r\n        var x: number, y: number;\r\n        var positionIndex = 0;\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n                x = (xi / this.segmentsW - .5) * this.width;\r\n                y = (yi / this.segmentsH - .5) * this.height;\r\n\r\n                //设置坐标数据\r\n                vertexPositionData[positionIndex++] = x;\r\n                if (this.yUp)\r\n                {\r\n                    vertexPositionData[positionIndex++] = 0;\r\n                    vertexPositionData[positionIndex++] = y;\r\n                }\r\n                else\r\n                {\r\n                    vertexPositionData[positionIndex++] = y;\r\n                    vertexPositionData[positionIndex++] = 0;\r\n                }\r\n            }\r\n        }\r\n        return vertexPositionData;\r\n    }\r\n\r\n    /**\r\n     * 构建顶点法线\r\n     * @param this.segmentsW 横向分割数\r\n     * @param this.segmentsH 纵向分割数\r\n     * @param this.yUp 正面朝向 true:Y+ false:Z+\r\n     */\r\n    private buildNormal()\r\n    {\r\n        var vertexNormalData: number[] = [];\r\n\r\n        var normalIndex = 0;\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n\r\n                //设置法线数据\r\n                vertexNormalData[normalIndex++] = 0;\r\n                if (this.yUp)\r\n                {\r\n                    vertexNormalData[normalIndex++] = 1;\r\n                    vertexNormalData[normalIndex++] = 0;\r\n                }\r\n                else\r\n                {\r\n                    vertexNormalData[normalIndex++] = 0;\r\n                    vertexNormalData[normalIndex++] = 1;\r\n                }\r\n            }\r\n        }\r\n        return vertexNormalData;\r\n    }\r\n\r\n    /**\r\n     * 构建顶点切线\r\n     * @param this.segmentsW 横向分割数\r\n     * @param this.segmentsH 纵向分割数\r\n     * @param this.yUp 正面朝向 true:Y+ false:Z+\r\n     */\r\n    private buildTangent()\r\n    {\r\n        var vertexTangentData: number[] = [];\r\n        var tangentIndex = 0;\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n                if (this.yUp)\r\n                {\r\n                    vertexTangentData[tangentIndex++] = 1;\r\n                    vertexTangentData[tangentIndex++] = 0;\r\n                    vertexTangentData[tangentIndex++] = 0;\r\n                }\r\n                else\r\n                {\r\n                    vertexTangentData[tangentIndex++] = -1;\r\n                    vertexTangentData[tangentIndex++] = 0;\r\n                    vertexTangentData[tangentIndex++] = 0;\r\n                }\r\n            }\r\n        }\r\n        return vertexTangentData;\r\n    }\r\n\r\n    /**\r\n     * 构建顶点索引\r\n     * @param this.segmentsW 横向分割数\r\n     * @param this.segmentsH 纵向分割数\r\n     * @param this.yUp 正面朝向 true:Y+ false:Z+\r\n     */\r\n    private buildIndices()\r\n    {\r\n        var indices: number[] = [];\r\n        var tw = this.segmentsW + 1;\r\n\r\n        var numIndices = 0;\r\n        var base: number;\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n                //生成索引数据\r\n                if (xi != this.segmentsW && yi != this.segmentsH)\r\n                {\r\n                    base = xi + yi * tw;\r\n                    if (this.yUp)\r\n                    {\r\n                        indices[numIndices++] = base;\r\n                        indices[numIndices++] = base + tw;\r\n                        indices[numIndices++] = base + tw + 1;\r\n                        indices[numIndices++] = base;\r\n                        indices[numIndices++] = base + tw + 1;\r\n                        indices[numIndices++] = base + 1;\r\n                    } else\r\n                    {\r\n                        indices[numIndices++] = base;\r\n                        indices[numIndices++] = base + tw + 1;\r\n                        indices[numIndices++] = base + tw;\r\n                        indices[numIndices++] = base;\r\n                        indices[numIndices++] = base + 1;\r\n                        indices[numIndices++] = base + tw + 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return indices;\r\n    }\r\n\r\n    /**\r\n     * 构建uv\r\n     * @param this.segmentsW 横向分割数\r\n     * @param this.segmentsH 纵向分割数\r\n     */\r\n    private buildUVs()\r\n    {\r\n        var data: number[] = [];\r\n        var index = 0;\r\n\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n                if (this.yUp)\r\n                {\r\n                    data[index++] = xi / this.segmentsW;\r\n                    data[index++] = 1 - yi / this.segmentsH;\r\n                } else\r\n                {\r\n                    data[index++] = 1 - xi / this.segmentsW;\r\n                    data[index++] = 1 - yi / this.segmentsH;\r\n                }\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface DefaultGeometry\r\n    {\r\n        Plane: PlaneGeometry;\r\n    }\r\n}\r\nGeometry.setDefault(\"Plane\", new PlaneGeometry(), { width: 10, height: 10 });\r\n\r\nEntity.registerPrimitive(\"Plane\", (g) =>\r\n{\r\n    g.addComponent(MeshRenderer).geometry = Geometry.getDefault(\"Plane\");\r\n});\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        Plane: Entity;\r\n    }\r\n}\r\n","import { TextureFormat, TextureMagFilter, TextureMinFilter } from \"@feng3d/renderer\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Texture2D } from \"./Texture2D\";\r\n\r\n/**\r\n * 渲染目标纹理\r\n */\r\nexport class RenderTargetTexture2D extends Texture2D\r\n{\r\n    @watch(\"invalidate\")\r\n    OFFSCREEN_WIDTH = 1024;\r\n\r\n    @watch(\"invalidate\")\r\n    OFFSCREEN_HEIGHT = 1024;\r\n\r\n    format = TextureFormat.RGBA;\r\n\r\n    minFilter = TextureMinFilter.NEAREST;\r\n\r\n    magFilter = TextureMagFilter.NEAREST;\r\n\r\n    isRenderTarget = true;\r\n}\r\n","import { FrameBuffer, GL, GLCache, RenderBuffer, Texture } from \"@feng3d/renderer\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { RenderTargetTexture2D } from \"../textures/RenderTargetTexture2D\";\r\n\r\n/**\r\n * 帧缓冲对象\r\n */\r\nexport class FrameBufferObject\r\n{\r\n    @watch(\"invalidateSize\")\r\n    OFFSCREEN_WIDTH = 1024;\r\n\r\n    @watch(\"invalidateSize\")\r\n    OFFSCREEN_HEIGHT = 1024;\r\n\r\n    @watch(\"invalidate\")\r\n    frameBuffer: FrameBuffer;\r\n\r\n    @watch(\"invalidate\")\r\n    texture: RenderTargetTexture2D;\r\n\r\n    @watch(\"invalidate\")\r\n    depthBuffer: RenderBuffer;\r\n\r\n    constructor(width = 1024, height = 1024)\r\n    {\r\n        this.frameBuffer = new FrameBuffer();\r\n        this.texture = new RenderTargetTexture2D();\r\n        this.depthBuffer = new RenderBuffer();\r\n        this.OFFSCREEN_WIDTH = width;\r\n        this.OFFSCREEN_HEIGHT = height;\r\n    }\r\n\r\n    static active(gl: GL, frameBufferObject: FrameBufferObject)\r\n    {\r\n        if (frameBufferObject._invalid)\r\n        {\r\n            frameBufferObject._invalid = false;\r\n            this.clear(frameBufferObject);\r\n        }\r\n\r\n        gl.cache.frameBufferObjects = gl.cache.frameBufferObjects || new Map();\r\n        var obj = gl.cache.frameBufferObjects.get(frameBufferObject);\r\n        if (!obj)\r\n        {\r\n            var framebuffer = FrameBuffer.active(gl, frameBufferObject.frameBuffer);\r\n            var texture = Texture.active(gl, frameBufferObject.texture);\r\n            var depthBuffer = RenderBuffer.active(gl, frameBufferObject.depthBuffer);\r\n\r\n            // 绑定帧缓冲区对象\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            // 设置颜色关联对象\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n            // 设置深度关联对象\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n\r\n            // 检查Framebuffer状态\r\n            var e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n            if (gl.FRAMEBUFFER_COMPLETE !== e)\r\n            {\r\n                alert('Frame buffer object is incomplete: ' + e.toString());\r\n                return null;\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n            gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n            obj = { framebuffer: framebuffer, texture: texture, depthBuffer: depthBuffer };\r\n            gl.cache.frameBufferObjects.set(frameBufferObject, obj);\r\n        } else\r\n        {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, obj.framebuffer);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    deactive(gl: GL)\r\n    {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    /**\r\n     * 是否失效\r\n     */\r\n    private _invalid = true;\r\n\r\n    /**\r\n     * 使失效\r\n     */\r\n    protected invalidate()\r\n    {\r\n        this._invalid = true;\r\n    }\r\n\r\n    private invalidateSize()\r\n    {\r\n        if (this.texture)\r\n        {\r\n            this.texture.OFFSCREEN_WIDTH = this.OFFSCREEN_WIDTH;\r\n            this.texture.OFFSCREEN_HEIGHT = this.OFFSCREEN_HEIGHT;\r\n        }\r\n        if (this.depthBuffer)\r\n        {\r\n            this.depthBuffer.OFFSCREEN_WIDTH = this.OFFSCREEN_WIDTH;\r\n            this.depthBuffer.OFFSCREEN_HEIGHT = this.OFFSCREEN_HEIGHT;\r\n        }\r\n        this._invalid = true;\r\n    }\r\n\r\n    static clear(frameBufferObject: FrameBufferObject)\r\n    {\r\n        GL.glList.forEach(gl =>\r\n        {\r\n            gl.cache.frameBufferObjects = gl.cache.frameBufferObjects || new Map();\r\n\r\n            var buffer = gl.cache.frameBufferObjects.get(frameBufferObject);\r\n            if (buffer)\r\n            {\r\n                gl.cache.frameBufferObjects.delete(frameBufferObject);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\ndeclare module \"@feng3d/renderer\"\r\n{\r\n    export interface GLCache\r\n    {\r\n        /**\r\n         * 此处用于缓存，需要获取有效数据请调用 Attribute.getBuffer\r\n         */\r\n        frameBufferObjects: Map<FrameBufferObject, {\r\n            framebuffer: WebGLFramebuffer, texture: WebGLTexture, depthBuffer: WebGLRenderbuffer\r\n        }>;\r\n    }\r\n}","\r\n\r\n/**\r\n * 灯光类型\r\n\r\n */\r\nexport enum LightType\r\n{\r\n    /**\r\n     * 方向光\r\n     */\r\n    Directional = 0,\r\n    /**\r\n     * 点光\r\n     */\r\n    Point = 1,\r\n    /**\r\n     * 聚光灯\r\n     */\r\n    Spot = 2\r\n}\r\n","import { Color3, Vector2, Vector3 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { BlendFactor } from \"@feng3d/renderer\";\r\nimport { serialization, serialize } from \"@feng3d/serialization\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { Behaviour } from \"../component/Behaviour\";\r\nimport { BillboardComponent } from \"../component/BillboardComponent\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { HideFlags } from \"../core/HideFlags\";\r\nimport { MeshRenderer } from \"../core/MeshRenderer\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { Material } from \"../materials/Material\";\r\nimport { PlaneGeometry } from \"../primitives/PlaneGeometry\";\r\nimport { FrameBufferObject } from \"../render/FrameBufferObject\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { RenderTargetTexture2D } from \"../textures/RenderTargetTexture2D\";\r\nimport { LightType } from \"./LightType\";\r\nimport { ShadowType } from \"./shadow/ShadowType\";\r\n\r\n/**\r\n * 灯光\r\n */\r\nexport class Light extends Behaviour\r\n{\r\n    /**\r\n     * 灯光类型\r\n     */\r\n    @serialize\r\n    lightType: LightType;\r\n\r\n    /**\r\n     * 颜色\r\n     */\r\n    @oav()\r\n    @serialize\r\n    color = new Color3();\r\n\r\n    /**\r\n     * 光照强度\r\n     */\r\n    @oav()\r\n    @serialize\r\n    intensity = 1;\r\n\r\n    /**\r\n     * 阴影类型\r\n     */\r\n    @oav({ component: \"OAVEnum\", componentParam: { enumClass: ShadowType } })\r\n    @serialize\r\n    shadowType = ShadowType.No_Shadows;\r\n\r\n    /**\r\n     * 光源位置\r\n     */\r\n    get position(): Vector3\r\n    {\r\n        return this.node3d.worldPosition;\r\n    }\r\n\r\n    /**\r\n     * 光照方向\r\n     */\r\n    get direction(): Vector3\r\n    {\r\n        return this.node3d.localToWorldMatrix.getAxisZ();\r\n    }\r\n\r\n    /**\r\n     * 阴影偏差，用来解决判断是否为阴影时精度问题\r\n     */\r\n    shadowBias = -0.005;\r\n\r\n    /**\r\n     * 阴影半径，边缘宽度\r\n     */\r\n    shadowRadius = 1;\r\n\r\n    /**\r\n     * 阴影近平面距离\r\n     */\r\n    get shadowCameraNear()\r\n    {\r\n        return this.shadowCamera.lens.near;\r\n    }\r\n\r\n    /**\r\n     * 阴影近平面距离\r\n     */\r\n    get shadowCameraFar()\r\n    {\r\n        return this.shadowCamera.lens.far;\r\n    }\r\n\r\n    /**\r\n     * 投影摄像机\r\n     */\r\n    shadowCamera: Camera;\r\n\r\n    /**\r\n     * 阴影图尺寸\r\n     */\r\n    get shadowMapSize(): Vector2\r\n    {\r\n        return this.shadowMap.getSize();\r\n    }\r\n\r\n    get shadowMap(): RenderTargetTexture2D\r\n    {\r\n        return this.frameBufferObject.texture;\r\n    }\r\n\r\n    /**\r\n     * 帧缓冲对象，用于处理光照阴影贴图渲染\r\n     */\r\n    frameBufferObject = new FrameBufferObject();\r\n\r\n    @oav({ tooltip: \"是否调试阴影图\" })\r\n    debugShadowMap = false;\r\n\r\n    private debugShadowMapModel: MeshRenderer;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.shadowCamera = serialization.setValue(new Entity(), { name: \"LightShadowCamera\" }).addComponent(Camera);\r\n    }\r\n\r\n    updateDebugShadowMap(scene: Scene, viewCamera: Camera)\r\n    {\r\n        var model = this.debugShadowMapModel;\r\n        if (!model)\r\n        {\r\n            var entity = new Entity();\r\n            entity.name = \"debugShadowMapObject\";\r\n            model = entity.addComponent(MeshRenderer);\r\n            model.geometry = Geometry.getDefault(\"Plane\");\r\n            model.hideFlags = HideFlags.Hide | HideFlags.DontSave;\r\n            model.node3d.mouseEnabled = false;\r\n            model.addComponent(BillboardComponent);\r\n\r\n            //材质\r\n            model.geometry = serialization.setValue(new PlaneGeometry(), { width: this.lightType == LightType.Point ? 1 : 0.5, height: 0.5, segmentsW: 1, segmentsH: 1, yUp: false });\r\n            var textureMaterial = model.material = serialization.setValue(new Material(), { shaderName: \"texture\", uniforms: { s_texture: this.frameBufferObject.texture } });\r\n            //\r\n            // textureMaterial.uniforms.s_texture.url = 'Assets/pz.jpg';\r\n            // textureMaterial.uniforms.u_color.setTo(1.0, 0.0, 0.0, 1.0);\r\n            textureMaterial.renderParams.enableBlend = true;\r\n            textureMaterial.renderParams.sfactor = BlendFactor.ONE;\r\n            textureMaterial.renderParams.dfactor = BlendFactor.ZERO;\r\n        }\r\n\r\n        var depth = viewCamera.lens.near * 2;\r\n        const position = viewCamera.node3d.worldPosition.addTo(viewCamera.node3d.localToWorldMatrix.getAxisZ().scaleNumberTo(depth));\r\n        model.node3d.x = position.x;\r\n        model.node3d.y = position.y;\r\n        model.node3d.z = position.z;\r\n        var billboardComponent = model.getComponent(BillboardComponent);\r\n        billboardComponent.camera = viewCamera;\r\n\r\n        if (this.debugShadowMap)\r\n        {\r\n            scene.node3d.addChild(model.node3d);\r\n        } else\r\n        {\r\n            model.node3d.remove();\r\n        }\r\n    }\r\n}\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport { OrthographicLens } from \"../cameras/lenses/OrthographicLens\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { Renderable } from \"../core/Renderable\";\r\nimport { Box3 } from \"@feng3d/math\";\r\nimport { Vector3 } from \"@feng3d/math\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { serialization } from \"@feng3d/serialization\";\r\nimport { Light } from \"./Light\";\r\nimport { LightType } from \"./LightType\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { DirectionalLight: DirectionalLight; }\r\n}\r\n\r\n/**\r\n * 方向光源\r\n */\r\n@AddComponentMenu(\"Rendering/DirectionalLight\")\r\n@RegisterComponent()\r\nexport class DirectionalLight extends Light\r\n{\r\n    static create(name = \"DirectionalLight\")\r\n    {\r\n        var entity = new Entity();\r\n        entity.name = name;\r\n        var directionalLight = entity.addComponent(DirectionalLight);\r\n        return directionalLight;\r\n    }\r\n    __class__: \"feng3d.DirectionalLight\";\r\n\r\n    lightType = LightType.Directional;\r\n\r\n    /**\r\n     * 用于计算方向光   \r\n     */\r\n    private orthographicLens: OrthographicLens;\r\n\r\n    /**\r\n     * 光源位置\r\n     */\r\n    get position()\r\n    {\r\n        return this.shadowCamera.node3d.worldPosition;\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * 通过视窗摄像机进行更新\r\n     * @param viewCamera 视窗摄像机\r\n     */\r\n    updateShadowByCamera(scene: Scene, viewCamera: Camera, models: Renderable[])\r\n    {\r\n        var worldBounds: Box3 = models.reduce((pre: Box3, i) =>\r\n        {\r\n            var box = i.node3d.boundingBox.worldBounds;\r\n            if (!pre)\r\n                return box.clone();\r\n            pre.union(box);\r\n            return pre;\r\n        }, null) || new Box3(new Vector3(), new Vector3(1, 1, 1));\r\n\r\n        // \r\n        var center = worldBounds.getCenter();\r\n        var radius = worldBounds.getSize().length / 2;\r\n        // \r\n        const position = center.addTo(this.direction.scaleNumberTo(radius + this.shadowCameraNear).negate());\r\n        this.shadowCamera.node3d.x = position.x;\r\n        this.shadowCamera.node3d.y = position.y;\r\n        this.shadowCamera.node3d.z = position.z;\r\n        this.shadowCamera.node3d.lookAt(center, this.shadowCamera.node3d.matrix.getAxisY());\r\n        //\r\n        if (!this.orthographicLens)\r\n        {\r\n            this.shadowCamera.lens = this.orthographicLens = new OrthographicLens(radius, 1, this.shadowCameraNear, this.shadowCameraNear + radius * 2);\r\n        } else\r\n        {\r\n            serialization.setValue(this.orthographicLens, { size: radius, near: this.shadowCameraNear, far: this.shadowCameraNear + radius * 2 });\r\n        }\r\n    }\r\n}\r\n\r\nEntity.registerPrimitive(\"Directional light\", (g) =>\r\n{\r\n    g.addComponent(DirectionalLight);\r\n});\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        \"Directional light\": Entity;\r\n    }\r\n}","import { defaultRotationOrder, Vector4 } from \"@feng3d/math\";\r\nimport { lazy, LazyObject } from \"@feng3d/polyfill\";\r\nimport { Camera } from \"../../cameras/Camera\";\r\nimport { Uniforms } from \"@feng3d/renderer\";\r\nimport { GL } from \"@feng3d/renderer\";\r\nimport { Scene } from \"../../scene/Scene\";\r\n\r\n/**\r\n * 前向渲染器\r\n */\r\nexport class ForwardRenderer\r\n{\r\n    /**\r\n     * 渲染\r\n     */\r\n    draw(gl: GL, scene: Scene, camera: Camera)\r\n    {\r\n        var blenditems = scene.getPickCache(camera).blenditems;\r\n        var unblenditems = scene.getPickCache(camera).unblenditems;\r\n\r\n        var uniforms: LazyObject<Uniforms> = <any>{};\r\n        //\r\n        uniforms.u_projectionMatrix = camera.lens.matrix;\r\n        uniforms.u_viewProjection = camera.viewProjection;\r\n        uniforms.u_viewMatrix = camera.node3d.worldToLocalMatrix;\r\n        uniforms.u_cameraMatrix = camera.node3d.localToWorldMatrix;\r\n        uniforms.u_cameraPos = camera.node3d.worldPosition;\r\n        uniforms.u_skyBoxSize = camera.lens.far / Math.sqrt(3);\r\n        uniforms.u_scaleByDepth = camera.getScaleByDepth(1);\r\n        uniforms.u_sceneAmbientColor = scene.ambientColor;\r\n\r\n        var ctime = (Date.now() / 1000) % 3600;\r\n        uniforms._Time = new Vector4(ctime / 20, ctime, ctime * 2, ctime * 3);\r\n\r\n        unblenditems.concat(blenditems).forEach(renderable =>\r\n        {\r\n            //绘制\r\n            var renderAtomic = renderable.renderAtomic;\r\n\r\n            for (const key in uniforms)\r\n            {\r\n                renderAtomic.uniforms[key] = uniforms[key];\r\n            }\r\n            //\r\n            renderAtomic.uniforms.u_mvMatrix = () =>\r\n            {\r\n                return lazy.getvalue(renderAtomic.uniforms.u_modelMatrix).clone().append(lazy.getvalue(renderAtomic.uniforms.u_viewMatrix))\r\n            };\r\n            renderAtomic.uniforms.u_ITMVMatrix = () =>\r\n            {\r\n                return lazy.getvalue(renderAtomic.uniforms.u_mvMatrix).clone().invert().transpose()\r\n            };\r\n\r\n            renderAtomic.shaderMacro.RotationOrder = defaultRotationOrder;\r\n\r\n            renderable.beforeRender(renderAtomic, scene, camera);\r\n\r\n            gl.render(renderAtomic);\r\n        });\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 前向渲染器\r\n */\r\nexport const forwardRenderer = new ForwardRenderer();\r\n","import { CullFace, GL, RenderAtomic, Shader } from \"@feng3d/renderer\";\r\nimport { Camera } from \"../../cameras/Camera\";\r\nimport { CartoonComponent } from \"../../component/CartoonComponent\";\r\nimport { OutLineComponent } from \"../../component/OutLineComponent\";\r\nimport { Scene } from \"../../scene/Scene\";\r\n\r\n/**\r\n * 轮廓渲染器\r\n */\r\nexport class OutlineRenderer\r\n{\r\n    renderAtomic: RenderAtomic;\r\n\r\n    init()\r\n    {\r\n        if (!this.renderAtomic)\r\n        {\r\n            this.renderAtomic = new RenderAtomic();\r\n            var renderParams = this.renderAtomic.renderParams;\r\n            renderParams.enableBlend = false;\r\n            renderParams.cullFace = CullFace.FRONT;\r\n\r\n            this.renderAtomic.shader = new Shader(\"outline\");\r\n        }\r\n    }\r\n\r\n    draw(gl: GL, scene: Scene, camera: Camera)\r\n    {\r\n        var unblenditems = scene.getPickCache(camera).unblenditems;\r\n\r\n        this.init();\r\n\r\n        for (var i = 0; i < unblenditems.length; i++)\r\n        {\r\n            var renderable = unblenditems[i];\r\n            if (renderable.getComponent(OutLineComponent) || renderable.getComponent(CartoonComponent))\r\n            {\r\n                var renderAtomic = renderable.renderAtomic;\r\n                renderable.beforeRender(renderAtomic, scene, camera);\r\n\r\n                this.renderAtomic.next = renderAtomic;\r\n\r\n                gl.render(this.renderAtomic);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 轮廓渲染器\r\n */\r\nexport const outlineRenderer = new OutlineRenderer();\r\n","import { Rectangle, Vector3 } from \"@feng3d/math\";\r\nimport { GL, RenderAtomic, Shader } from \"@feng3d/renderer\";\r\nimport { Camera } from \"../../cameras/Camera\";\r\nimport { Renderable } from \"../../core/Renderable\";\r\nimport { DirectionalLight } from \"../../light/DirectionalLight\";\r\nimport { PointLight } from \"../../light/PointLight\";\r\nimport { ShadowType } from \"../../light/shadow/ShadowType\";\r\nimport { SpotLight } from \"../../light/SpotLight\";\r\nimport { Scene } from \"../../scene/Scene\";\r\nimport { FrameBufferObject } from \"../FrameBufferObject\";\r\n\r\nexport class ShadowRenderer\r\n{\r\n    private renderAtomic = new RenderAtomic();\r\n\r\n    /**\r\n     * 渲染\r\n     */\r\n    draw(gl: GL, scene: Scene, camera: Camera)\r\n    {\r\n        var pointLights = scene.activePointLights.filter((i) => i.shadowType != ShadowType.No_Shadows);\r\n        for (var i = 0; i < pointLights.length; i++)\r\n        {\r\n            pointLights[i].updateDebugShadowMap(scene, camera);\r\n            this.drawForPointLight(gl, pointLights[i], scene, camera);\r\n        }\r\n\r\n        var spotLights = scene.activeSpotLights.filter((i) => i.shadowType != ShadowType.No_Shadows);\r\n        for (var i = 0; i < spotLights.length; i++)\r\n        {\r\n            spotLights[i].updateDebugShadowMap(scene, camera);\r\n            this.drawForSpotLight(gl, spotLights[i], scene, camera);\r\n        }\r\n\r\n        var directionalLights = scene.activeDirectionalLights.filter((i) => i.shadowType != ShadowType.No_Shadows);\r\n        for (var i = 0; i < directionalLights.length; i++)\r\n        {\r\n            directionalLights[i].updateDebugShadowMap(scene, camera);\r\n            this.drawForDirectionalLight(gl, directionalLights[i], scene, camera);\r\n        }\r\n    }\r\n\r\n    private drawForSpotLight(gl: GL, light: SpotLight, scene: Scene, camera: Camera): any\r\n    {\r\n        FrameBufferObject.active(gl, light.frameBufferObject);\r\n\r\n        //\r\n        gl.viewport(0, 0, light.frameBufferObject.OFFSCREEN_WIDTH, light.frameBufferObject.OFFSCREEN_HEIGHT);\r\n        gl.clearColor(1.0, 1.0, 1.0, 1.0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        var shadowCamera = light.shadowCamera;\r\n        shadowCamera.node3d.localToWorldMatrix = light.node3d.localToWorldMatrix;\r\n\r\n        var renderAtomic = this.renderAtomic;\r\n\r\n        // 获取影响阴影图的渲染对象\r\n        var models = scene.getModelsByCamera(shadowCamera);\r\n        // 筛选投射阴影的渲染对象\r\n        var castShadowsModels = models.filter(i => i.castShadows);\r\n\r\n        //\r\n        renderAtomic.renderParams.useViewPort = true;\r\n        renderAtomic.renderParams.viewPort = new Rectangle(0, 0, light.frameBufferObject.OFFSCREEN_WIDTH, light.frameBufferObject.OFFSCREEN_HEIGHT);\r\n\r\n        //\r\n        renderAtomic.uniforms.u_projectionMatrix = shadowCamera.lens.matrix;\r\n        renderAtomic.uniforms.u_viewProjection = shadowCamera.viewProjection;\r\n        renderAtomic.uniforms.u_viewMatrix = shadowCamera.node3d.worldToLocalMatrix;\r\n        renderAtomic.uniforms.u_cameraMatrix = shadowCamera.node3d.localToWorldMatrix;\r\n        renderAtomic.uniforms.u_cameraPos = shadowCamera.node3d.worldPosition;\r\n        //\r\n        renderAtomic.uniforms.u_lightType = light.lightType;\r\n        renderAtomic.uniforms.u_lightPosition = light.position;\r\n        renderAtomic.uniforms.u_shadowCameraNear = light.shadowCameraNear;\r\n        renderAtomic.uniforms.u_shadowCameraFar = light.shadowCameraFar;\r\n\r\n        castShadowsModels.forEach(renderable =>\r\n        {\r\n            this.drawGameObject(gl, renderable, scene, camera);\r\n        });\r\n\r\n        light.frameBufferObject.deactive(gl);\r\n    }\r\n\r\n    private drawForPointLight(gl: GL, light: PointLight, scene: Scene, camera: Camera): any\r\n    {\r\n        FrameBufferObject.active(gl, light.frameBufferObject);\r\n\r\n        //\r\n        gl.viewport(0, 0, light.frameBufferObject.OFFSCREEN_WIDTH, light.frameBufferObject.OFFSCREEN_HEIGHT);\r\n        gl.clearColor(1.0, 1.0, 1.0, 1.0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        var vpWidth = light.shadowMapSize.x;\r\n        var vpHeight = light.shadowMapSize.y;\r\n\r\n        // These viewports map a cube-map onto a 2D texture with the\r\n        // following orientation:\r\n        //\r\n        //  xzXZ\r\n        //   y Y\r\n        //\r\n        // X - Positive x direction\r\n        // x - Negative x direction\r\n        // Y - Positive y direction\r\n        // y - Negative y direction\r\n        // Z - Positive z direction\r\n        // z - Negative z direction\r\n\r\n        // positive X\r\n        cube2DViewPorts[0].init(vpWidth * 2, vpHeight, vpWidth, vpHeight);\r\n        // negative X\r\n\r\n        cube2DViewPorts[1].init(0, vpHeight, vpWidth, vpHeight);\r\n        // positive Z\r\n        cube2DViewPorts[2].init(vpWidth * 3, vpHeight, vpWidth, vpHeight);\r\n        // negative Z\r\n        cube2DViewPorts[3].init(vpWidth, vpHeight, vpWidth, vpHeight);\r\n        // positive Y\r\n        cube2DViewPorts[4].init(vpWidth * 3, 0, vpWidth, vpHeight);\r\n        // negative Y\r\n        cube2DViewPorts[5].init(vpWidth, 0, vpWidth, vpHeight);\r\n\r\n        var shadowCamera = light.shadowCamera;\r\n        shadowCamera.node3d.x = light.node3d.x;\r\n        shadowCamera.node3d.y = light.node3d.y;\r\n        shadowCamera.node3d.z = light.node3d.z;\r\n\r\n        var renderAtomic = this.renderAtomic;\r\n\r\n        for (var face = 0; face < 6; face++)\r\n        {\r\n            shadowCamera.node3d.lookAt(light.position.addTo(cubeDirections[face]), cubeUps[face]);\r\n\r\n            // 获取影响阴影图的渲染对象\r\n            var models = scene.getModelsByCamera(shadowCamera);\r\n            // 筛选投射阴影的渲染对象\r\n            var castShadowsModels = models.filter(i => i.castShadows);\r\n\r\n            //\r\n            renderAtomic.renderParams.useViewPort = true;\r\n            renderAtomic.renderParams.viewPort = cube2DViewPorts[face];\r\n\r\n            //\r\n            renderAtomic.uniforms.u_projectionMatrix = shadowCamera.lens.matrix;\r\n            renderAtomic.uniforms.u_viewProjection = shadowCamera.viewProjection;\r\n            renderAtomic.uniforms.u_viewMatrix = shadowCamera.node3d.worldToLocalMatrix;\r\n            renderAtomic.uniforms.u_cameraMatrix = shadowCamera.node3d.localToWorldMatrix;\r\n            renderAtomic.uniforms.u_cameraPos = shadowCamera.node3d.worldPosition;\r\n            //\r\n            renderAtomic.uniforms.u_lightType = light.lightType;\r\n            renderAtomic.uniforms.u_lightPosition = light.position;\r\n            renderAtomic.uniforms.u_shadowCameraNear = light.shadowCameraNear;\r\n            renderAtomic.uniforms.u_shadowCameraFar = light.shadowCameraFar;\r\n\r\n            castShadowsModels.forEach(renderable =>\r\n            {\r\n                this.drawGameObject(gl, renderable, scene, camera);\r\n            });\r\n        }\r\n        light.frameBufferObject.deactive(gl);\r\n    }\r\n\r\n\r\n    private drawForDirectionalLight(gl: GL, light: DirectionalLight, scene: Scene, camera: Camera): any\r\n    {\r\n        // 获取影响阴影图的渲染对象\r\n        var models = scene.getPickByDirectionalLight(light);\r\n        // 筛选投射阴影的渲染对象\r\n        var castShadowsModels = models.filter(i => i.castShadows);\r\n\r\n        light.updateShadowByCamera(scene, camera, models);\r\n\r\n        FrameBufferObject.active(gl, light.frameBufferObject);\r\n\r\n        //\r\n        gl.viewport(0, 0, light.frameBufferObject.OFFSCREEN_WIDTH, light.frameBufferObject.OFFSCREEN_HEIGHT);\r\n        gl.clearColor(1.0, 1.0, 1.0, 1.0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        var shadowCamera = light.shadowCamera;\r\n\r\n        var renderAtomic = this.renderAtomic;\r\n        //\r\n        renderAtomic.renderParams.useViewPort = true;\r\n        renderAtomic.renderParams.viewPort = new Rectangle(0, 0, light.frameBufferObject.OFFSCREEN_WIDTH, light.frameBufferObject.OFFSCREEN_HEIGHT);\r\n        //\r\n        renderAtomic.uniforms.u_projectionMatrix = shadowCamera.lens.matrix;\r\n        renderAtomic.uniforms.u_viewProjection = shadowCamera.viewProjection;\r\n        renderAtomic.uniforms.u_viewMatrix = shadowCamera.node3d.worldToLocalMatrix;\r\n        renderAtomic.uniforms.u_cameraMatrix = shadowCamera.node3d.localToWorldMatrix;\r\n        renderAtomic.uniforms.u_cameraPos = shadowCamera.node3d.worldPosition;\r\n        //\r\n        renderAtomic.uniforms.u_lightType = light.lightType;\r\n        renderAtomic.uniforms.u_lightPosition = shadowCamera.node3d.worldPosition;\r\n        renderAtomic.uniforms.u_shadowCameraNear = light.shadowCameraNear;\r\n        renderAtomic.uniforms.u_shadowCameraFar = light.shadowCameraFar;\r\n        //\r\n        castShadowsModels.forEach(renderable =>\r\n        {\r\n            this.drawGameObject(gl, renderable, scene, camera);\r\n        });\r\n\r\n        light.frameBufferObject.deactive(gl);\r\n    }\r\n\r\n    /**\r\n     * 绘制3D对象\r\n     */\r\n    private drawGameObject(gl: GL, renderable: Renderable, scene: Scene, camera: Camera)\r\n    {\r\n        var renderAtomic = renderable.renderAtomic;\r\n        renderable.beforeRender(renderAtomic, scene, camera);\r\n        renderAtomic.shadowShader = renderAtomic.shadowShader || new Shader(\"shadow\");\r\n\r\n        //\r\n        this.renderAtomic.next = renderAtomic;\r\n        this.renderAtomic.renderParams.cullFace = renderAtomic.renderParams.cullFace;\r\n\r\n        // 使用shadowShader\r\n        this.renderAtomic.shader = renderAtomic.shadowShader;\r\n        gl.render(this.renderAtomic);\r\n        this.renderAtomic.shader = null;\r\n    }\r\n}\r\n\r\n/**\r\n * 阴影图渲染器\r\n */\r\nexport const shadowRenderer = new ShadowRenderer();\r\n\r\nvar cube2DViewPorts = [\r\n    new Rectangle(), new Rectangle(), new Rectangle(),\r\n    new Rectangle(), new Rectangle(), new Rectangle()\r\n];\r\nvar cubeUps = [\r\n    new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0),\r\n    new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, - 1)\r\n];\r\nvar cubeDirections = [\r\n    new Vector3(1, 0, 0), new Vector3(- 1, 0, 0), new Vector3(0, 0, 1),\r\n    new Vector3(0, 0, - 1), new Vector3(0, 1, 0), new Vector3(0, - 1, 0)\r\n];\r\n\r\ndeclare module \"@feng3d/renderer\"\r\n{\r\n    export interface RenderAtomic\r\n    {\r\n        shadowShader: Shader;\r\n    }\r\n}\r\n","import { Color4 } from \"@feng3d/math\";\r\nimport { lazy } from \"@feng3d/polyfill\";\r\nimport { GL, Index, RenderAtomic, RenderMode, Shader } from \"@feng3d/renderer\";\r\nimport { Camera } from \"../../cameras/Camera\";\r\nimport { WireframeComponent } from \"../../component/WireframeComponent\";\r\nimport { Renderable } from \"../../core/Renderable\";\r\nimport { Scene } from \"../../scene/Scene\";\r\n\r\nexport class WireframeRenderer\r\n{\r\n    private renderAtomic: RenderAtomic;\r\n\r\n    init()\r\n    {\r\n        if (!this.renderAtomic)\r\n        {\r\n            this.renderAtomic = new RenderAtomic();\r\n            var renderParams = this.renderAtomic.renderParams;\r\n            renderParams.renderMode = RenderMode.LINES;\r\n            // renderParams.depthMask = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 渲染\r\n     */\r\n    draw(gl: GL, scene: Scene, camera: Camera)\r\n    {\r\n        var unblenditems = scene.getPickCache(camera).unblenditems;\r\n\r\n        var wireframes = unblenditems.reduce((pv: { wireframe: WireframeComponent, renderable: Renderable }[], cv) => { var wireframe = cv.getComponent(WireframeComponent); if (wireframe) pv.push({ wireframe: wireframe, renderable: cv }); return pv; }, [])\r\n\r\n        if (wireframes.length == 0)\r\n            return;\r\n\r\n        wireframes.forEach(element =>\r\n        {\r\n            this.drawGameObject(gl, element.renderable, scene, camera, element.wireframe.color);            //\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 绘制3D对象\r\n     */\r\n    drawGameObject(gl: GL, renderable: Renderable, scene: Scene, camera: Camera, wireframeColor = new Color4())\r\n    {\r\n        var renderAtomic = renderable.renderAtomic;\r\n        renderable.beforeRender(renderAtomic, scene, camera);\r\n\r\n        var renderMode = lazy.getvalue(renderAtomic.renderParams.renderMode);\r\n        if (renderMode == RenderMode.POINTS\r\n            || renderMode == RenderMode.LINES\r\n            || renderMode == RenderMode.LINE_LOOP\r\n            || renderMode == RenderMode.LINE_STRIP\r\n        )\r\n            return;\r\n\r\n        this.init();\r\n\r\n        var uniforms = this.renderAtomic.uniforms;\r\n        //\r\n        uniforms.u_projectionMatrix = camera.lens.matrix;\r\n        uniforms.u_viewProjection = camera.viewProjection;\r\n        uniforms.u_viewMatrix = camera.node3d.worldToLocalMatrix;\r\n        uniforms.u_cameraMatrix = camera.node3d.localToWorldMatrix;\r\n        uniforms.u_cameraPos = camera.node3d.worldPosition;\r\n        uniforms.u_skyBoxSize = camera.lens.far / Math.sqrt(3);\r\n        uniforms.u_scaleByDepth = camera.getScaleByDepth(1);\r\n\r\n        //\r\n        this.renderAtomic.next = renderAtomic;\r\n\r\n        //\r\n        var oldIndexBuffer = renderAtomic.indexBuffer;\r\n        if (oldIndexBuffer.count < 3) return;\r\n        if (!renderAtomic.wireframeindexBuffer || renderAtomic.wireframeindexBuffer.count != 2 * oldIndexBuffer.count)\r\n        {\r\n            var wireframeindices: number[] = [];\r\n            var indices = lazy.getvalue(oldIndexBuffer.indices);\r\n            for (var i = 0; i < indices.length; i += 3)\r\n            {\r\n                wireframeindices.push(\r\n                    indices[i], indices[i + 1],\r\n                    indices[i], indices[i + 2],\r\n                    indices[i + 1], indices[i + 2],\r\n                );\r\n            }\r\n            renderAtomic.wireframeindexBuffer = new Index();\r\n            renderAtomic.wireframeindexBuffer.indices = wireframeindices;\r\n        }\r\n        renderAtomic.wireframeShader = renderAtomic.wireframeShader || new Shader(\"wireframe\");\r\n        this.renderAtomic.indexBuffer = renderAtomic.wireframeindexBuffer;\r\n\r\n        this.renderAtomic.uniforms.u_wireframeColor = wireframeColor;\r\n\r\n        //\r\n        this.renderAtomic.shader = renderAtomic.wireframeShader;\r\n        gl.render(this.renderAtomic);\r\n        this.renderAtomic.shader = null;\r\n        //\r\n    }\r\n}\r\n\r\n/**\r\n * 线框渲染器\r\n */\r\nexport const wireframeRenderer = new WireframeRenderer();\r\n\r\ndeclare module \"@feng3d/renderer\"\r\n{\r\n    export interface RenderAtomic\r\n    {\r\n        /**\r\n         * 顶点索引缓冲\r\n         */\r\n        wireframeindexBuffer: Index;\r\n\r\n        wireframeShader: Shader;\r\n    }\r\n}","import { PerspectiveLens } from \"../cameras/lenses/PerspectiveLens\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { Vector2 } from \"@feng3d/math\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { Light } from \"./Light\";\r\nimport { LightType } from \"./LightType\";\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        \"Point light\": Entity;\r\n    }\r\n}\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { PointLight: PointLight; }\r\n}\r\n\r\n/**\r\n * 点光源\r\n */\r\n@AddComponentMenu(\"Rendering/PointLight\")\r\n@RegisterComponent()\r\nexport class PointLight extends Light\r\n{\r\n    __class__: \"feng3d.PointLight\";\r\n\r\n    lightType = LightType.Point;\r\n\r\n    /**\r\n     * 光照范围\r\n     */\r\n    @oav()\r\n    @serialize\r\n    get range()\r\n    {\r\n        return this._range;\r\n    }\r\n    set range(v)\r\n    {\r\n        if (this._range == v) return;\r\n        this._range = v;\r\n        this.invalidRange();\r\n    }\r\n    private _range = 10;\r\n\r\n    /**\r\n     * 阴影图尺寸\r\n     */\r\n    get shadowMapSize()\r\n    {\r\n        return this.shadowMap.getSize().multiply(new Vector2(1 / 4, 1 / 2));\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.shadowCamera.lens = new PerspectiveLens(90, 1, 0.1, this.range);\r\n    }\r\n\r\n    private invalidRange()\r\n    {\r\n        if (this.shadowCamera)\r\n            this.shadowCamera.lens.far = this.range;\r\n    }\r\n}\r\n\r\nEntity.registerPrimitive(\"Point light\", (g) =>\r\n{\r\n    g.addComponent(PointLight);\r\n});\r\n\r\n","import { oav } from \"@feng3d/objectview\";\r\nimport { mathUtil } from \"@feng3d/polyfill\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { PerspectiveLens } from \"../cameras/lenses/PerspectiveLens\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { Light } from \"./Light\";\r\nimport { LightType } from \"./LightType\";\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        \"Spot light\": Entity;\r\n    }\r\n}\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { SpotLight: SpotLight; }\r\n}\r\n\r\n/**\r\n * 聚光灯光源\r\n */\r\n@RegisterComponent()\r\nexport class SpotLight extends Light\r\n{\r\n    lightType = LightType.Spot;\r\n\r\n    /**\r\n     * 光照范围\r\n     */\r\n    @oav()\r\n    @serialize\r\n    @watch(\"_invalidRange\")\r\n    range = 10;\r\n\r\n    /**\r\n     * \r\n     */\r\n    @oav()\r\n    @serialize\r\n    @watch(\"_invalidAngle\")\r\n    angle = 60;\r\n\r\n    /**\r\n     * 半影.\r\n     */\r\n    @oav()\r\n    @serialize\r\n    penumbra = 0;\r\n\r\n    /**\r\n     * 椎体cos值\r\n     */\r\n    get coneCos()\r\n    {\r\n        return Math.cos(this.angle * 0.5 * mathUtil.DEG2RAD);\r\n    }\r\n\r\n    get penumbraCos()\r\n    {\r\n        return Math.cos(this.angle * 0.5 * mathUtil.DEG2RAD * (1 - this.penumbra));\r\n    }\r\n\r\n    private perspectiveLens: PerspectiveLens;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.perspectiveLens = this.shadowCamera.lens = new PerspectiveLens(this.angle, 1, 0.1, this.range);\r\n    }\r\n\r\n    private _invalidRange()\r\n    {\r\n        if (this.shadowCamera)\r\n            this.shadowCamera.lens.far = this.range;\r\n    }\r\n\r\n    private _invalidAngle()\r\n    {\r\n        if (this.perspectiveLens)\r\n            this.perspectiveLens.fov = this.angle;\r\n    }\r\n}\r\n\r\nEntity.registerPrimitive(\"Spot light\", (g) =>\r\n{\r\n    g.addComponent(SpotLight);\r\n});","import { Camera } from \"../cameras/Camera\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { Component3D } from \"../component/Component3D\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { TextureCube } from \"../textures/TextureCube\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { SkyBox: SkyBox; }\r\n}\r\n\r\n/**\r\n * 天空盒组件\r\n */\r\n@AddComponentMenu(\"SkyBox/SkyBox\")\r\n@RegisterComponent()\r\nexport class SkyBox extends Component3D\r\n{\r\n    __class__: \"feng3d.SkyBox\";\r\n\r\n    @serialize\r\n    @oav({ component: \"OAVPick\", componentParam: { accepttype: \"texturecube\", datatype: \"texturecube\" } })\r\n    s_skyboxTexture: TextureCube = TextureCube.default;\r\n\r\n    beforeRender(renderAtomic: RenderAtomic, scene: Scene, camera: Camera)\r\n    {\r\n        renderAtomic.uniforms.s_skyboxTexture = () => this.s_skyboxTexture;\r\n    }\r\n}\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport { Renderable } from \"../core/Renderable\";\r\nimport { Scene } from \"./Scene\";\r\n\r\n/**\r\n * 场景拾取缓存\r\n */\r\nexport class ScenePickCache\r\n{\r\n    private scene: Scene\r\n    private camera: Camera;\r\n\r\n    //\r\n    private _activeModels: Renderable[];\r\n    private _blenditems: Renderable[];\r\n    private _unblenditems: Renderable[];\r\n\r\n    constructor(scene: Scene, camera: Camera)\r\n    {\r\n        this.scene = scene;\r\n        this.camera = camera;\r\n    }\r\n\r\n    /**\r\n     * 获取需要渲染的对象\r\n     * \r\n     * #### 渲染需求条件\r\n     * 1. visible == true\r\n     * 1. 在摄像机视锥内\r\n     * 1. model.enabled == true\r\n     * \r\n     * @param gameObject \r\n     * @param camera \r\n     */\r\n    get activeModels()\r\n    {\r\n        if (this._activeModels)\r\n            return this._activeModels;\r\n\r\n        var models: Renderable[] = this._activeModels = [];\r\n        var frustum = this.camera.frustum;\r\n\r\n        var node3ds = [this.scene.node3d];\r\n        while (node3ds.length > 0)\r\n        {\r\n            var node3d = node3ds.pop();\r\n\r\n            if (!node3d.visible)\r\n                continue;\r\n            var model = node3d.getComponent(Renderable);\r\n            if (model && model.enabled)\r\n            {\r\n                if (model.selfWorldBounds)\r\n                {\r\n                    if (frustum.intersectsBox(model.selfWorldBounds))\r\n                        models.push(model);\r\n                }\r\n            }\r\n            node3ds = node3ds.concat(node3d.children);\r\n        }\r\n        return models;\r\n    }\r\n\r\n    /**\r\n     * 半透明渲染对象\r\n     */\r\n    get blenditems()\r\n    {\r\n        if (this._blenditems)\r\n            return this._blenditems;\r\n\r\n        var models = this.activeModels;\r\n        var camerapos = this.camera.node3d.worldPosition;\r\n\r\n        var blenditems = this._blenditems = models.filter((item) =>\r\n        {\r\n            return item.material.renderParams.enableBlend;\r\n        }).sort((b, a) => a.node3d.worldPosition.subTo(camerapos).lengthSquared - b.node3d.worldPosition.subTo(camerapos).lengthSquared);\r\n\r\n        return blenditems;\r\n    }\r\n\r\n    /**\r\n     * 半透明渲染对象\r\n     */\r\n    get unblenditems()\r\n    {\r\n        if (this._unblenditems)\r\n            return this._unblenditems;\r\n\r\n        var models = this.activeModels;\r\n        var camerapos = this.camera.node3d.worldPosition;\r\n\r\n        var unblenditems = this._unblenditems = models.filter((item) =>\r\n        {\r\n            return !item.material.renderParams.enableBlend;\r\n        }).sort((a, b) => a.node3d.worldPosition.subTo(camerapos).lengthSquared - b.node3d.worldPosition.subTo(camerapos).lengthSquared);\r\n\r\n        return unblenditems;\r\n    }\r\n\r\n    clear()\r\n    {\r\n        this._blenditems = null;\r\n        this._unblenditems = null;\r\n        this._activeModels = null;\r\n    }\r\n}\r\n","import { Animation } from \"../animation/Animation\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { Behaviour } from \"../component/Behaviour\";\r\nimport { Component, RegisterComponent } from \"../component/Component\";\r\nimport { Component3D, Component3DEventMap } from \"../component/Component3D\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { HideFlags } from \"../core/HideFlags\";\r\nimport { Node3D } from \"../core/Node3D\";\r\nimport { Renderable } from \"../core/Renderable\";\r\nimport { RunEnvironment } from \"../core/RunEnvironment\";\r\nimport { DirectionalLight } from \"../light/DirectionalLight\";\r\nimport { PointLight } from \"../light/PointLight\";\r\nimport { SpotLight } from \"../light/SpotLight\";\r\nimport { Color4 } from \"@feng3d/math\";\r\nimport { Ray3 } from \"@feng3d/math\";\r\nimport { RenderMode } from \"@feng3d/renderer\";\r\nimport { SkyBox } from \"../skybox/SkyBox\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { ticker } from \"../utils/Ticker\";\r\nimport { ScenePickCache } from \"./ScenePickCache\";\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    /**\r\n     * 组件事件\r\n     */\r\n    export interface EntityEventMap\r\n    {\r\n        addToScene: Entity;\r\n        removeFromScene: Entity;\r\n        addComponentToScene: Component;\r\n    }\r\n}\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { Scene: Scene; }\r\n}\r\n\r\n/**\r\n * 3D场景\r\n */\r\n@RegisterComponent({ single: true })\r\nexport class Scene extends Component3D\r\n{\r\n\r\n    __class__: \"feng3d.Scene\";\r\n\r\n    /**\r\n     * 背景颜色\r\n     */\r\n    @serialize\r\n    @oav()\r\n    background = new Color4(0, 0, 0, 1);\r\n\r\n    /**\r\n     * 环境光强度\r\n     */\r\n    @serialize\r\n    @oav()\r\n    ambientColor = new Color4();\r\n\r\n    /**\r\n     * 指定所运行环境\r\n     * \r\n     * 控制运行符合指定环境场景中所有 Behaviour.update 方法\r\n     * \r\n     * 用于处理某些脚本只在在feng3d引擎或者编辑器中运行的问题。例如 FPSController 默认只在feng3d中运行，在编辑器模式下不会运行。\r\n     */\r\n    runEnvironment = RunEnvironment.feng3d;\r\n\r\n    /**\r\n     * 鼠标射线，在渲染时被设置\r\n     */\r\n    mouseRay3D: Ray3;\r\n\r\n    init()\r\n    {\r\n        super.init();\r\n        this.entity.hideFlags = this.entity.hideFlags | HideFlags.Hide;\r\n        this.entity.hideFlags = this.entity.hideFlags | HideFlags.DontTransform;\r\n        //\r\n        this.node3d._setScene(this);\r\n    }\r\n\r\n    update(interval?: number)\r\n    {\r\n        interval = interval || (1000 / ticker.frameRate);\r\n\r\n        this._mouseCheckTransforms = null;\r\n        this._models = null;\r\n        this._visibleAndEnabledModels = null;\r\n        this._skyBoxs = null;\r\n        this._activeSkyBoxs = null;\r\n        this._directionalLights = null;\r\n        this._activeDirectionalLights = null;\r\n        this._pointLights = null;\r\n        this._activePointLights = null;\r\n        this._spotLights = null;\r\n        this._activeSpotLights = null;\r\n        this._animations = null;\r\n        this._activeAnimations = null;\r\n        this._behaviours = null;\r\n        this._activeBehaviours = null;\r\n\r\n        // 每帧清理拾取缓存\r\n        this._pickMap.forEach(item => item.clear());\r\n\r\n        this.behaviours.forEach(element =>\r\n        {\r\n            if (element.isVisibleAndEnabled && Boolean(this.runEnvironment & element.runEnvironment))\r\n                element.update(interval);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 所有 Model\r\n     */\r\n    get models()\r\n    {\r\n        this._models = this._models || this.node3d.getComponentsInChildren(Renderable);\r\n        return this._models\r\n    }\r\n\r\n    /**\r\n     * 所有 可见且开启的 Model\r\n     */\r\n    get visibleAndEnabledModels()\r\n    {\r\n        return this._visibleAndEnabledModels = this._visibleAndEnabledModels || this.models.filter(i => i.isVisibleAndEnabled)\r\n    }\r\n\r\n    /**\r\n     * 所有 SkyBox\r\n     */\r\n    get skyBoxs()\r\n    {\r\n        this._skyBoxs = this._skyBoxs || this.node3d.getComponentsInChildren(SkyBox);\r\n        return this._skyBoxs;\r\n    }\r\n\r\n    get activeSkyBoxs()\r\n    {\r\n        return this._activeSkyBoxs = this._activeSkyBoxs || this.skyBoxs.filter(i => i.node3d.globalVisible);\r\n    }\r\n\r\n    get directionalLights()\r\n    {\r\n        return this._directionalLights = this._directionalLights || this.node3d.getComponentsInChildren(DirectionalLight);\r\n    }\r\n\r\n    get activeDirectionalLights()\r\n    {\r\n        return this._activeDirectionalLights = this._activeDirectionalLights || this.directionalLights.filter(i => i.isVisibleAndEnabled);\r\n    }\r\n\r\n    get pointLights()\r\n    {\r\n        return this._pointLights = this._pointLights || this.node3d.getComponentsInChildren(PointLight);\r\n    }\r\n\r\n    get activePointLights()\r\n    {\r\n        return this._activePointLights = this._activePointLights || this.pointLights.filter(i => i.isVisibleAndEnabled);\r\n    }\r\n\r\n    get spotLights()\r\n    {\r\n        return this._spotLights = this._spotLights || this.node3d.getComponentsInChildren(SpotLight);\r\n    }\r\n\r\n    get activeSpotLights()\r\n    {\r\n        return this._activeSpotLights = this._activeSpotLights || this.spotLights.filter(i => i.isVisibleAndEnabled);\r\n    }\r\n\r\n    get animations()\r\n    {\r\n        return this._animations = this._animations || this.node3d.getComponentsInChildren(Animation);\r\n    }\r\n\r\n    get activeAnimations()\r\n    {\r\n        return this._activeAnimations = this._activeAnimations || this.animations.filter(i => i.isVisibleAndEnabled);\r\n    }\r\n\r\n    get behaviours()\r\n    {\r\n        this._behaviours = this._behaviours || this.node3d.getComponentsInChildren(Behaviour);\r\n        return this._behaviours;\r\n    }\r\n\r\n    get activeBehaviours()\r\n    {\r\n        return this._activeBehaviours = this._activeBehaviours || this.behaviours.filter(i => i.isVisibleAndEnabled);\r\n    }\r\n\r\n    get mouseCheckObjects(): Node3D[]\r\n    {\r\n        if (this._mouseCheckTransforms)\r\n            return this._mouseCheckTransforms;\r\n\r\n        var checkList = this.node3d.getChildren();\r\n        this._mouseCheckTransforms = [];\r\n        var i = 0;\r\n        //获取所有需要拾取的对象并分层存储\r\n        while (i < checkList.length)\r\n        {\r\n            var checkObject = checkList[i++];\r\n            if (checkObject.mouseEnabled)\r\n            {\r\n                if (checkObject.getComponents(Renderable))\r\n                {\r\n                    this._mouseCheckTransforms.push(checkObject);\r\n                }\r\n                checkList = checkList.concat(checkObject.getChildren());\r\n            }\r\n        }\r\n        return this._mouseCheckTransforms;\r\n    }\r\n\r\n    /**\r\n     * 获取拾取缓存\r\n     * @param camera \r\n     */\r\n    getPickCache(camera: Camera)\r\n    {\r\n        if (this._pickMap.get(camera))\r\n            return this._pickMap.get(camera);\r\n        var pick = new ScenePickCache(this, camera);\r\n        this._pickMap.set(camera, pick);\r\n        return pick;\r\n    }\r\n\r\n    /**\r\n     * 获取接收光照渲染对象列表\r\n     * @param light \r\n     */\r\n    getPickByDirectionalLight(light: DirectionalLight)\r\n    {\r\n        var openlist = [this.node3d];\r\n        var targets: Renderable[] = [];\r\n        while (openlist.length > 0)\r\n        {\r\n            var item = openlist.shift();\r\n            if (!item.visible) continue;\r\n            var model = item.getComponent(Renderable);\r\n            if (model && (model.castShadows || model.receiveShadows)\r\n                && !model.material.renderParams.enableBlend\r\n                && model.material.renderParams.renderMode == RenderMode.TRIANGLES\r\n            )\r\n            {\r\n                targets.push(model);\r\n            }\r\n            item.children.forEach(element =>\r\n            {\r\n                openlist.push(element);\r\n            });\r\n        }\r\n        return targets;\r\n    }\r\n\r\n    /**\r\n     * 获取 可被摄像机看见的 Model 列表\r\n     * @param camera \r\n     */\r\n    getModelsByCamera(camera: Camera)\r\n    {\r\n        var frustum = camera.frustum;\r\n\r\n        var results = this.visibleAndEnabledModels.filter(i =>\r\n        {\r\n            var model = i.getComponent(Renderable);\r\n            if (model.selfWorldBounds)\r\n            {\r\n                if (frustum.intersectsBox(model.selfWorldBounds))\r\n                    return true;\r\n            }\r\n            return false;\r\n        });\r\n        return results;\r\n    }\r\n\r\n    //\r\n    private _mouseCheckTransforms: Node3D[];\r\n    private _models: Renderable[];\r\n    private _visibleAndEnabledModels: Renderable[];\r\n    private _skyBoxs: SkyBox[];\r\n    private _activeSkyBoxs: SkyBox[];\r\n    private _directionalLights: DirectionalLight[];\r\n    private _activeDirectionalLights: DirectionalLight[];\r\n    private _pointLights: PointLight[];\r\n    private _activePointLights: PointLight[];\r\n    private _spotLights: SpotLight[];\r\n    private _activeSpotLights: SpotLight[];\r\n    private _animations: Animation[];\r\n    private _activeAnimations: Animation[];\r\n    private _behaviours: Behaviour[];\r\n    private _activeBehaviours: Behaviour[];\r\n    private _pickMap = new Map<Camera, ScenePickCache>();\r\n}\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport { Attribute } from \"@feng3d/renderer\";\r\nimport { Index } from \"@feng3d/renderer\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { Shader } from \"@feng3d/renderer\";\r\nimport { CullFace } from \"@feng3d/renderer\";\r\nimport { GL } from \"@feng3d/renderer\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { SkyBox } from \"./SkyBox\";\r\n\r\n/**\r\n * 天空盒渲染器\r\n */\r\nexport class SkyBoxRenderer\r\n{\r\n    private renderAtomic: RenderAtomic;\r\n\r\n    init()\r\n    {\r\n        if (!this.renderAtomic)\r\n        {\r\n            var renderAtomic = this.renderAtomic = new RenderAtomic();\r\n            //八个顶点，32个number\r\n            var vertexPositionData = [ //\r\n                -1, 1, -1,//\r\n                1, 1, -1, //\r\n                1, 1, 1, //\r\n                -1, 1, 1, //\r\n                -1, -1, -1,//\r\n                1, -1, -1, //\r\n                1, -1, 1,//\r\n                -1, -1, 1 //\r\n            ];\r\n            renderAtomic.attributes.a_position = new Attribute(\"a_position\", vertexPositionData, 3);\r\n            //6个面，12个三角形，36个顶点索引\r\n            var indices = [ //\r\n                0, 1, 2, 2, 3, 0, //\r\n                6, 5, 4, 4, 7, 6, //\r\n                2, 6, 7, 7, 3, 2, //\r\n                4, 5, 1, 1, 0, 4, //\r\n                4, 0, 3, 3, 7, 4, //\r\n                2, 1, 5, 5, 6, 2 //\r\n            ];\r\n            renderAtomic.indexBuffer = new Index();\r\n            renderAtomic.indexBuffer.indices = indices;\r\n            //\r\n            var renderParams = renderAtomic.renderParams;\r\n            renderParams.cullFace = CullFace.NONE;\r\n            //\r\n\r\n            renderAtomic.shader = new Shader(\"skybox\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绘制场景中天空盒\r\n     * @param gl \r\n     * @param scene 场景\r\n     * @param camera 摄像机\r\n     */\r\n    draw(gl: GL, scene: Scene, camera: Camera)\r\n    {\r\n        var skybox = scene.activeSkyBoxs[0];\r\n        this.drawSkyBox(gl, skybox, scene, camera);\r\n    }\r\n\r\n    /**\r\n     * 绘制天空盒\r\n     * @param gl \r\n     * @param skybox 天空盒\r\n     * @param camera 摄像机\r\n     */\r\n    drawSkyBox(gl: GL, skybox: SkyBox, scene: Scene, camera: Camera)\r\n    {\r\n        if (!skybox) return;\r\n\r\n        this.init();\r\n\r\n        //\r\n        skybox.beforeRender(this.renderAtomic, scene, camera);\r\n\r\n        //\r\n        this.renderAtomic.uniforms.u_viewProjection = camera.viewProjection;\r\n        this.renderAtomic.uniforms.u_viewMatrix = camera.node3d.worldToLocalMatrix\r\n        this.renderAtomic.uniforms.u_cameraMatrix = camera.node3d.localToWorldMatrix;\r\n        this.renderAtomic.uniforms.u_cameraPos = camera.node3d.worldPosition;\r\n        this.renderAtomic.uniforms.u_skyBoxSize = camera.lens.far / Math.sqrt(3);\r\n\r\n        gl.render(this.renderAtomic);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 天空盒渲染器\r\n */\r\nexport const skyboxRenderer = new SkyBoxRenderer();\r\n","import { Ray3, Rectangle, Vector2, Vector3 } from \"@feng3d/math\";\r\nimport { GL } from \"@feng3d/renderer\";\r\nimport { serialization } from \"@feng3d/serialization\";\r\nimport { windowEventProxy } from \"@feng3d/shortcut\";\r\nimport { AudioListener } from \"../audio/AudioListener\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { Component3DEventMap } from \"../component/Component3D\";\r\nimport { DirectionalLight } from \"../light/DirectionalLight\";\r\nimport { ShadowType } from \"../light/shadow/ShadowType\";\r\nimport { forwardRenderer } from \"../render/renderer/ForwardRenderer\";\r\nimport { outlineRenderer } from \"../render/renderer/OutlineRenderer\";\r\nimport { shadowRenderer } from \"../render/renderer/ShadowRenderer\";\r\nimport { wireframeRenderer } from \"../render/renderer/WireframeRenderer\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { skyboxRenderer } from \"../skybox/SkyboxRenderer\";\r\nimport { ticker } from \"../utils/Ticker\";\r\nimport { Entity } from \"./Entity\";\r\nimport { Feng3dObject } from \"./Feng3dObject\";\r\nimport { Mouse3DManager, WindowMouseInput } from \"./Mouse3DManager\";\r\nimport { Node3D } from \"./Node3D\";\r\nimport { Renderable } from \"./Renderable\";\r\n\r\ndeclare global\r\n{\r\n    interface HTMLCanvasElement\r\n    {\r\n        gl: GL;\r\n    }\r\n}\r\n\r\n/**\r\n * 视图\r\n */\r\nexport class View extends Feng3dObject\r\n{\r\n    //\r\n    canvas: HTMLCanvasElement;\r\n\r\n    private _contextAttributes: WebGLContextAttributes = { stencil: true };\r\n\r\n    /**\r\n     * 摄像机\r\n     */\r\n    get camera()\r\n    {\r\n        if (!this._camera)\r\n        {\r\n            var cameras = this.scene.getComponentsInChildren(Camera);\r\n            if (cameras.length == 0)\r\n            {\r\n                this._camera = serialization.setValue(new Entity(), { name: \"defaultCamera\" }).addComponent(Camera);\r\n                this.scene.node3d.addChild(this._camera.node3d);\r\n            } else\r\n            {\r\n                this._camera = cameras[0];\r\n            }\r\n        }\r\n        return this._camera;\r\n    }\r\n    set camera(v)\r\n    {\r\n        this._camera = v;\r\n    }\r\n    private _camera: Camera;\r\n    /**\r\n     * 3d场景\r\n     */\r\n    scene: Scene;\r\n    /**\r\n     * 根结点\r\n     */\r\n    get root(): Node3D<Component3DEventMap>\r\n    {\r\n        return this.scene.node3d;\r\n    }\r\n\r\n    get gl()\r\n    {\r\n        if (!this.canvas.gl)\r\n            this.canvas.gl = GL.getGL(this.canvas, this._contextAttributes);\r\n        return this.canvas.gl;\r\n    }\r\n\r\n    /**\r\n     * 鼠标在3D视图中的位置\r\n     */\r\n    get mousePos()\r\n    {\r\n        var clientRect = this.canvas.getBoundingClientRect();\r\n        this._mousePos.x = windowEventProxy.clientX - clientRect.left;\r\n        this._mousePos.y = windowEventProxy.clientY - clientRect.top;\r\n        return this._mousePos;\r\n    }\r\n    private _mousePos = new Vector2();\r\n\r\n    /**\r\n     * 视窗区域\r\n     */\r\n    get viewRect()\r\n    {\r\n        var clientRect = this.canvas.getBoundingClientRect();\r\n        this._viewRect.x = clientRect.left;\r\n        this._viewRect.y = clientRect.top;\r\n        this._viewRect.width = clientRect.width;\r\n        this._viewRect.height = clientRect.height\r\n        return this._viewRect;\r\n    }\r\n    private _viewRect = new Rectangle();\r\n\r\n    /**\r\n     * 获取鼠标射线（与鼠标重叠的摄像机射线）\r\n     */\r\n    get mouseRay3D()\r\n    {\r\n        var gpuPos = this.screenToGpuPosition(this.mousePos);\r\n        this._mouseRay3D = this.camera.getRay3D(gpuPos.x, gpuPos.y);\r\n        return this._mouseRay3D;\r\n    }\r\n    private _mouseRay3D: Ray3;\r\n\r\n    /**\r\n     * 鼠标事件管理\r\n     */\r\n    mouse3DManager: Mouse3DManager;\r\n\r\n    protected contextLost = false;\r\n\r\n    /**\r\n     * 构建3D视图\r\n     * @param canvas    画布\r\n     * @param scene     3D场景\r\n     * @param camera    摄像机\r\n     */\r\n    constructor(canvas?: HTMLCanvasElement, scene?: Scene, camera?: Camera, contextAttributes?: WebGLContextAttributes)\r\n    {\r\n        super();\r\n        if (!canvas)\r\n        {\r\n            canvas = document.createElement(\"canvas\");\r\n            canvas.id = \"glcanvas\";\r\n            canvas.style.position = \"fixed\";\r\n            canvas.style.left = \"0px\";\r\n            canvas.style.top = \"0px\";\r\n            canvas.style.width = \"100%\";\r\n            canvas.style.height = \"100%\";\r\n            document.body.appendChild(canvas);\r\n        }\r\n        console.assert(canvas instanceof HTMLCanvasElement, `canvas参数必须为 HTMLCanvasElement 类型！`);\r\n\r\n        this.canvas = canvas;\r\n        if (contextAttributes)\r\n        {\r\n            Object.assign(this._contextAttributes, contextAttributes);\r\n        }\r\n\r\n        canvas.addEventListener(\"webglcontextlost\", (event) =>\r\n        {\r\n            event.preventDefault();\r\n            this.contextLost = true;\r\n            console.log('GraphicsDevice: WebGL context lost.');\r\n        }, false);\r\n\r\n        canvas.addEventListener(\"webglcontextrestored\", () =>\r\n        {\r\n            this.contextLost = false;\r\n            console.log('GraphicsDevice: WebGL context restored.');\r\n        }, false);\r\n\r\n        this.scene = scene || serialization.setValue(new Entity(), { name: \"scene\" }).addComponent(Scene);\r\n        this.camera = camera;\r\n\r\n        this.start();\r\n\r\n        this.mouse3DManager = new Mouse3DManager(new WindowMouseInput(), () => this.viewRect);\r\n    }\r\n\r\n    /**\r\n     * 修改canvas尺寸\r\n     * @param width 宽度\r\n     * @param height 高度\r\n     */\r\n    setSize(width: number, height: number)\r\n    {\r\n        this.canvas.width = width;\r\n        this.canvas.height = height;\r\n        this.canvas.style.width = width + 'px';\r\n        this.canvas.style.height = height + 'px';\r\n    }\r\n\r\n    start()\r\n    {\r\n        ticker.onframe(this.update, this);\r\n    }\r\n\r\n    stop()\r\n    {\r\n        ticker.offframe(this.update, this);\r\n    }\r\n\r\n    update(interval?: number)\r\n    {\r\n        this.render(interval);\r\n        this.mouse3DManager.selectedTransform = this.selectedTransform;\r\n    }\r\n\r\n    /**\r\n     * 绘制场景\r\n     */\r\n    render(interval?: number)\r\n    {\r\n        if (!this.scene) return;\r\n        if (this.contextLost) return;\r\n\r\n        this.scene.update(interval);\r\n\r\n        this.canvas.width = this.canvas.clientWidth;\r\n        this.canvas.height = this.canvas.clientHeight;\r\n        if (this.canvas.width * this.canvas.height == 0) return;\r\n\r\n        this.camera.lens.aspect = this.viewRect.width / this.viewRect.height;\r\n\r\n        this.scene.mouseRay3D = this.mouseRay3D;\r\n\r\n        // 默认渲染\r\n        this.gl.colorMask(true, true, true, true);\r\n        this.gl.clearColor(this.scene.background.r, this.scene.background.g, this.scene.background.b, this.scene.background.a);\r\n        this.gl.clearStencil(0);\r\n        this.gl.clearDepth(1);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n\r\n        // 鼠标拾取渲染\r\n        this.selectedTransform = this.mouse3DManager.pick(this, this.scene, this.camera);\r\n        //绘制阴影图\r\n        shadowRenderer.draw(this.gl, this.scene, this.camera);\r\n        skyboxRenderer.draw(this.gl, this.scene, this.camera);\r\n        // 默认渲染\r\n        forwardRenderer.draw(this.gl, this.scene, this.camera);\r\n        outlineRenderer.draw(this.gl, this.scene, this.camera);\r\n        wireframeRenderer.draw(this.gl, this.scene, this.camera);\r\n    }\r\n\r\n    /**\r\n     * 屏幕坐标转GPU坐标\r\n     * @param screenPos 屏幕坐标 (x: [0-width], y: [0 - height])\r\n     * @return GPU坐标 (x: [-1, 1], y: [-1, 1])\r\n     */\r\n    screenToGpuPosition(screenPos: Vector2): Vector2\r\n    {\r\n        var gpuPos: Vector2 = new Vector2();\r\n        gpuPos.x = (screenPos.x * 2 - this.viewRect.width) / this.viewRect.width;\r\n        // 屏幕坐标与gpu中使用的坐标Y轴方向相反\r\n        gpuPos.y = - (screenPos.y * 2 - this.viewRect.height) / this.viewRect.height;\r\n        return gpuPos;\r\n    }\r\n\r\n    /**\r\n     * 投影坐标（世界坐标转换为3D视图坐标）\r\n     * @param point3d 世界坐标\r\n     * @return 屏幕的绝对坐标\r\n     */\r\n    project(point3d: Vector3): Vector3\r\n    {\r\n        var v: Vector3 = this.camera.project(point3d);\r\n        v.x = (v.x + 1.0) * this.viewRect.width / 2.0;\r\n        v.y = (1.0 - v.y) * this.viewRect.height / 2.0;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 屏幕坐标投影到场景坐标\r\n     * @param nX 屏幕坐标X ([0-width])\r\n     * @param nY 屏幕坐标Y ([0-height])\r\n     * @param sZ 到屏幕的距离\r\n     * @param v 场景坐标（输出）\r\n     * @return 场景坐标\r\n     */\r\n    unproject(sX: number, sY: number, sZ: number, v = new Vector3()): Vector3\r\n    {\r\n        var gpuPos: Vector2 = this.screenToGpuPosition(new Vector2(sX, sY));\r\n        return this.camera.unproject(gpuPos.x, gpuPos.y, sZ, v);\r\n    }\r\n\r\n    /**\r\n     * 获取单位像素在指定深度映射的大小\r\n     * @param   depth   深度\r\n     */\r\n    getScaleByDepth(depth: number, dir = new Vector2(0, 1))\r\n    {\r\n        var scale = this.camera.getScaleByDepth(depth, dir);\r\n        scale = scale / new Vector2(this.viewRect.width * dir.x, this.viewRect.height * dir.y).length;\r\n        return scale;\r\n    }\r\n\r\n    /**\r\n     * 获取屏幕区域内所有实体\r\n     * @param start 起点\r\n     * @param end 终点\r\n     */\r\n    getObjectsInGlobalArea(start: Vector2, end: Vector2)\r\n    {\r\n        var s = this.viewRect.clampPoint(start);\r\n        var e = this.viewRect.clampPoint(end);\r\n        s.sub(this.viewRect.topLeft);\r\n        e.sub(this.viewRect.topLeft);\r\n        var min = s.clone().min(e);\r\n        var max = s.clone().max(e);\r\n        var rect = new Rectangle(min.x, min.y, max.x - min.x, max.y - min.y);\r\n        //\r\n        var transforms = this.scene.getComponentsInChildren(Node3D).filter(t =>\r\n        {\r\n            if (t == this.scene.node3d) return false;\r\n            var m = t.getComponent(Renderable);\r\n            if (m)\r\n            {\r\n                var include = m.selfWorldBounds.toPoints().every(pos =>\r\n                {\r\n                    var p = this.project(pos);\r\n                    return rect.contains(p.x, p.y);\r\n                })\r\n                return include;\r\n            }\r\n            var p = this.project(t.worldPosition);\r\n            return rect.contains(p.x, p.y);\r\n        });\r\n        return transforms;\r\n    }\r\n\r\n    protected selectedTransform: Node3D;\r\n\r\n    static createNewScene()\r\n    {\r\n        var scene = serialization.setValue(new Entity(), { name: \"Untitled\" }).addComponent(Scene)\r\n        scene.background.setTo(0.2784, 0.2784, 0.2784);\r\n        scene.ambientColor.setTo(0.4, 0.4, 0.4);\r\n\r\n        var camera = Camera.create(\"Main Camera\");\r\n        camera.entity.addComponent(AudioListener);\r\n        camera.node3d.x = 0;\r\n        camera.node3d.y = 1;\r\n        camera.node3d.z = -10;\r\n        scene.node3d.addChild(camera.node3d);\r\n\r\n        var directionalLight = DirectionalLight.create(\"DirectionalLight\");\r\n        directionalLight.shadowType = ShadowType.Hard_Shadows;\r\n        directionalLight.node3d.rx = 50;\r\n        directionalLight.node3d.ry = -30;\r\n        directionalLight.node3d.y = 3;\r\n        scene.node3d.addChild(directionalLight.node3d);\r\n\r\n        return scene;\r\n    }\r\n}\r\n\r\n\r\n// var viewRect0 = { x: 0, y: 0, w: 400, h: 300 ;}","import { Attributes } from \"@feng3d/renderer\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { Geometry } from \"./Geometry\";\r\n\r\nexport interface GeometryTypes { CustomGeometry: CustomGeometry }\r\n\r\nexport class CustomGeometry extends Geometry\r\n{\r\n    __class__: \"feng3d.CustomGeometry\";\r\n\r\n    /**\r\n     * 顶点索引缓冲\r\n     */\r\n    @serialize\r\n    get indices()\r\n    {\r\n        this.updateGrometry();\r\n        return this._indexBuffer.indices;\r\n    }\r\n\r\n    /**\r\n     * 属性数据列表\r\n     */\r\n    @serialize\r\n    get attributes(): Attributes\r\n    {\r\n        return this._attributes;\r\n    }\r\n    set attributes(v)\r\n    {\r\n        this._attributes = v;\r\n    }\r\n}\r\n","import { Color4 } from \"@feng3d/math\";\r\nimport { Vector2 } from \"@feng3d/math\";\r\nimport { Vector3 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Geometry } from \"./Geometry\";\r\n\r\n\r\nexport interface GeometryTypes { PointGeometry: PointGeometry }\r\n\r\n/**\r\n * 点几何体\r\n */\r\nexport class PointGeometry extends Geometry\r\n{\r\n\r\n    __class__: \"feng3d.PointGeometry\";\r\n\r\n    /**\r\n     * 点数据列表\r\n     * 修改数组内数据时需要手动调用 invalidateGeometry();\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    points: PointInfo[] = [];\r\n\r\n    /**\r\n     * 构建几何体\r\n     */\r\n    buildGeometry()\r\n    {\r\n        var numPoints = this.points.length;\r\n        var indices: number[] = [];\r\n        var positionData: number[] = [];\r\n        var normalData: number[] = [];\r\n        var uvData: number[] = [];\r\n        var colors: number[] = [];\r\n\r\n        numPoints = Math.max(1, numPoints);\r\n\r\n        for (var i = 0; i < numPoints; i++)\r\n        {\r\n            var element = this.points[i];\r\n            var position = (element && element.position) || Vector3.ZERO;\r\n            var color = (element && element.color) || Color4.WHITE;\r\n            var normal = (element && element.normal) || Vector3.ZERO;\r\n            var uv = (element && element.uv) || Vector2.ZERO;\r\n            indices[i] = i;\r\n            positionData.push(position.x, position.y, position.z);\r\n            normalData.push(normal.x, normal.y, normal.z);\r\n            uvData.push(uv.x, uv.y);\r\n            colors.push(color.r, color.g, color.b, color.a);\r\n        }\r\n        this.positions = positionData;\r\n        this.uvs = uvData;\r\n        this.normals = normalData;\r\n        this.indices = indices;\r\n        this.colors = colors;\r\n    }\r\n}\r\n\r\n/**\r\n * 点信息\r\n */\r\nexport interface PointInfo\r\n{\r\n    position?: Vector3;\r\n    color?: Color4;\r\n    normal?: Vector3;\r\n    uv?: Vector2;\r\n}\r\n","import { Entity } from \"../core/Entity\";\r\nimport { MeshRenderer } from \"../core/MeshRenderer\";\r\nimport { Material } from \"../materials/Material\";\r\nimport { Color4 } from \"@feng3d/math\";\r\nimport { Vector3 } from \"@feng3d/math\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize, serialization } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\nimport { Geometry } from \"./Geometry\";\r\n\r\ndeclare module \"./Geometry\"\r\n{\r\n    export interface GeometryTypes { SegmentGeometry: SegmentGeometry }\r\n}\r\n\r\n/**\r\n * 线段组件\r\n */\r\nexport class SegmentGeometry extends Geometry\r\n{\r\n\r\n    __class__: \"feng3d.SegmentGeometry\";\r\n\r\n    protected _name = \"Segment\";\r\n\r\n    /**\r\n     * 线段列表\r\n     * 修改数组内数据时需要手动调用 invalidateGeometry();\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVArray\", tooltip: \"在指定时间进行额外发射指定数量的粒子\", componentParam: { defaultItem: () => { return new Segment(); } } })\r\n    @watch(\"invalidateGeometry\")\r\n    segments: Segment[] = [];\r\n\r\n    /**\r\n     * 添加线段\r\n     * \r\n     * @param segment 线段\r\n     */\r\n    addSegment(segment: Partial<Segment>)\r\n    {\r\n        var s = new Segment();\r\n        serialization.setValue(s, segment);\r\n        this.segments.push(s);\r\n        this.invalidateGeometry();\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * 更新几何体\r\n     */\r\n    protected buildGeometry()\r\n    {\r\n        var numSegments = this.segments.length;\r\n        var indices: number[] = [];\r\n        var positionData: number[] = [];\r\n        var colorData: number[] = [];\r\n\r\n        for (var i = 0; i < numSegments; i++)\r\n        {\r\n            var element = this.segments[i];\r\n            var start = element.start || Vector3.ZERO;\r\n            var end = element.end || Vector3.ZERO;;\r\n            var startColor = element.startColor || Color4.WHITE;\r\n            var endColor = element.endColor || Color4.WHITE;\r\n\r\n            indices.push(i * 2, i * 2 + 1);\r\n            positionData.push(start.x, start.y, start.z, end.x, end.y, end.z);\r\n            colorData.push(startColor.r, startColor.g, startColor.b, startColor.a,\r\n                endColor.r, endColor.g, endColor.b, endColor.a);\r\n        }\r\n\r\n        this.positions = positionData;\r\n        this.colors = colorData;\r\n        this.indices = indices;\r\n    }\r\n}\r\n\r\n/**\r\n * 线段\r\n */\r\nexport class Segment\r\n{\r\n    /**\r\n     * 起点坐标\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"起点坐标\" })\r\n    start = new Vector3();\r\n\r\n    /**\r\n     * 终点坐标\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"终点坐标\" })\r\n    end = new Vector3();\r\n\r\n    /**\r\n     * 起点颜色\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"起点颜色\" })\r\n    startColor = new Color4();\r\n\r\n    /**\r\n     * 终点颜色\r\n     */\r\n    @serialize\r\n    @oav({ tooltip: \"终点颜色\" })\r\n    endColor = new Color4();\r\n}\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        Segment: Entity;\r\n    }\r\n}\r\n\r\nEntity.registerPrimitive(\"Segment\", (g) =>\r\n{\r\n    var model = g.addComponent(MeshRenderer);\r\n    model.geometry = new SegmentGeometry();\r\n    model.material = Material.getDefault(\"Segment-Material\");\r\n});\r\n\r\n\r\n","import { Color4 } from \"@feng3d/math\";\r\nimport { shaderlib } from \"@feng3d/renderer\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\n\r\ndeclare module \"./Material\"\r\n{\r\n    export interface UniformsTypes { color: ColorUniforms }\r\n}\r\n\r\nexport class ColorUniforms\r\n{\r\n    __class__: \"feng3d.ColorUniforms\";\r\n    /** \r\n     * 颜色\r\n     */\r\n    @serialize\r\n    @oav()\r\n    u_diffuseInput = new Color4();\r\n}\r\n\r\nshaderlib.shaderConfig.shaders[\"color\"].cls = ColorUniforms;\r\n","import { Color4 } from \"@feng3d/math\";\r\nimport { shaderlib } from \"@feng3d/renderer\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\n\r\ndeclare module \"./Material\"\r\n{\r\n    export interface UniformsTypes { point: PointUniforms }\r\n}\r\n\r\nexport class PointUniforms\r\n{\r\n    __class__: \"feng3d.PointUniforms\";\r\n    /** \r\n     * 颜色\r\n     */\r\n    @serialize\r\n    @oav()\r\n    u_color = new Color4();\r\n\r\n    /**\r\n     * 点绘制时点的尺寸\r\n     */\r\n    @serialize\r\n    @oav()\r\n    u_PointSize = 1;\r\n}\r\n\r\nshaderlib.shaderConfig.shaders[\"point\"].cls = PointUniforms;\r\n","import { Color4 } from \"@feng3d/math\";\r\nimport { RenderMode } from \"@feng3d/renderer\";\r\nimport { shaderlib } from \"@feng3d/renderer\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { Material } from \"./Material\";\r\n\r\ndeclare module \"./Material\"\r\n{\r\n    export interface UniformsTypes { segment: SegmentUniforms }\r\n\r\n    export interface DefaultMaterial\r\n    {\r\n        \"Segment-Material\": Material;\r\n    }\r\n}\r\n\r\n/**\r\n * 线段材质\r\n * 目前webgl不支持修改线条宽度，参考：https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/lineWidth\r\n */\r\nexport class SegmentUniforms\r\n{\r\n    __class__: \"feng3d.SegmentUniforms\";\r\n\r\n    /** \r\n     * 颜色\r\n     */\r\n    @serialize\r\n    @oav()\r\n    u_segmentColor = new Color4();\r\n}\r\n\r\nshaderlib.shaderConfig.shaders[\"segment\"].cls = SegmentUniforms;\r\nshaderlib.shaderConfig.shaders[\"segment\"].renderParams = { renderMode: RenderMode.LINES, enableBlend: true };\r\n\r\n\r\nMaterial.setDefault(\"Segment-Material\", { shaderName: \"segment\" });\r\n","import { Color3 } from \"@feng3d/math\";\r\nimport { Color4 } from \"@feng3d/math\";\r\nimport { shaderlib } from \"@feng3d/renderer\";\r\nimport { Texture2D, Texture2DEventMap } from \"../textures/Texture2D\";\r\nimport { TextureCube, TextureCubeEventMap } from \"../textures/TextureCube\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { Material } from \"./Material\";\r\n\r\ndeclare module \"./Material\"\r\n{\r\n    export interface UniformsTypes { standard: StandardUniforms }\r\n\r\n    export interface DefaultMaterial\r\n    {\r\n        \"Default-Material\": Material;\r\n    }\r\n}\r\n\r\n/**\r\n * 雾模式\r\n */\r\nexport enum FogMode\r\n{\r\n    NONE = 0,\r\n    EXP = 1,\r\n    EXP2 = 2,\r\n    LINEAR = 3\r\n}\r\n\r\nexport class StandardUniforms\r\n{\r\n    __class__: \"feng3d.StandardUniforms\" | \"feng3d.TerrainUniforms\" | \"feng3d.ParticleUniforms\";\r\n    /**\r\n     * 点绘制时点的尺寸\r\n     */\r\n    @serialize\r\n    @oav()\r\n    u_PointSize = 1;\r\n\r\n    /**\r\n     * 漫反射纹理\r\n     */\r\n    @serialize\r\n    @oav({ block: \"diffuse\" })\r\n    s_diffuse: Texture2D<Texture2DEventMap> = Texture2D.default;\r\n\r\n    /**\r\n     * 基本颜色\r\n     */\r\n    @serialize\r\n    @oav({ block: \"diffuse\" })\r\n    u_diffuse = new Color4(1, 1, 1, 1);\r\n\r\n    /**\r\n     * 透明阈值，透明度小于该值的像素被片段着色器丢弃\r\n     */\r\n    @serialize\r\n    @oav({ block: \"diffuse\" })\r\n    u_alphaThreshold = 0;\r\n\r\n    /**\r\n     * 法线纹理\r\n     */\r\n    @serialize\r\n    @oav({ block: \"normalMethod\" })\r\n    s_normal = Texture2D.defaultNormal;\r\n\r\n    /**\r\n     * 镜面反射光泽图\r\n     */\r\n    @serialize\r\n    @oav({ block: \"specular\" })\r\n    s_specular = Texture2D.default;\r\n\r\n    /**\r\n     * 镜面反射颜色\r\n     */\r\n    @serialize\r\n    @oav({ block: \"specular\" })\r\n    u_specular = new Color3();\r\n\r\n    /**\r\n     * 高光系数\r\n     */\r\n    @serialize\r\n    @oav({ block: \"specular\" })\r\n    u_glossiness = 50;\r\n\r\n    /**\r\n     * 环境纹理\r\n     */\r\n    @serialize\r\n    @oav({ block: \"ambient\" })\r\n    s_ambient = Texture2D.default;\r\n\r\n    /**\r\n     * 环境光颜色\r\n     */\r\n    @serialize\r\n    @oav({ block: \"ambient\" })\r\n    u_ambient = new Color4();\r\n\r\n    /**\r\n     * 环境映射贴图\r\n     */\r\n    @serialize\r\n    @oav({ component: \"OAVPick\", block: \"envMap\", componentParam: { accepttype: \"texturecube\", datatype: \"texturecube\" } })\r\n    s_envMap: TextureCube<TextureCubeEventMap> = TextureCube.default;\r\n\r\n    /**\r\n     * 反射率\r\n     */\r\n    @serialize\r\n    @oav({ block: \"envMap\" })\r\n    u_reflectivity = 1;\r\n\r\n    /**\r\n     * 出现雾效果的最近距离\r\n     */\r\n    @serialize\r\n    @oav({ block: \"fog\" })\r\n    u_fogMinDistance = 0;\r\n\r\n    /**\r\n     * 最远距离\r\n     */\r\n    @serialize\r\n    @oav({ block: \"fog\" })\r\n    u_fogMaxDistance = 100;\r\n\r\n    /**\r\n     * 雾的颜色\r\n     */\r\n    @serialize\r\n    @oav({ block: \"fog\" })\r\n    u_fogColor = new Color3();\r\n\r\n    /**\r\n     * 雾的密度\r\n     */\r\n    @serialize\r\n    @oav({ block: \"fog\" })\r\n    u_fogDensity = 0.1;\r\n\r\n    /**\r\n     * 雾模式\r\n     */\r\n    @serialize\r\n    @oav({ block: \"fog\", component: \"OAVEnum\", componentParam: { enumClass: FogMode } })\r\n    u_fogMode = FogMode.NONE;\r\n}\r\n\r\nshaderlib.shaderConfig.shaders[\"standard\"].cls = StandardUniforms;\r\n\r\nMaterial.setDefault(\"Default-Material\", { shaderName: \"standard\" });\r\n","import { Color4 } from \"@feng3d/math\";\r\nimport { shaderlib } from \"@feng3d/renderer\";\r\nimport { Texture2D, Texture2DEventMap } from \"../textures/Texture2D\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\n\r\ndeclare module \"./Material\"\r\n{\r\n    export interface UniformsTypes { texture: TextureUniforms }\r\n}\r\n\r\nexport class TextureUniforms\r\n{\r\n    __class__: \"feng3d.TextureUniforms\";\r\n    /** \r\n     * 颜色\r\n     */\r\n    @serialize\r\n    @oav()\r\n    u_color = new Color4();\r\n\r\n    /**\r\n     * 纹理数据\r\n     */\r\n    @oav()\r\n    @serialize\r\n    s_texture: Texture2D<Texture2DEventMap> = Texture2D.default;\r\n}\r\n\r\nshaderlib.shaderConfig.shaders[\"texture\"].cls = TextureUniforms;\r\n","import { Entity } from \"../core/Entity\";\r\nimport { MeshRenderer } from \"../core/MeshRenderer\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface GeometryTypes { CapsuleGeometry: CapsuleGeometry }\r\n}\r\n\r\n/**\r\n * 胶囊体几何体\r\n */\r\nexport class CapsuleGeometry extends Geometry\r\n{\r\n\r\n    __class__: \"feng3d.CapsuleGeometry\";\r\n\r\n    /**\r\n     * 胶囊体半径\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    radius = 0.5;\r\n\r\n    /**\r\n     * 胶囊体高度\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    height = 1\r\n\r\n    /**\r\n     * 横向分割数\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsW = 16\r\n\r\n    /**\r\n     * 纵向分割数\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsH = 15;\r\n\r\n    /**\r\n     * 正面朝向 true:Y+ false:Z+\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    yUp = true;\r\n\r\n    protected _name = \"Capsule\";\r\n\r\n    /**\r\n     * 构建几何体数据\r\n     * @param radius 胶囊体半径\r\n     * @param height 胶囊体高度\r\n     * @param segmentsW 横向分割数\r\n     * @param segmentsH 纵向分割数\r\n     * @param yUp 正面朝向 true:Y+ false:Z+\r\n     */\r\n    protected buildGeometry()\r\n    {\r\n        var vertexPositionData: number[] = [];\r\n        var vertexNormalData: number[] = [];\r\n        var vertexTangentData: number[] = [];\r\n\r\n        var startIndex: number;\r\n        var index = 0;\r\n        var comp1: number, comp2: number, t1: number, t2: number;\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            startIndex = index;\r\n\r\n            var horangle = Math.PI * yi / this.segmentsH;\r\n            var z = -this.radius * Math.cos(horangle);\r\n            var ringradius = this.radius * Math.sin(horangle);\r\n\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n                var verangle = 2 * Math.PI * xi / this.segmentsW;\r\n                var x = ringradius * Math.cos(verangle);\r\n                var y = ringradius * Math.sin(verangle);\r\n                var normLen = 1 / Math.sqrt(x * x + y * y + z * z);\r\n                var tanLen = Math.sqrt(y * y + x * x);\r\n                var offset = yi > this.segmentsH / 2 ? this.height / 2 : -this.height / 2;\r\n\r\n                if (this.yUp)\r\n                {\r\n                    t1 = 0;\r\n                    t2 = tanLen > .007 ? x / tanLen : 0;\r\n                    comp1 = -z;\r\n                    comp2 = y;\r\n                }\r\n                else\r\n                {\r\n                    t1 = tanLen > .007 ? x / tanLen : 0;\r\n                    t2 = 0;\r\n                    comp1 = y;\r\n                    comp2 = z;\r\n                }\r\n\r\n                if (xi == this.segmentsW)\r\n                {\r\n                    vertexPositionData[index] = vertexPositionData[startIndex];\r\n                    vertexPositionData[index + 1] = vertexPositionData[startIndex + 1];\r\n                    vertexPositionData[index + 2] = vertexPositionData[startIndex + 2];\r\n\r\n                    vertexNormalData[index] = (vertexNormalData[startIndex] + x * normLen) * 0.5;\r\n                    vertexNormalData[index + 1] = (vertexNormalData[startIndex + 1] + comp1 * normLen) * 0.5;\r\n                    vertexNormalData[index + 2] = (vertexNormalData[startIndex + 2] + comp2 * normLen) * 0.5;\r\n\r\n                    vertexTangentData[index] = (vertexTangentData[startIndex] + tanLen > .007 ? -y / tanLen : 1) * 0.5;\r\n                    vertexTangentData[index + 1] = (vertexTangentData[startIndex + 1] + t1) * 0.5;\r\n                    vertexTangentData[index + 2] = (vertexTangentData[startIndex + 2] + t2) * 0.5;\r\n                }\r\n                else\r\n                {\r\n                    vertexPositionData[index] = x;\r\n                    vertexPositionData[index + 1] = this.yUp ? comp1 - offset : comp1;\r\n                    vertexPositionData[index + 2] = this.yUp ? comp2 : comp2 + offset;\r\n\r\n                    vertexNormalData[index] = x * normLen;\r\n                    vertexNormalData[index + 1] = comp1 * normLen;\r\n                    vertexNormalData[index + 2] = comp2 * normLen;\r\n\r\n                    vertexTangentData[index] = tanLen > .007 ? -y / tanLen : 1;\r\n                    vertexTangentData[index + 1] = t1;\r\n                    vertexTangentData[index + 2] = t2;\r\n                }\r\n\r\n                if (xi > 0 && yi > 0)\r\n                {\r\n\r\n                    if (yi == this.segmentsH)\r\n                    {\r\n                        vertexPositionData[index] = vertexPositionData[startIndex];\r\n                        vertexPositionData[index + 1] = vertexPositionData[startIndex + 1];\r\n                        vertexPositionData[index + 2] = vertexPositionData[startIndex + 2];\r\n                    }\r\n                }\r\n\r\n                index += 3;\r\n            }\r\n        }\r\n        this.positions = vertexPositionData;\r\n        this.normals = vertexNormalData;\r\n        this.tangents = vertexTangentData;\r\n\r\n        var uvData = this.buildUVs();\r\n        this.uvs = uvData;\r\n\r\n        this.buildIndices();\r\n    }\r\n\r\n    /**\r\n     * 构建顶点索引\r\n     * @param segmentsW 横向分割数\r\n     * @param segmentsH 纵向分割数\r\n     * @param yUp 正面朝向 true:Y+ false:Z+\r\n     */\r\n    private buildIndices()\r\n    {\r\n        var indices: number[] = [];\r\n\r\n        var numIndices = 0;\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n                if (xi > 0 && yi > 0)\r\n                {\r\n                    var a = (this.segmentsW + 1) * yi + xi;\r\n                    var b = (this.segmentsW + 1) * yi + xi - 1;\r\n                    var c = (this.segmentsW + 1) * (yi - 1) + xi - 1;\r\n                    var d = (this.segmentsW + 1) * (yi - 1) + xi;\r\n\r\n                    if (yi == this.segmentsH)\r\n                    {\r\n                        indices[numIndices++] = a;\r\n                        indices[numIndices++] = c;\r\n                        indices[numIndices++] = d;\r\n                    }\r\n                    else if (yi == 1)\r\n                    {\r\n                        indices[numIndices++] = a;\r\n                        indices[numIndices++] = b;\r\n                        indices[numIndices++] = c;\r\n                    }\r\n                    else\r\n                    {\r\n                        indices[numIndices++] = a;\r\n                        indices[numIndices++] = b;\r\n                        indices[numIndices++] = c;\r\n                        indices[numIndices++] = a;\r\n                        indices[numIndices++] = c;\r\n                        indices[numIndices++] = d;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.indices = indices;\r\n    }\r\n\r\n    /**\r\n     * 构建uv\r\n     * @param segmentsW 横向分割数\r\n     * @param segmentsH 纵向分割数\r\n     */\r\n    private buildUVs()\r\n    {\r\n        var data: number[] = [];\r\n        var index = 0;\r\n\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n                data[index++] = xi / this.segmentsW;\r\n                data[index++] = yi / this.segmentsH;\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface DefaultGeometry\r\n    {\r\n        Capsule: CapsuleGeometry;\r\n    }\r\n}\r\nGeometry.setDefault(\"Capsule\", new CapsuleGeometry());\r\n\r\nEntity.registerPrimitive(\"Capsule\", (g) =>\r\n{\r\n    g.addComponent(MeshRenderer).geometry = Geometry.getDefault(\"Capsule\");\r\n});\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        Capsule: Entity;\r\n    }\r\n}\r\n","import { Entity } from \"../core/Entity\";\r\nimport { MeshRenderer } from \"../core/MeshRenderer\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface GeometryTypes { CylinderGeometry: CylinderGeometry }\r\n}\r\n\r\n/**\r\n * 圆柱体几何体\r\n * @author DawnKing 2016-09-12\r\n */\r\nexport class CylinderGeometry extends Geometry\r\n{\r\n    __class__: \"feng3d.CylinderGeometry\" | \"feng3d.ConeGeometry\";\r\n\r\n    /**\r\n     * 顶部半径\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    topRadius = 0.5;\r\n\r\n    /**\r\n     * 底部半径\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    bottomRadius = 0.5;\r\n\r\n    /**\r\n     * 高度\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    height = 2;\r\n\r\n    /**\r\n     * 横向分割数\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsW = 16;\r\n\r\n    /**\r\n     * 纵向分割数\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsH = 1;\r\n\r\n    /**\r\n     * 顶部是否封口\r\n     */\r\n    @oav()\r\n    @serialize\r\n    @watch(\"invalidateGeometry\")\r\n    topClosed = true;\r\n\r\n    /**\r\n     * 底部是否封口\r\n     */\r\n    @oav()\r\n    @serialize\r\n    @watch(\"invalidateGeometry\")\r\n    bottomClosed = true;\r\n\r\n    /**\r\n     * 侧面是否封口\r\n     */\r\n    @oav()\r\n    @serialize\r\n    @watch(\"invalidateGeometry\")\r\n    surfaceClosed = true;\r\n\r\n    /**\r\n     * 是否朝上\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    yUp = true;\r\n\r\n    protected _name = \"Cylinder\";\r\n\r\n    /**\r\n     * 构建几何体数据\r\n     */\r\n    protected buildGeometry()\r\n    {\r\n        var i: number, j: number, index = 0;\r\n        var x: number, y: number, z: number, radius: number, revolutionAngle = 0;\r\n        var dr: number, latNormElev: number, latNormBase: number;\r\n\r\n        var comp1: number, comp2: number;\r\n        var startIndex = 0;\r\n        var t1: number, t2: number;\r\n\r\n        var vertexPositionData: number[] = [];\r\n        var vertexNormalData: number[] = [];\r\n        var vertexTangentData: number[] = [];\r\n\r\n        var revolutionAngleDelta = 2 * Math.PI / this.segmentsW;\r\n\r\n        // 顶部\r\n        if (this.topClosed && this.topRadius > 0)\r\n        {\r\n            z = -0.5 * this.height;\r\n\r\n            for (i = 0; i <= this.segmentsW; ++i)\r\n            {\r\n                // 中心顶点\r\n                if (this.yUp)\r\n                {\r\n                    t1 = 1;\r\n                    t2 = 0;\r\n                    comp1 = -z;\r\n                    comp2 = 0;\r\n                }\r\n                else\r\n                {\r\n                    t1 = 0;\r\n                    t2 = -1;\r\n                    comp1 = 0;\r\n                    comp2 = z;\r\n                }\r\n\r\n                addVertex(0, comp1, comp2, 0, t1, t2, 1, 0, 0);\r\n\r\n                // 旋转顶点\r\n                revolutionAngle = i * revolutionAngleDelta;\r\n                x = this.topRadius * Math.cos(revolutionAngle);\r\n                y = this.topRadius * Math.sin(revolutionAngle);\r\n\r\n                if (this.yUp)\r\n                {\r\n                    comp1 = -z;\r\n                    comp2 = y;\r\n                }\r\n                else\r\n                {\r\n                    comp1 = y;\r\n                    comp2 = z;\r\n                }\r\n\r\n                if (i == this.segmentsW)\r\n                {\r\n                    addVertex(vertexPositionData[startIndex + 3], vertexPositionData[startIndex + 4], vertexPositionData[startIndex + 5],\r\n                        0, t1, t2, 1, 0, 0);\r\n                }\r\n                else\r\n                {\r\n                    addVertex(x, comp1, comp2,\r\n                        0, t1, t2, 1, 0, 0);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 底部\r\n        if (this.bottomClosed && this.bottomRadius > 0)\r\n        {\r\n            z = 0.5 * this.height;\r\n            startIndex = index;\r\n            for (i = 0; i <= this.segmentsW; ++i)\r\n            {\r\n                // 中心顶点\r\n                if (this.yUp)\r\n                {\r\n                    t1 = -1;\r\n                    t2 = 0;\r\n                    comp1 = -z;\r\n                    comp2 = 0;\r\n                }\r\n                else\r\n                {\r\n                    t1 = 0;\r\n                    t2 = 1;\r\n                    comp1 = 0;\r\n                    comp2 = z;\r\n                }\r\n\r\n                addVertex(0, comp1, comp2, 0, t1, t2, 1, 0, 0);\r\n\r\n                // 旋转顶点\r\n                revolutionAngle = i * revolutionAngleDelta;\r\n                x = this.bottomRadius * Math.cos(revolutionAngle);\r\n                y = this.bottomRadius * Math.sin(revolutionAngle);\r\n\r\n                if (this.yUp)\r\n                {\r\n                    comp1 = -z;\r\n                    comp2 = y;\r\n                }\r\n                else\r\n                {\r\n                    comp1 = y;\r\n                    comp2 = z;\r\n                }\r\n\r\n                if (i == this.segmentsW)\r\n                {\r\n                    addVertex(x, vertexPositionData[startIndex + 1], vertexPositionData[startIndex + 2],\r\n                        0, t1, t2, 1, 0, 0);\r\n                }\r\n                else\r\n                {\r\n                    addVertex(x, comp1, comp2,\r\n                        0, t1, t2, 1, 0, 0);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 侧面\r\n        dr = this.bottomRadius - this.topRadius;\r\n        latNormElev = dr / this.height;\r\n        latNormBase = (latNormElev == 0) ? 1 : this.height / dr;\r\n\r\n        if (this.surfaceClosed)\r\n        {\r\n            var a: number, b: number, c: number, d: number;\r\n            var na0: number, na1: number, naComp1: number, naComp2: number;\r\n\r\n            for (j = 0; j <= this.segmentsH; ++j)\r\n            {\r\n                radius = this.topRadius - ((j / this.segmentsH) * (this.topRadius - this.bottomRadius));\r\n                z = -(this.height / 2) + (j / this.segmentsH * this.height);\r\n\r\n                startIndex = index;\r\n                for (i = 0; i <= this.segmentsW; ++i)\r\n                {\r\n                    revolutionAngle = i * revolutionAngleDelta;\r\n                    x = radius * Math.cos(revolutionAngle);\r\n                    y = radius * Math.sin(revolutionAngle);\r\n                    na0 = latNormBase * Math.cos(revolutionAngle);\r\n                    na1 = latNormBase * Math.sin(revolutionAngle);\r\n\r\n                    if (this.yUp)\r\n                    {\r\n                        t1 = 0;\r\n                        t2 = -na0;\r\n                        comp1 = -z;\r\n                        comp2 = y;\r\n                        naComp1 = latNormElev;\r\n                        naComp2 = na1;\r\n                    }\r\n                    else\r\n                    {\r\n                        t1 = -na0;\r\n                        t2 = 0;\r\n                        comp1 = y;\r\n                        comp2 = z;\r\n                        naComp1 = na1;\r\n                        naComp2 = latNormElev;\r\n                    }\r\n\r\n                    if (i == this.segmentsW)\r\n                    {\r\n                        addVertex(vertexPositionData[startIndex], vertexPositionData[startIndex + 1], vertexPositionData[startIndex + 2],\r\n                            na0, latNormElev, na1,\r\n                            na1, t1, t2);\r\n                    }\r\n                    else\r\n                    {\r\n                        addVertex(x, comp1, comp2,\r\n                            na0, naComp1, naComp2,\r\n                            -na1, t1, t2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.positions = vertexPositionData;\r\n        this.normals = vertexNormalData;\r\n        this.tangents = vertexTangentData;\r\n\r\n        function addVertex(px: number, py: number, pz: number, nx: number, ny: number, nz: number, tx: number, ty: number, tz: number)\r\n        {\r\n            vertexPositionData[index] = px;\r\n            vertexPositionData[index + 1] = py;\r\n            vertexPositionData[index + 2] = pz;\r\n\r\n            vertexNormalData[index] = nx;\r\n            vertexNormalData[index + 1] = ny;\r\n            vertexNormalData[index + 2] = nz;\r\n\r\n            vertexTangentData[index] = tx;\r\n            vertexTangentData[index + 1] = ty;\r\n            vertexTangentData[index + 2] = tz;\r\n\r\n            index += 3;\r\n        }\r\n\r\n        //\r\n        var uvData = this.buildUVs();\r\n        this.uvs = uvData;\r\n\r\n        var indices = this.buildIndices();\r\n        this.indices = indices;\r\n    }\r\n\r\n    /**\r\n     * 构建顶点索引\r\n     * @param segmentsW 横向分割数\r\n     * @param segmentsH 纵向分割数\r\n     * @param yUp 正面朝向 true:Y+ false:Z+\r\n     */\r\n    private buildIndices()\r\n    {\r\n        var i: number, j: number, index = 0;\r\n\r\n        var indices: number[] = [];\r\n        var numIndices = 0;\r\n        // 顶部\r\n        if (this.topClosed && this.topRadius > 0)\r\n        {\r\n            for (i = 0; i <= this.segmentsW; ++i)\r\n            {\r\n                index += 2;\r\n                if (i > 0)\r\n                    addTriangleClockWise(index - 1, index - 3, index - 2);\r\n            }\r\n        }\r\n\r\n        // 底部\r\n        if (this.bottomClosed && this.bottomRadius > 0)\r\n        {\r\n            for (i = 0; i <= this.segmentsW; ++i)\r\n            {\r\n                index += 2;\r\n                if (i > 0)\r\n                    addTriangleClockWise(index - 2, index - 3, index - 1);\r\n            }\r\n        }\r\n\r\n        // 侧面\r\n        if (this.surfaceClosed)\r\n        {\r\n            var a: number, b: number, c: number, d: number;\r\n            for (j = 0; j <= this.segmentsH; ++j)\r\n            {\r\n                for (i = 0; i <= this.segmentsW; ++i)\r\n                {\r\n                    index++;\r\n                    if (i > 0 && j > 0)\r\n                    {\r\n                        a = index - 1;\r\n                        b = index - 2;\r\n                        c = b - this.segmentsW - 1;\r\n                        d = a - this.segmentsW - 1;\r\n\r\n                        addTriangleClockWise(a, b, c);\r\n                        addTriangleClockWise(a, c, d);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return indices;\r\n\r\n        function addTriangleClockWise(cwVertexIndex0: number, cwVertexIndex1: number, cwVertexIndex2: number)\r\n        {\r\n            indices[numIndices++] = cwVertexIndex0;\r\n            indices[numIndices++] = cwVertexIndex1;\r\n            indices[numIndices++] = cwVertexIndex2;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 构建uv\r\n     * @param segmentsW 横向分割数\r\n     * @param segmentsH 纵向分割数\r\n     */\r\n    private buildUVs()\r\n    {\r\n        var i: number, j: number;\r\n        var x: number, y: number, revolutionAngle: number;\r\n\r\n        var data: number[] = [];\r\n        var revolutionAngleDelta = 2 * Math.PI / this.segmentsW;\r\n        var index = 0;\r\n\r\n        // 顶部\r\n        if (this.topClosed)\r\n        {\r\n            for (i = 0; i <= this.segmentsW; ++i)\r\n            {\r\n                revolutionAngle = i * revolutionAngleDelta;\r\n                x = 0.5 + 0.5 * -Math.cos(revolutionAngle);\r\n                y = 0.5 + 0.5 * Math.sin(revolutionAngle);\r\n\r\n                // 中心顶点\r\n                data[index++] = 0.5;\r\n                data[index++] = 0.5;\r\n                // 旋转顶点\r\n                data[index++] = x;\r\n                data[index++] = y;\r\n            }\r\n        }\r\n        // 底部\r\n        if (this.bottomClosed)\r\n        {\r\n            for (i = 0; i <= this.segmentsW; ++i)\r\n            {\r\n                revolutionAngle = i * revolutionAngleDelta;\r\n                x = 0.5 + 0.5 * Math.cos(revolutionAngle);\r\n                y = 0.5 + 0.5 * Math.sin(revolutionAngle);\r\n\r\n                // 中心顶点\r\n                data[index++] = 0.5;\r\n                data[index++] = 0.5;\r\n                // 旋转顶点\r\n                data[index++] = x;\r\n                data[index++] = y;\r\n            }\r\n        }\r\n        // 侧面\r\n        if (this.surfaceClosed)\r\n        {\r\n            for (j = 0; j <= this.segmentsH; ++j)\r\n            {\r\n                for (i = 0; i <= this.segmentsW; ++i)\r\n                {\r\n                    // 旋转顶点\r\n                    data[index++] = (i / this.segmentsW);\r\n                    data[index++] = (j / this.segmentsH);\r\n                }\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface DefaultGeometry\r\n    {\r\n        Cylinder: CylinderGeometry;\r\n    }\r\n}\r\n\r\nGeometry.setDefault(\"Cylinder\", new CylinderGeometry());\r\n\r\nEntity.registerPrimitive(\"Cylinder\", (g) =>\r\n{\r\n    g.addComponent(MeshRenderer).geometry = Geometry.getDefault(\"Cylinder\");\r\n});\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        Cylinder: Entity;\r\n    }\r\n}","import { Entity } from \"../core/Entity\";\r\nimport { MeshRenderer } from \"../core/MeshRenderer\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { CylinderGeometry } from \"./CylinderGeometry\";\r\n\r\n/**\r\n * 圆锥体\r\n\r\n */\r\nexport class ConeGeometry extends CylinderGeometry\r\n{\r\n    __class__: \"feng3d.ConeGeometry\" = \"feng3d.ConeGeometry\";\r\n\r\n    protected _name = \"Cone\";\r\n\r\n    /**\r\n     * 底部半径 private\r\n     */\r\n    topRadius = 0;\r\n\r\n    /**\r\n     * 顶部是否封口 private\r\n     */\r\n    topClosed = false;\r\n\r\n    /**\r\n     * 侧面是否封口 private\r\n     */\r\n    surfaceClosed = true;\r\n}\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface DefaultGeometry\r\n    {\r\n        Cone: ConeGeometry;\r\n    }\r\n}\r\n\r\nGeometry.setDefault(\"Cone\", new ConeGeometry());\r\n\r\nEntity.registerPrimitive(\"Cone\", (g) =>\r\n{\r\n    g.addComponent(MeshRenderer).geometry = Geometry.getDefault(\"Cone\");\r\n});\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        Cone: Entity;\r\n    }\r\n}","import { Entity } from \"../core/Entity\";\r\nimport { MeshRenderer } from \"../core/MeshRenderer\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface GeometryTypes { CubeGeometry: CubeGeometry }\r\n}\r\n\r\n/**\r\n * 立（长）方体几何体\r\n */\r\nexport class CubeGeometry extends Geometry\r\n{\r\n    __class__: \"feng3d.CubeGeometry\";\r\n\r\n    protected _name = \"Cube\";\r\n\r\n    /**\r\n     * 宽度\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    width = 1;\r\n\r\n    /**\r\n     * 高度\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    height = 1;\r\n\r\n    /**\r\n     * 深度\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    depth = 1;\r\n\r\n    /**\r\n     * 宽度方向分割数\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsW = 1;\r\n\r\n    /**\r\n     * 高度方向分割数\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsH = 1;\r\n\r\n    /**\r\n     * 深度方向分割数\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsD = 1;\r\n\r\n    /**\r\n     * 是否为6块贴图，默认true。\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    tile6 = false;\r\n\r\n    protected buildGeometry()\r\n    {\r\n        var vertexPositionData = this.buildPosition();\r\n        this.positions = vertexPositionData;\r\n        var vertexNormalData = this.buildNormal();\r\n        this.normals = vertexNormalData;\r\n        var vertexTangentData = this.buildTangent();\r\n        this.tangents = vertexTangentData;\r\n        var uvData = this.buildUVs();\r\n        this.uvs = uvData;\r\n        var indices = this.buildIndices();\r\n        this.indices = indices;\r\n    }\r\n\r\n    /**\r\n     * 构建坐标\r\n     * @param   width           宽度\r\n     * @param   height          高度\r\n     * @param   depth           深度\r\n     * @param   segmentsW       宽度方向分割\r\n     * @param   segmentsH       高度方向分割\r\n     * @param   segmentsD       深度方向分割\r\n     */\r\n    private buildPosition()\r\n    {\r\n        var vertexPositionData: number[] = [];\r\n\r\n        var i: number, j: number;\r\n\r\n        var hw: number, hh: number, hd: number; // halves\r\n        var dw: number, dh: number, dd: number; // deltas\r\n\r\n        var outer_pos: number;\r\n\r\n        // Indices\r\n        var positionIndex = 0;\r\n\r\n        // half cube dimensions\r\n        hw = this.width / 2;\r\n        hh = this.height / 2;\r\n        hd = this.depth / 2;\r\n\r\n        // Segment dimensions\r\n        dw = this.width / this.segmentsW;\r\n        dh = this.height / this.segmentsH;\r\n        dd = this.depth / this.segmentsD;\r\n\r\n        for (i = 0; i <= this.segmentsW; i++)\r\n        {\r\n            outer_pos = -hw + i * dw;\r\n\r\n            for (j = 0; j <= this.segmentsH; j++)\r\n            {\r\n                // front\r\n                vertexPositionData[positionIndex++] = outer_pos;\r\n                vertexPositionData[positionIndex++] = -hh + j * dh;\r\n                vertexPositionData[positionIndex++] = -hd;\r\n\r\n                // back\r\n                vertexPositionData[positionIndex++] = outer_pos;\r\n                vertexPositionData[positionIndex++] = -hh + j * dh;\r\n                vertexPositionData[positionIndex++] = hd;\r\n            }\r\n        }\r\n\r\n        for (i = 0; i <= this.segmentsW; i++)\r\n        {\r\n            outer_pos = -hw + i * dw;\r\n\r\n            for (j = 0; j <= this.segmentsD; j++)\r\n            {\r\n                // top\r\n                vertexPositionData[positionIndex++] = outer_pos;\r\n                vertexPositionData[positionIndex++] = hh;\r\n                vertexPositionData[positionIndex++] = -hd + j * dd;\r\n\r\n                // bottom\r\n                vertexPositionData[positionIndex++] = outer_pos;\r\n                vertexPositionData[positionIndex++] = -hh;\r\n                vertexPositionData[positionIndex++] = -hd + j * dd;\r\n            }\r\n        }\r\n\r\n        for (i = 0; i <= this.segmentsD; i++)\r\n        {\r\n            outer_pos = hd - i * dd;\r\n\r\n            for (j = 0; j <= this.segmentsH; j++)\r\n            {\r\n                // left\r\n                vertexPositionData[positionIndex++] = -hw;\r\n                vertexPositionData[positionIndex++] = -hh + j * dh;\r\n                vertexPositionData[positionIndex++] = outer_pos;\r\n\r\n                // right\r\n                vertexPositionData[positionIndex++] = hw;\r\n                vertexPositionData[positionIndex++] = -hh + j * dh;\r\n                vertexPositionData[positionIndex++] = outer_pos;\r\n            }\r\n        }\r\n\r\n        return vertexPositionData;\r\n    }\r\n\r\n    /**\r\n     * 构建法线\r\n     * @param   segmentsW       宽度方向分割\r\n     * @param   segmentsH       高度方向分割\r\n     * @param   segmentsD       深度方向分割\r\n     */\r\n    private buildNormal()\r\n    {\r\n        var vertexNormalData: number[] = [];\r\n\r\n        var i: number, j: number;\r\n\r\n        // Indices\r\n        var normalIndex = 0;\r\n\r\n        for (i = 0; i <= this.segmentsW; i++)\r\n        {\r\n            for (j = 0; j <= this.segmentsH; j++)\r\n            {\r\n                // front\r\n                vertexNormalData[normalIndex++] = 0;\r\n                vertexNormalData[normalIndex++] = 0;\r\n                vertexNormalData[normalIndex++] = -1;\r\n\r\n                // back\r\n                vertexNormalData[normalIndex++] = 0;\r\n                vertexNormalData[normalIndex++] = 0;\r\n                vertexNormalData[normalIndex++] = 1;\r\n            }\r\n        }\r\n\r\n        for (i = 0; i <= this.segmentsW; i++)\r\n        {\r\n            for (j = 0; j <= this.segmentsD; j++)\r\n            {\r\n                // top\r\n                vertexNormalData[normalIndex++] = 0;\r\n                vertexNormalData[normalIndex++] = 1;\r\n                vertexNormalData[normalIndex++] = 0;\r\n\r\n                // bottom\r\n                vertexNormalData[normalIndex++] = 0;\r\n                vertexNormalData[normalIndex++] = -1;\r\n                vertexNormalData[normalIndex++] = 0;\r\n            }\r\n        }\r\n\r\n        for (i = 0; i <= this.segmentsD; i++)\r\n        {\r\n            for (j = 0; j <= this.segmentsH; j++)\r\n            {\r\n                // left\r\n                vertexNormalData[normalIndex++] = -1;\r\n                vertexNormalData[normalIndex++] = 0;\r\n                vertexNormalData[normalIndex++] = 0;\r\n\r\n                // right\r\n                vertexNormalData[normalIndex++] = 1;\r\n                vertexNormalData[normalIndex++] = 0;\r\n                vertexNormalData[normalIndex++] = 0;\r\n            }\r\n        }\r\n        return vertexNormalData;\r\n    }\r\n\r\n    /**\r\n     * 构建切线\r\n     * @param   segmentsW       宽度方向分割\r\n     * @param   segmentsH       高度方向分割\r\n     * @param   segmentsD       深度方向分割\r\n     */\r\n    private buildTangent()\r\n    {\r\n\r\n        var vertexTangentData: number[] = [];\r\n\r\n        var i: number, j: number;\r\n\r\n        // Indices\r\n        var tangentIndex = 0;\r\n\r\n        for (i = 0; i <= this.segmentsW; i++)\r\n        {\r\n            for (j = 0; j <= this.segmentsH; j++)\r\n            {\r\n                // front\r\n                vertexTangentData[tangentIndex++] = 1;\r\n                vertexTangentData[tangentIndex++] = 0;\r\n                vertexTangentData[tangentIndex++] = 0;\r\n\r\n                // back\r\n                vertexTangentData[tangentIndex++] = -1;\r\n                vertexTangentData[tangentIndex++] = 0;\r\n                vertexTangentData[tangentIndex++] = 0;\r\n            }\r\n        }\r\n\r\n        for (i = 0; i <= this.segmentsW; i++)\r\n        {\r\n\r\n            for (j = 0; j <= this.segmentsD; j++)\r\n            {\r\n                // top\r\n                vertexTangentData[tangentIndex++] = 1;\r\n                vertexTangentData[tangentIndex++] = 0;\r\n                vertexTangentData[tangentIndex++] = 0;\r\n\r\n                // bottom\r\n                vertexTangentData[tangentIndex++] = 1;\r\n                vertexTangentData[tangentIndex++] = 0;\r\n                vertexTangentData[tangentIndex++] = 0;\r\n            }\r\n        }\r\n\r\n        for (i = 0; i <= this.segmentsD; i++)\r\n        {\r\n\r\n            for (j = 0; j <= this.segmentsH; j++)\r\n            {\r\n                // left\r\n                vertexTangentData[tangentIndex++] = 0;\r\n                vertexTangentData[tangentIndex++] = 0;\r\n                vertexTangentData[tangentIndex++] = -1;\r\n\r\n                // right\r\n                vertexTangentData[tangentIndex++] = 0;\r\n                vertexTangentData[tangentIndex++] = 0;\r\n                vertexTangentData[tangentIndex++] = 1;\r\n            }\r\n        }\r\n\r\n        return vertexTangentData;\r\n    }\r\n\r\n    /**\r\n     * 构建索引\r\n     * @param   segmentsW       宽度方向分割\r\n     * @param   segmentsH       高度方向分割\r\n     * @param   segmentsD       深度方向分割\r\n     */\r\n    private buildIndices()\r\n    {\r\n        var indices: number[] = [];\r\n\r\n        var tl: number, tr: number, bl: number, br: number;\r\n        var i: number, j: number, inc = 0;\r\n\r\n        var fidx = 0;\r\n\r\n        for (i = 0; i <= this.segmentsW; i++)\r\n        {\r\n\r\n            for (j = 0; j <= this.segmentsH; j++)\r\n            {\r\n                // front\r\n                // back\r\n                if (i && j)\r\n                {\r\n                    tl = 2 * ((i - 1) * (this.segmentsH + 1) + (j - 1));\r\n                    tr = 2 * (i * (this.segmentsH + 1) + (j - 1));\r\n                    bl = tl + 2;\r\n                    br = tr + 2;\r\n\r\n                    indices[fidx++] = tl;\r\n                    indices[fidx++] = bl;\r\n                    indices[fidx++] = br;\r\n                    indices[fidx++] = tl;\r\n                    indices[fidx++] = br;\r\n                    indices[fidx++] = tr;\r\n                    indices[fidx++] = tr + 1;\r\n                    indices[fidx++] = br + 1;\r\n                    indices[fidx++] = bl + 1;\r\n                    indices[fidx++] = tr + 1;\r\n                    indices[fidx++] = bl + 1;\r\n                    indices[fidx++] = tl + 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        inc += 2 * (this.segmentsW + 1) * (this.segmentsH + 1);\r\n\r\n        for (i = 0; i <= this.segmentsW; i++)\r\n        {\r\n\r\n            for (j = 0; j <= this.segmentsD; j++)\r\n            {\r\n                // top\r\n                // bottom\r\n                if (i && j)\r\n                {\r\n                    tl = inc + 2 * ((i - 1) * (this.segmentsD + 1) + (j - 1));\r\n                    tr = inc + 2 * (i * (this.segmentsD + 1) + (j - 1));\r\n                    bl = tl + 2;\r\n                    br = tr + 2;\r\n\r\n                    indices[fidx++] = tl;\r\n                    indices[fidx++] = bl;\r\n                    indices[fidx++] = br;\r\n                    indices[fidx++] = tl;\r\n                    indices[fidx++] = br;\r\n                    indices[fidx++] = tr;\r\n                    indices[fidx++] = tr + 1;\r\n                    indices[fidx++] = br + 1;\r\n                    indices[fidx++] = bl + 1;\r\n                    indices[fidx++] = tr + 1;\r\n                    indices[fidx++] = bl + 1;\r\n                    indices[fidx++] = tl + 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        inc += 2 * (this.segmentsW + 1) * (this.segmentsD + 1);\r\n\r\n        for (i = 0; i <= this.segmentsD; i++)\r\n        {\r\n            for (j = 0; j <= this.segmentsH; j++)\r\n            {\r\n                // left\r\n                // right\r\n\r\n                if (i && j)\r\n                {\r\n                    tl = inc + 2 * ((i - 1) * (this.segmentsH + 1) + (j - 1));\r\n                    tr = inc + 2 * (i * (this.segmentsH + 1) + (j - 1));\r\n                    bl = tl + 2;\r\n                    br = tr + 2;\r\n\r\n                    indices[fidx++] = tl;\r\n                    indices[fidx++] = bl;\r\n                    indices[fidx++] = br;\r\n                    indices[fidx++] = tl;\r\n                    indices[fidx++] = br;\r\n                    indices[fidx++] = tr;\r\n                    indices[fidx++] = tr + 1;\r\n                    indices[fidx++] = br + 1;\r\n                    indices[fidx++] = bl + 1;\r\n                    indices[fidx++] = tr + 1;\r\n                    indices[fidx++] = bl + 1;\r\n                    indices[fidx++] = tl + 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        return indices;\r\n    }\r\n\r\n    /**\r\n     * 构建uv\r\n     * @param   segmentsW       宽度方向分割\r\n     * @param   segmentsH       高度方向分割\r\n     * @param   segmentsD       深度方向分割\r\n     * @param   tile6           是否为6块贴图\r\n     */\r\n    private buildUVs()\r\n    {\r\n        var i: number, j: number, uidx: number;\r\n        var data: number[] = [];\r\n\r\n        var u_tile_dim: number, v_tile_dim: number;\r\n        var u_tile_step: number, v_tile_step: number;\r\n        var tl0u: number, tl0v: number;\r\n        var tl1u: number, tl1v: number;\r\n        var du: number, dv: number;\r\n\r\n        if (this.tile6)\r\n        {\r\n            u_tile_dim = u_tile_step = 1 / 3;\r\n            v_tile_dim = v_tile_step = 1 / 2;\r\n        }\r\n        else\r\n        {\r\n            u_tile_dim = v_tile_dim = 1;\r\n            u_tile_step = v_tile_step = 0;\r\n        }\r\n\r\n        // Create planes two and two, the same way that they were\r\n        // constructed in the this.buildGeometry() function. First calculate\r\n        // the top-left UV coordinate for both planes, and then loop\r\n        // over the points, calculating the UVs from these numbers.\r\n\r\n        // When this.tile6 is true, the layout is as follows:\r\n        //       .-----.-----.-----. (1,1)\r\n        //       | Bot |  T  | Bak |\r\n        //       |-----+-----+-----|\r\n        //       |  L  |  F  |  R  |\r\n        // (0,0)'-----'-----'-----'\r\n\r\n        uidx = 0;\r\n\r\n        // FRONT / BACK\r\n        tl0u = 1 * u_tile_step;\r\n        tl0v = 1 * v_tile_step;\r\n        tl1u = 2 * u_tile_step;\r\n        tl1v = 0 * v_tile_step;\r\n        du = u_tile_dim / this.segmentsW;\r\n        dv = v_tile_dim / this.segmentsH;\r\n        for (i = 0; i <= this.segmentsW; i++)\r\n        {\r\n            for (j = 0; j <= this.segmentsH; j++)\r\n            {\r\n                data[uidx++] = tl0u + i * du;\r\n                data[uidx++] = tl0v + (v_tile_dim - j * dv);\r\n                data[uidx++] = tl1u + (u_tile_dim - i * du);\r\n                data[uidx++] = tl1v + (v_tile_dim - j * dv);\r\n            }\r\n        }\r\n\r\n        // TOP / BOTTOM\r\n        tl0u = 1 * u_tile_step;\r\n        tl0v = 0 * v_tile_step;\r\n        tl1u = 0 * u_tile_step;\r\n        tl1v = 0 * v_tile_step;\r\n        du = u_tile_dim / this.segmentsW;\r\n        dv = v_tile_dim / this.segmentsD;\r\n        for (i = 0; i <= this.segmentsW; i++)\r\n        {\r\n            for (j = 0; j <= this.segmentsD; j++)\r\n            {\r\n                data[uidx++] = tl0u + i * du;\r\n                data[uidx++] = tl0v + (v_tile_dim - j * dv);\r\n                data[uidx++] = tl1u + i * du;\r\n                data[uidx++] = tl1v + j * dv;\r\n            }\r\n        }\r\n\r\n        // LEFT / RIGHT\r\n        tl0u = 0 * u_tile_step;\r\n        tl0v = 1 * v_tile_step;\r\n        tl1u = 2 * u_tile_step;\r\n        tl1v = 1 * v_tile_step;\r\n        du = u_tile_dim / this.segmentsD;\r\n        dv = v_tile_dim / this.segmentsH;\r\n        for (i = 0; i <= this.segmentsD; i++)\r\n        {\r\n            for (j = 0; j <= this.segmentsH; j++)\r\n            {\r\n                data[uidx++] = tl0u + i * du;\r\n                data[uidx++] = tl0v + (v_tile_dim - j * dv);\r\n                data[uidx++] = tl1u + (u_tile_dim - i * du);\r\n                data[uidx++] = tl1v + (v_tile_dim - j * dv);\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface DefaultGeometry\r\n    {\r\n        Cube: CubeGeometry;\r\n    }\r\n}\r\n\r\nGeometry.setDefault(\"Cube\", new CubeGeometry());\r\n\r\nEntity.registerPrimitive(\"Cube\", (g) =>\r\n{\r\n    g.addComponent(MeshRenderer).geometry = Geometry.getDefault(\"Cube\");\r\n});\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        Cube: Entity;\r\n    }\r\n}","import { Geometry } from \"../geometry/Geometry\";\r\nimport { geometryUtils } from \"../geometry/GeometryUtils\";\r\nimport { Vector3 } from \"@feng3d/math\";\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface GeometryTypes { ParametricGeometry: ParametricGeometry }\r\n}\r\n\r\nexport class ParametricGeometry extends Geometry\r\n{\r\n    /**\r\n     * @author zz85 / https://github.com/zz85\r\n     * Parametric Surfaces Geometry\r\n     * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n     *\r\n     * new ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n     *\r\n     */\r\n    constructor(func: (u: number, v: number) => Vector3, slices = 8, stacks = 8, doubleside = false)\r\n    {\r\n        super();\r\n\r\n        var positions: number[] = [];\r\n        var indices: number[] = [];\r\n        var uvs: number[] = [];\r\n\r\n        var sliceCount = slices + 1;\r\n\r\n        for (var i = 0; i <= stacks; i++)\r\n        {\r\n            var v = i / stacks;\r\n\r\n            for (var j = 0; j <= slices; j++)\r\n            {\r\n                var u = j / slices;\r\n                //\r\n                uvs.push(u, v);\r\n                //\r\n                var p = func(u, v);\r\n                positions.push(p.x, p.y, p.z);\r\n                //\r\n                if (i < stacks && j < slices)\r\n                {\r\n                    var a = i * sliceCount + j;\r\n                    var b = i * sliceCount + j + 1;\r\n                    var c = (i + 1) * sliceCount + j + 1;\r\n                    var d = (i + 1) * sliceCount + j;\r\n                    indices.push(a, b, d);\r\n                    indices.push(b, c, d);\r\n                }\r\n            }\r\n        }\r\n        // 反面\r\n        if (doubleside)\r\n        {\r\n            positions = positions.concat(positions);\r\n            uvs = uvs.concat(uvs);\r\n            var start = (stacks + 1) * (slices + 1);\r\n            for (let i = 0, n = indices.length; i < n; i += 3)\r\n            {\r\n                indices.push(start + indices[i], start + indices[i + 2], start + indices[i + 1]);\r\n            }\r\n        }\r\n        this.indices = indices;\r\n        this.positions = positions;\r\n        this.uvs = uvs;\r\n\r\n        this.invalidateGeometry();\r\n    }\r\n\r\n    /**\r\n     * 构建几何体\r\n     */\r\n    protected buildGeometry()\r\n    {\r\n        var positions = this.positions;\r\n        for (let i = 0, half = positions.length / 2; i < half; i++)\r\n        {\r\n            positions[i + half] = positions[i];\r\n        }\r\n        this.positions = positions;\r\n        this.normals = geometryUtils.createVertexNormals(this.indices, this.positions, true);\r\n        this.tangents = geometryUtils.createVertexTangents(this.indices, this.positions, this.uvs, true)\r\n    }\r\n}\r\n","import { Entity } from \"../core/Entity\";\r\nimport { MeshRenderer } from \"../core/MeshRenderer\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { geometryUtils } from \"../geometry/GeometryUtils\";\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface GeometryTypes { QuadGeometry: QuadGeometry }\r\n}\r\n\r\n/**\r\n * 四边形面皮几何体\r\n */\r\nexport class QuadGeometry extends Geometry\r\n{\r\n    __class__: \"feng3d.QuadGeometry\";\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        var size = 0.5;\r\n\r\n        this.positions = [-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0];\r\n        this.uvs = [0, 0, 1, 0, 1, 1, 0, 1];\r\n        this.indices = [0, 1, 2, 0, 2, 3];\r\n\r\n        this.normals = geometryUtils.createVertexNormals(this.indices, this.positions, true);\r\n        this.tangents = geometryUtils.createVertexTangents(this.indices, this.positions, this.uvs, true)\r\n    }\r\n}\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface DefaultGeometry\r\n    {\r\n        Quad: QuadGeometry;\r\n    }\r\n}\r\nGeometry.setDefault(\"Quad\", new QuadGeometry());\r\n\r\nEntity.registerPrimitive(\"Quad\", (g) =>\r\n{\r\n    g.addComponent(MeshRenderer).geometry = Geometry.getDefault(\"Quad\");\r\n});\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        Quad: Entity;\r\n    }\r\n}","import { Entity } from \"../core/Entity\";\r\nimport { MeshRenderer } from \"../core/MeshRenderer\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface GeometryTypes { SphereGeometry: SphereGeometry }\r\n}\r\n/**\r\n * 球体几何体\r\n * @author DawnKing 2016-09-12\r\n */\r\nexport class SphereGeometry extends Geometry\r\n{\r\n\r\n    __class__: \"feng3d.SphereGeometry\";\r\n\r\n    /**\r\n     * 球体半径\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    radius = 0.5;\r\n\r\n    /**\r\n     * 横向分割数\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsW = 16;\r\n\r\n    /**\r\n     * 纵向分割数\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    segmentsH = 12;\r\n\r\n    /**\r\n     * 是否朝上\r\n     */\r\n    @serialize\r\n    @oav()\r\n    @watch(\"invalidateGeometry\")\r\n    yUp = true;\r\n\r\n    protected _name = \"Sphere\";\r\n\r\n    /**\r\n     * 构建几何体数据\r\n     * @param this.radius 球体半径\r\n     * @param this.segmentsW 横向分割数\r\n     * @param this.segmentsH 纵向分割数\r\n     * @param this.yUp 正面朝向 true:Y+ false:Z+\r\n     */\r\n    protected buildGeometry()\r\n    {\r\n        var vertexPositionData: number[] = [];\r\n        var vertexNormalData: number[] = [];\r\n        var vertexTangentData: number[] = [];\r\n\r\n        var startIndex: number;\r\n        var index = 0;\r\n        var comp1: number, comp2: number, t1: number, t2: number;\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            startIndex = index;\r\n\r\n            var horangle = Math.PI * yi / this.segmentsH;\r\n            var z = -this.radius * Math.cos(horangle);\r\n            var ringradius = this.radius * Math.sin(horangle);\r\n\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n                var verangle = 2 * Math.PI * xi / this.segmentsW;\r\n                var x = ringradius * Math.cos(verangle);\r\n                var y = ringradius * Math.sin(verangle);\r\n                var normLen = 1 / Math.sqrt(x * x + y * y + z * z);\r\n                var tanLen = Math.sqrt(y * y + x * x);\r\n\r\n                if (this.yUp)\r\n                {\r\n                    t1 = 0;\r\n                    t2 = tanLen > .007 ? x / tanLen : 0;\r\n                    comp1 = -z;\r\n                    comp2 = y;\r\n                }\r\n                else\r\n                {\r\n                    t1 = tanLen > .007 ? x / tanLen : 0;\r\n                    t2 = 0;\r\n                    comp1 = y;\r\n                    comp2 = z;\r\n                }\r\n\r\n                if (xi == this.segmentsW)\r\n                {\r\n                    vertexPositionData[index] = vertexPositionData[startIndex];\r\n                    vertexPositionData[index + 1] = vertexPositionData[startIndex + 1];\r\n                    vertexPositionData[index + 2] = vertexPositionData[startIndex + 2];\r\n\r\n                    vertexNormalData[index] = vertexNormalData[startIndex] + x * normLen * 0.5;\r\n                    vertexNormalData[index + 1] = vertexNormalData[startIndex + 1] + comp1 * normLen * 0.5;\r\n                    vertexNormalData[index + 2] = vertexNormalData[startIndex + 2] + comp2 * normLen * 0.5;\r\n\r\n                    vertexTangentData[index] = tanLen > .007 ? -y / tanLen : 1;\r\n                    vertexTangentData[index + 1] = t1;\r\n                    vertexTangentData[index + 2] = t2;\r\n                }\r\n                else\r\n                {\r\n                    vertexPositionData[index] = x;\r\n                    vertexPositionData[index + 1] = comp1;\r\n                    vertexPositionData[index + 2] = comp2;\r\n\r\n                    vertexNormalData[index] = x * normLen;\r\n                    vertexNormalData[index + 1] = comp1 * normLen;\r\n                    vertexNormalData[index + 2] = comp2 * normLen;\r\n\r\n                    vertexTangentData[index] = tanLen > .007 ? -y / tanLen : 1;\r\n                    vertexTangentData[index + 1] = t1;\r\n                    vertexTangentData[index + 2] = t2;\r\n                }\r\n\r\n                if (xi > 0 && yi > 0)\r\n                {\r\n\r\n                    if (yi == this.segmentsH)\r\n                    {\r\n                        vertexPositionData[index] = vertexPositionData[startIndex];\r\n                        vertexPositionData[index + 1] = vertexPositionData[startIndex + 1];\r\n                        vertexPositionData[index + 2] = vertexPositionData[startIndex + 2];\r\n                    }\r\n                }\r\n\r\n                index += 3;\r\n            }\r\n        }\r\n\r\n        this.positions = vertexPositionData;\r\n        this.normals = vertexNormalData;\r\n        this.tangents = vertexTangentData;\r\n\r\n        var uvData = this.buildUVs();\r\n        this.uvs = uvData;\r\n\r\n        var indices = this.buildIndices();\r\n        this.indices = indices;\r\n    }\r\n\r\n    /**\r\n     * 构建顶点索引\r\n     * @param this.segmentsW 横向分割数\r\n     * @param this.segmentsH 纵向分割数\r\n     * @param this.yUp 正面朝向 true:Y+ false:Z+\r\n     */\r\n    private buildIndices()\r\n    {\r\n        var indices: number[] = [];\r\n\r\n        var numIndices = 0;\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n                if (xi > 0 && yi > 0)\r\n                {\r\n                    var a = (this.segmentsW + 1) * yi + xi;\r\n                    var b = (this.segmentsW + 1) * yi + xi - 1;\r\n                    var c = (this.segmentsW + 1) * (yi - 1) + xi - 1;\r\n                    var d = (this.segmentsW + 1) * (yi - 1) + xi;\r\n\r\n                    if (yi == this.segmentsH)\r\n                    {\r\n                        indices[numIndices++] = a;\r\n                        indices[numIndices++] = c;\r\n                        indices[numIndices++] = d;\r\n                    }\r\n                    else if (yi == 1)\r\n                    {\r\n                        indices[numIndices++] = a;\r\n                        indices[numIndices++] = b;\r\n                        indices[numIndices++] = c;\r\n                    }\r\n                    else\r\n                    {\r\n                        indices[numIndices++] = a;\r\n                        indices[numIndices++] = b;\r\n                        indices[numIndices++] = c;\r\n                        indices[numIndices++] = a;\r\n                        indices[numIndices++] = c;\r\n                        indices[numIndices++] = d;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return indices;\r\n    }\r\n\r\n    /**\r\n     * 构建uv\r\n     * @param this.segmentsW 横向分割数\r\n     * @param this.segmentsH 纵向分割数\r\n     */\r\n    private buildUVs()\r\n    {\r\n        var data: number[] = [];\r\n        var index = 0;\r\n\r\n        for (var yi = 0; yi <= this.segmentsH; ++yi)\r\n        {\r\n            for (var xi = 0; xi <= this.segmentsW; ++xi)\r\n            {\r\n                data[index++] = xi / this.segmentsW;\r\n                data[index++] = yi / this.segmentsH;\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n    export interface DefaultGeometry\r\n    {\r\n        Sphere: SphereGeometry;\r\n    }\r\n}\r\nGeometry.setDefault(\"Sphere\", new SphereGeometry());\r\n\r\nEntity.registerPrimitive(\"Sphere\", (g) =>\r\n{\r\n    g.addComponent(MeshRenderer).geometry = Geometry.getDefault(\"Sphere\");\r\n});\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        Sphere: Entity;\r\n    }\r\n}","import { Entity } from \"../core/Entity\";\r\nimport { MeshRenderer } from \"../core/MeshRenderer\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\nimport { watch } from \"@feng3d/watcher\";\r\n\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n\texport interface GeometryTypes { TorusGeometry: TorusGeometry }\r\n}\r\n\r\n/**\r\n * 圆环几何体\r\n */\r\nexport class TorusGeometry extends Geometry\r\n{\r\n\r\n\t__class__: \"feng3d.TorusGeometry\" = \"feng3d.TorusGeometry\";\r\n\r\n\t/**\r\n\t * 半径\r\n\t */\r\n\t@serialize\r\n\t@oav()\r\n\t@watch(\"invalidateGeometry\")\r\n\tradius = 0.5;\r\n\r\n\t/**\r\n\t * 管道半径\r\n\t */\r\n\t@serialize\r\n\t@oav()\r\n\t@watch(\"invalidateGeometry\")\r\n\ttubeRadius = 0.1;\r\n\r\n\t/**\r\n\t * 半径方向分割数\r\n\t */\r\n\t@serialize\r\n\t@oav()\r\n\t@watch(\"invalidateGeometry\")\r\n\tsegmentsR = 16;\r\n\r\n\t/**\r\n\t * 管道方向分割数\r\n\t */\r\n\t@serialize\r\n\t@oav()\r\n\t@watch(\"invalidateGeometry\")\r\n\tsegmentsT = 8;\r\n\r\n\t/**\r\n\t * 是否朝上\r\n\t */\r\n\t@serialize\r\n\t@oav()\r\n\t@watch(\"invalidateGeometry\")\r\n\tyUp = true;\r\n\r\n\tprotected _name = \"Torus\";\r\n\r\n\t//\r\n\tprotected _vertexPositionData: number[];\r\n\tprotected _vertexNormalData: number[];\r\n\tprotected _vertexTangentData: number[];\r\n\tprivate _rawIndices: number[];\r\n\tprivate _vertexIndex: number;\r\n\tprivate _currentTriangleIndex: number;\r\n\tprivate _numVertices: number;\r\n\tprivate _vertexPositionStride = 3;\r\n\tprivate _vertexNormalStride = 3;\r\n\tprivate _vertexTangentStride = 3;\r\n\r\n\t/**\r\n\t * 添加顶点数据\r\n\t */\r\n\tprivate addVertex(vertexIndex: number, px: number, py: number, pz: number, nx: number, ny: number, nz: number, tx: number, ty: number, tz: number)\r\n\t{\r\n\t\tthis._vertexPositionData[vertexIndex * this._vertexPositionStride] = px;\r\n\t\tthis._vertexPositionData[vertexIndex * this._vertexPositionStride + 1] = py;\r\n\t\tthis._vertexPositionData[vertexIndex * this._vertexPositionStride + 2] = pz;\r\n\t\tthis._vertexNormalData[vertexIndex * this._vertexNormalStride] = nx;\r\n\t\tthis._vertexNormalData[vertexIndex * this._vertexNormalStride + 1] = ny;\r\n\t\tthis._vertexNormalData[vertexIndex * this._vertexNormalStride + 2] = nz;\r\n\t\tthis._vertexTangentData[vertexIndex * this._vertexTangentStride] = tx;\r\n\t\tthis._vertexTangentData[vertexIndex * this._vertexTangentStride + 1] = ty;\r\n\t\tthis._vertexTangentData[vertexIndex * this._vertexTangentStride + 2] = tz;\r\n\t}\r\n\r\n\t/**\r\n\t * 添加三角形索引数据\r\n\t * @param currentTriangleIndex\t\t当前三角形索引\r\n\t * @param cwVertexIndex0\t\t\t索引0\r\n\t * @param cwVertexIndex1\t\t\t索引1\r\n\t * @param cwVertexIndex2\t\t\t索引2\r\n\t */\r\n\tprivate addTriangleClockWise(currentTriangleIndex: number, cwVertexIndex0: number, cwVertexIndex1: number, cwVertexIndex2: number)\r\n\t{\r\n\t\tthis._rawIndices[currentTriangleIndex * 3] = cwVertexIndex0;\r\n\t\tthis._rawIndices[currentTriangleIndex * 3 + 1] = cwVertexIndex1;\r\n\t\tthis._rawIndices[currentTriangleIndex * 3 + 2] = cwVertexIndex2;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tprotected buildGeometry()\r\n\t{\r\n\t\tvar i: number, j: number;\r\n\t\tvar x: number, y: number, z: number, nx: number, ny: number, nz: number, revolutionAngleR: number, revolutionAngleT: number;\r\n\t\tvar numTriangles: number;\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\t\tthis._vertexIndex = 0;\r\n\t\tthis._currentTriangleIndex = 0;\r\n\r\n\t\t// evaluate target number of vertices, triangles and indices\r\n\t\tthis._numVertices = (this.segmentsT + 1) * (this.segmentsR + 1); // this.segmentsT + 1 because of closure, this.segmentsR + 1 because of closure\r\n\t\tnumTriangles = this.segmentsT * this.segmentsR * 2; // each level has segmentsR quads, each of 2 triangles\r\n\r\n\t\tthis._vertexPositionData = [];\r\n\t\tthis._vertexNormalData = [];\r\n\t\tthis._vertexTangentData = [];\r\n\t\tthis._rawIndices = [];\r\n\t\tthis.buildUVs();\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDeltaR = 2 * Math.PI / this.segmentsR;\r\n\t\tvar revolutionAngleDeltaT = 2 * Math.PI / this.segmentsT;\r\n\r\n\t\tvar comp1: number, comp2: number;\r\n\t\tvar t1: number, t2: number, n1: number, n2: number;\r\n\r\n\t\tvar startPositionIndex: number;\r\n\r\n\t\t// surface\r\n\t\tvar a: number, b: number, c: number, d: number, length: number;\r\n\r\n\t\tfor (j = 0; j <= this.segmentsT; ++j)\r\n\t\t{\r\n\t\t\tstartPositionIndex = j * (this.segmentsR + 1) * this._vertexPositionStride;\r\n\r\n\t\t\tfor (i = 0; i <= this.segmentsR; ++i)\r\n\t\t\t{\r\n\t\t\t\tthis._vertexIndex = j * (this.segmentsR + 1) + i;\r\n\r\n\t\t\t\t// revolution vertex\r\n\t\t\t\trevolutionAngleR = i * revolutionAngleDeltaR;\r\n\t\t\t\trevolutionAngleT = j * revolutionAngleDeltaT;\r\n\r\n\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\tnx = length * Math.cos(revolutionAngleR);\r\n\t\t\t\tny = length * Math.sin(revolutionAngleR);\r\n\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\tx = this.radius * Math.cos(revolutionAngleR) + this.tubeRadius * nx;\r\n\t\t\t\ty = this.radius * Math.sin(revolutionAngleR) + this.tubeRadius * ny;\r\n\t\t\t\tz = (j == this.segmentsT) ? 0 : this.tubeRadius * nz;\r\n\r\n\t\t\t\tif (this.yUp)\r\n\t\t\t\t{\r\n\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = (length ? nx / length : x / this.radius);\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\tt1 = (length ? nx / length : x / this.radius);\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i == this.segmentsR)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.addVertex(this._vertexIndex, x, this._vertexPositionData[startPositionIndex + 1], this._vertexPositionData[startPositionIndex + 2], nx, n1, n2, -(length ? ny / length : y / this.radius), t1, t2);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.addVertex(this._vertexIndex, x, comp1, comp2, nx, n1, n2, -(length ? ny / length : y / this.radius), t1, t2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// close triangle\r\n\t\t\t\tif (i > 0 && j > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\ta = this._vertexIndex; // current\r\n\t\t\t\t\tb = this._vertexIndex - 1; // previous\r\n\t\t\t\t\tc = b - this.segmentsR - 1; // previous of last level\r\n\t\t\t\t\td = a - this.segmentsR - 1; // current of last level\r\n\t\t\t\t\tthis.addTriangleClockWise(this._currentTriangleIndex++, a, b, c);\r\n\t\t\t\t\tthis.addTriangleClockWise(this._currentTriangleIndex++, a, c, d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.positions = this._vertexPositionData;\r\n\t\tthis.normals = this._vertexNormalData;\r\n\t\tthis.tangents = this._vertexTangentData;\r\n\r\n\t\tthis.indices = this._rawIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tprotected buildUVs()\r\n\t{\r\n\t\tvar i: number, j: number;\r\n\t\tvar stride = 2;\r\n\t\tvar data: number[] = [];\r\n\r\n\t\t// evaluate num uvs\r\n\t\tvar numUvs = this._numVertices * stride;\r\n\r\n\t\t// current uv component index\r\n\t\tvar currentUvCompIndex = 0;\r\n\r\n\t\tvar index = 0;\r\n\t\t// surface\r\n\t\tfor (j = 0; j <= this.segmentsT; ++j)\r\n\t\t{\r\n\t\t\tfor (i = 0; i <= this.segmentsR; ++i)\r\n\t\t\t{\r\n\t\t\t\tindex = j * (this.segmentsR + 1) + i;\r\n\t\t\t\t// revolution vertex\r\n\t\t\t\tdata[index * stride] = i / this.segmentsR;\r\n\t\t\t\tdata[index * stride + 1] = j / this.segmentsT;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// build real data from raw data\r\n\t\tthis.uvs = data;\r\n\t}\r\n}\r\ndeclare module \"../geometry/Geometry\"\r\n{\r\n\texport interface DefaultGeometry\r\n\t{\r\n\t\tTorus: TorusGeometry;\r\n\t}\r\n}\r\n\r\nGeometry.setDefault(\"Torus\", new TorusGeometry());\r\n\r\nEntity.registerPrimitive(\"Torus\", (g) =>\r\n{\r\n\tg.addComponent(MeshRenderer).geometry = Geometry.getDefault(\"Torus\");\r\n});\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n\texport interface PrimitiveEntity\r\n\t{\r\n\t\tTorus: Entity;\r\n\t}\r\n}\r\n\r\n\r\n","import { EventEmitter } from \"@feng3d/event\";\r\nimport { Rectangle } from \"@feng3d/math\";\r\nimport { windowEventProxy } from \"@feng3d/shortcut\";\r\nimport { Entity, EntityEventMap } from \"../../core/Entity\";\r\nimport { Renderable } from \"../../core/Renderable\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { GL } from \"@feng3d/renderer\";\r\n\r\n/**\r\n * 鼠标拾取渲染器\r\n */\r\nexport class MouseRenderer extends EventEmitter\r\n{\r\n\r\n    private objects: Entity[] = [];\r\n\r\n    /**\r\n     * 渲染\r\n     */\r\n    draw(gl: GL, viewRect: Rectangle): Entity<EntityEventMap>\r\n    {\r\n        var mouseX = windowEventProxy.clientX;\r\n        var mouseY = windowEventProxy.clientY;\r\n\r\n        var offsetX = -(mouseX - viewRect.x);\r\n        var offsetY = -(viewRect.height - (mouseY - viewRect.y));//y轴与window中坐标反向，所以需要 h = (maxHeight - h)\r\n\r\n        gl.clearColor(0, 0, 0, 0);\r\n        gl.clearDepth(1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        gl.viewport(offsetX, offsetY, viewRect.width, viewRect.height);\r\n\r\n        this.objects.length = 1;\r\n\r\n        //启动裁剪，只绘制一个像素\r\n        gl.enable(gl.SCISSOR_TEST);\r\n        gl.scissor(0, 0, 1, 1);\r\n        // super.draw(renderContext);\r\n        gl.disable(gl.SCISSOR_TEST);\r\n\r\n        //读取鼠标拾取索引\r\n        // this.frameBufferObject.readBuffer(gl, \"objectID\");\r\n\r\n        var data = new Uint8Array(4);\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n        var id = data[0] + data[1] * 255 + data[2] * 255 * 255 + data[3] * 255 * 255 * 255 - data[3];//最后（- data[3]）表示很奇怪，不过data[3]一般情况下为0\r\n        // log(`选中索引3D对象${id}`, data.toString());\r\n\r\n        return this.objects[id];\r\n    }\r\n\r\n    protected drawRenderables(gl: GL, renderable: Renderable)\r\n    {\r\n        if (renderable.node3d.mouseEnabled)\r\n        {\r\n            var object = renderable.entity;\r\n            var u_objectID = this.objects.length;\r\n            this.objects[u_objectID] = object;\r\n\r\n            var renderAtomic = renderable.renderAtomic;\r\n\r\n            renderAtomic.uniforms.u_objectID = u_objectID;\r\n            // super.drawRenderables(renderContext, model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绘制3D对象\r\n     */\r\n    protected drawGameObject(gl: GL, renderAtomic: RenderAtomic)\r\n    {\r\n        // var shader = new Shader();\r\n        // shader.vertexCode = shaderlib.getShader(\"mouse\").vertex;\r\n        // shader.fragmentCode = shaderlib.getShader(\"mouse\").fragment;\r\n        // super.drawGameObject(gl, renderAtomic, shader);\r\n    }\r\n}\r\n\r\nexport const mouseRenderer = new MouseRenderer();\r\n","import { Camera } from \"../cameras/Camera\";\r\nimport { Renderable } from \"../core/Renderable\";\r\nimport { Scene } from \"./Scene\";\r\n\r\n/**\r\n * 用于处理从场景中获取特定数据\r\n */\r\nexport class SceneUtil\r\n{\r\n\r\n    /**\r\n     * 获取场景中可视需要混合的渲染对象\r\n     * \r\n     * @param scene 场景\r\n     * @param camera 摄像机\r\n     */\r\n    getBlenditems(scene: Scene, camera: Camera)\r\n    {\r\n        // throw new Error(\"Method not implemented.\");\r\n\r\n        // scene.getComponentsInChildren()\r\n\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取需要渲染的对象\r\n     * \r\n     * #### 渲染需求条件\r\n     * 1. visible == true\r\n     * 1. 在摄像机视锥内\r\n     * 1. model.enabled == true\r\n     * \r\n     * @param gameObject \r\n     * @param camera \r\n     */\r\n    getActiveRenderers(scene: Scene, camera: Camera)\r\n    {\r\n        var renderers: Renderable[] = [];\r\n        var frustum = camera.frustum;\r\n\r\n        var node3ds = [scene.node3d];\r\n        while (node3ds.length > 0)\r\n        {\r\n            var node3d = node3ds.pop();\r\n\r\n            if (!node3d.visible)\r\n                continue;\r\n            var renderer = node3d.getComponent(Renderable);\r\n            if (renderer && renderer.enabled)\r\n            {\r\n                if (renderer.selfWorldBounds)\r\n                {\r\n                    if (frustum.intersectsBox(renderer.selfWorldBounds))\r\n                        renderers.push(renderer);\r\n                }\r\n            }\r\n            node3ds = node3ds.concat(node3d.children);\r\n        }\r\n        return renderers;\r\n    }\r\n\r\n}\r\n\r\nexport const sceneUtil = new SceneUtil();\r\n","import { CoordinateSystem, RotationOrder } from \"@feng3d/math\";\r\n\r\nexport class Setting\r\n{\r\n    /**\r\n     * 版本号\r\n     */\r\n    version = \"0.1.3\";\r\n\r\n    /**\r\n     * 引擎中使用的坐标系统，默认左手坐标系统。\r\n     * \r\n     * three.js 右手坐标系统。\r\n     * playcanvas 右手坐标系统。\r\n     * unity    左手坐标系统。\r\n     */\r\n    coordinateSystem = CoordinateSystem.LEFT_HANDED;\r\n\r\n    /**\r\n     * 引擎中使用的旋转顺序。\r\n     * \r\n     * unity YXZ\r\n     * playcanvas ZYX\r\n     * three.js XYZ\r\n     */\r\n    defaultRotationOrder = RotationOrder.YXZ;\r\n}\r\n\r\nexport const setting = new Setting();","import { Camera } from \"../cameras/Camera\";\r\nimport { Attribute } from \"@feng3d/renderer\";\r\nimport { Index } from \"@feng3d/renderer\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { Shader } from \"@feng3d/renderer\";\r\nimport { CullFace } from \"@feng3d/renderer\";\r\nimport { GL } from \"@feng3d/renderer\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { SkyBox } from \"./SkyBox\";\r\n\r\n/**\r\n * 天空盒渲染器\r\n */\r\nexport class SkyBoxRenderer\r\n{\r\n    private renderAtomic: RenderAtomic;\r\n\r\n    init()\r\n    {\r\n        if (!this.renderAtomic)\r\n        {\r\n            var renderAtomic = this.renderAtomic = new RenderAtomic();\r\n            //八个顶点，32个number\r\n            var vertexPositionData = [ //\r\n                -1, 1, -1,//\r\n                1, 1, -1, //\r\n                1, 1, 1, //\r\n                -1, 1, 1, //\r\n                -1, -1, -1,//\r\n                1, -1, -1, //\r\n                1, -1, 1,//\r\n                -1, -1, 1 //\r\n            ];\r\n            renderAtomic.attributes.a_position = new Attribute(\"a_position\", vertexPositionData, 3);\r\n            //6个面，12个三角形，36个顶点索引\r\n            var indices = [ //\r\n                0, 1, 2, 2, 3, 0, //\r\n                6, 5, 4, 4, 7, 6, //\r\n                2, 6, 7, 7, 3, 2, //\r\n                4, 5, 1, 1, 0, 4, //\r\n                4, 0, 3, 3, 7, 4, //\r\n                2, 1, 5, 5, 6, 2 //\r\n            ];\r\n            renderAtomic.indexBuffer = new Index();\r\n            renderAtomic.indexBuffer.indices = indices;\r\n            //\r\n            var renderParams = renderAtomic.renderParams;\r\n            renderParams.cullFace = CullFace.NONE;\r\n            //\r\n\r\n            renderAtomic.shader = new Shader(\"skybox\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绘制场景中天空盒\r\n     * @param gl \r\n     * @param scene 场景\r\n     * @param camera 摄像机\r\n     */\r\n    draw(gl: GL, scene: Scene, camera: Camera)\r\n    {\r\n        var skybox = scene.activeSkyBoxs[0];\r\n        this.drawSkyBox(gl, skybox, scene, camera);\r\n    }\r\n\r\n    /**\r\n     * 绘制天空盒\r\n     * @param gl \r\n     * @param skybox 天空盒\r\n     * @param camera 摄像机\r\n     */\r\n    drawSkyBox(gl: GL, skybox: SkyBox, scene: Scene, camera: Camera)\r\n    {\r\n        if (!skybox) return;\r\n\r\n        this.init();\r\n\r\n        //\r\n        skybox.beforeRender(this.renderAtomic, scene, camera);\r\n\r\n        //\r\n        this.renderAtomic.uniforms.u_viewProjection = camera.viewProjection;\r\n        this.renderAtomic.uniforms.u_viewMatrix = camera.node3d.worldToLocalMatrix\r\n        this.renderAtomic.uniforms.u_cameraMatrix = camera.node3d.localToWorldMatrix;\r\n        this.renderAtomic.uniforms.u_cameraPos = camera.node3d.worldPosition;\r\n        this.renderAtomic.uniforms.u_skyBoxSize = camera.lens.far / Math.sqrt(3);\r\n\r\n        gl.render(this.renderAtomic);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 天空盒渲染器\r\n */\r\nexport const skyboxRenderer = new SkyBoxRenderer();\r\n","import { watch } from \"@feng3d/watcher\";\r\nimport { Texture2D } from \"./Texture2D\";\r\n\r\nexport class CanvasTexture2D extends Texture2D\r\n{\r\n\r\n    @watch(\"_canvasChanged\")\r\n    canvas: HTMLCanvasElement;\r\n\r\n    private _canvasChanged()\r\n    {\r\n        this._pixels = this.canvas;\r\n        this.invalidate();\r\n    }\r\n}\r\n","import { watch } from \"@feng3d/watcher\";\r\nimport { Texture2D } from \"./Texture2D\";\r\n\r\nexport class ImageDataTexture2D extends Texture2D\r\n{\r\n    @watch(\"_imageDataChanged\")\r\n    imageData: ImageData;\r\n\r\n    private _imageDataChanged()\r\n    {\r\n        this._pixels = this.imageData;\r\n        this.invalidate();\r\n    }\r\n}\r\n","import { watch } from \"@feng3d/watcher\";\r\nimport { Texture2D } from \"./Texture2D\";\r\n\r\n/**\r\n * 2D纹理\r\n */\r\nexport class ImageTexture2D extends Texture2D\r\n{\r\n    // __class__: \"feng3d.ImageTexture2D\" = \"feng3d.ImageTexture2D\";\r\n\r\n    @watch(\"_imageChanged\")\r\n    get image(): HTMLImageElement\r\n    {\r\n        return <any>this._pixels;\r\n    }\r\n\r\n    private _imageChanged()\r\n    {\r\n        this._pixels = this.image;\r\n        this.invalidate();\r\n    }\r\n}\r\n","import { watch } from \"@feng3d/watcher\";\r\nimport { Texture2D } from \"./Texture2D\";\r\n\r\nexport class VideoTexture2D extends Texture2D\r\n{\r\n    @watch(\"_videoChanged\")\r\n    video: HTMLVideoElement;\r\n\r\n    private _videoChanged()\r\n    {\r\n        this._pixels = this.video;\r\n        this.invalidate();\r\n    }\r\n}\r\n","import { mathUtil } from \"@feng3d/polyfill\";\r\n\r\n/**\r\n * 通用唯一标识符（Universally Unique Identifier）\r\n * \r\n * 用于给所有对象分配一个通用唯一标识符\r\n */\r\nexport class Uuid\r\n{\r\n\r\n    /**\r\n     * 获取数组 通用唯一标识符\r\n     * \r\n     * @param arr 数组\r\n     * @param separator 分割符\r\n     */\r\n    getArrayUuid(arr: any[], separator = \"$__uuid__$\")\r\n    {\r\n        var uuids = arr.map(v => this.getObjectUuid(v));\r\n        var groupUuid = uuids.join(separator);\r\n        return groupUuid;\r\n    }\r\n\r\n    /**\r\n     * 获取对象 通用唯一标识符\r\n     * \r\n     * 当参数object非Object对象时强制转换为字符串返回\r\n     * \r\n     * @param object 对象\r\n     */\r\n    getObjectUuid(object: Object)\r\n    {\r\n        if (Object.isBaseType(object))\r\n        {\r\n            return String(object);\r\n        }\r\n        if (!object[__uuid__])\r\n        {\r\n            Object.defineProperty(object, __uuid__, { value: mathUtil.uuid() });\r\n        }\r\n        return object[__uuid__];\r\n    }\r\n    objectUuid = new WeakMap<Object, string>();\r\n}\r\n\r\nexport const __uuid__ = \"__uuid__\";\r\nexport const uuid = new Uuid();\r\n","import { event } from '@feng3d/event';\r\nimport { FunctionPropertyNames } from \"@feng3d/polyfill\";\r\nimport { uuid } from \"./Uuid\";\r\n\r\ntype Wraps<T, K extends keyof T> = {\r\n    [P in K]: { space: T, funcName: K, oldPropertyDescriptor: PropertyDescriptor, original: Function, funcs: Function[] };\r\n};\r\n\r\n/**\r\n * 函数经\r\n * \r\n * 包装函数，以及对应的拆包\r\n */\r\nexport class FunctionWrap\r\n{\r\n    /**\r\n     * 扩展继承函数\r\n     * \r\n     * 可用于扩展原型中原有API中的实现\r\n     * \r\n     * ```\r\n    class A\r\n    {\r\n        a = \"a\";\r\n\r\n        f(p: string = \"p\", p1: string = \"\")\r\n        {\r\n            return p + p1;\r\n        }\r\n\r\n        extendF: (p?: string, p1?: string) => string;\r\n        oldf: (p?: string, p1?: string) => string;\r\n    }\r\n\r\n    var a = new A();\r\n    a.oldf = a.f;\r\n    a.extendF = function (p: string = \"p\", p1: string = \"\")\r\n    {\r\n        return [\"polyfill\", this.a, this.oldf()].join(\"-\")\r\n    }\r\n    functionwrap.extendFunction(a, \"f\", function (r)\r\n    {\r\n        return [\"polyfill\", this.a, r].join(\"-\");\r\n    });\r\n    // 验证 被扩展的a.f方法是否等价于 a.extendF\r\n    assert.ok(a.f() == a.extendF()); //true\r\n    \r\n     * ```\r\n     * \r\n     * @param object 被扩展函数所属对象或者原型\r\n     * @param funcName 被扩展函数名称\r\n     * @param extendFunc 在函数执行后执行的扩展函数\r\n     */\r\n    extendFunction<T, K extends FunctionPropertyNames<T>, V extends T[K]>(object: T, funcName: K, extendFunc: (this: T, r: ReturnType<V>, ...ps: Parameters<V>) => ReturnType<V>)\r\n    {\r\n        var oldFun = object[funcName];\r\n        object[funcName] = <any>(function (...args: Parameters<V>)\r\n        {\r\n            var r = (<any>oldFun).apply(this, args);\r\n            var args1 = (<any>args).concat();\r\n            args1.unshift(r);\r\n            r = extendFunc.apply(this, args1);\r\n            return r;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 包装函数\r\n     * \r\n     * 一般用于调试\r\n     * 使用场景示例：\r\n     * 1. 在函数执行前后记录时间来计算函数执行时间。\r\n     * 1. 在console.error调用前使用 debugger 进行断点调试。\r\n     * \r\n     * @param object 函数所属对象或者原型\r\n     * @param funcName 函数名称\r\n     * @param beforeFunc 在函数执行前执行的函数\r\n     * @param afterFunc 在函数执行后执行的函数\r\n     */\r\n    wrap<T, K extends FunctionPropertyNames<T>, F extends T[K]>(object: T, funcName: K, beforeFunc?: F, afterFunc?: F)\r\n    {\r\n        if (!beforeFunc && !afterFunc) return;\r\n\r\n        if (!Object.getOwnPropertyDescriptor(object, __functionwrap__))\r\n        {\r\n            Object.defineProperty(object, __functionwrap__, { value: {}, configurable: true, enumerable: false, writable: false });\r\n        }\r\n\r\n        var functionwraps: Wraps<T, K> = object[__functionwrap__];\r\n        var info = functionwraps[funcName];\r\n        if (!info)\r\n        {\r\n            var oldPropertyDescriptor = Object.getOwnPropertyDescriptor(object, funcName);\r\n            var original = <any>object[funcName];\r\n            functionwraps[funcName] = info = { space: object, funcName: funcName, oldPropertyDescriptor: oldPropertyDescriptor, original: original, funcs: [original] };\r\n            //\r\n            object[funcName] = <any>function ()\r\n            {\r\n                var args = arguments;\r\n                info.funcs.forEach(f =>\r\n                {\r\n                    f.apply(this, args);\r\n                });\r\n            }\r\n        }\r\n        var funcs = info.funcs;\r\n        if (beforeFunc)\r\n        {\r\n            Array.delete(funcs, beforeFunc);\r\n            funcs.unshift(beforeFunc);\r\n        }\r\n        if (afterFunc)\r\n        {\r\n            Array.delete(funcs, afterFunc);\r\n            funcs.push(afterFunc);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消包装函数\r\n     * \r\n     * 与wrap函数对应\r\n     * \r\n     * @param object 函数所属对象或者原型\r\n     * @param funcName 函数名称\r\n     * @param wrapFunc 在函数执行前执行的函数\r\n     * @param before 运行在原函数之前\r\n     */\r\n    unwrap<T, K extends FunctionPropertyNames<T>, V extends T[K]>(object: T, funcName: K, wrapFunc?: V)\r\n    {\r\n        var functionwraps: Wraps<T, K> = object[__functionwrap__];\r\n        var info = functionwraps[funcName];\r\n        if (!info) return;\r\n        if (wrapFunc == undefined)\r\n        {\r\n            info.funcs = [info.original];\r\n        } else\r\n        {\r\n            Array.delete(info.funcs, wrapFunc);\r\n        }\r\n        if (info.funcs.length == 1)\r\n        {\r\n            delete object[funcName];\r\n            if (info.oldPropertyDescriptor)\r\n                Object.defineProperty(object, funcName, info.oldPropertyDescriptor);\r\n            delete functionwraps[funcName];\r\n\r\n            if (Object.keys(functionwraps).length == 0)\r\n            {\r\n                delete object[__functionwrap__];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 包装一个异步函数，使其避免重复执行\r\n     * \r\n     * 使用场景示例：同时加载同一资源时，使其只加载一次，完成后调用所有相关回调函数。\r\n     * \r\n     * @param funcHost 函数所属对象\r\n     * @param func 函数\r\n     * @param params 函数除callback外的参数列表\r\n     * @param callback 完成回调函数\r\n     */\r\n    wrapAsyncFunc(funcHost: Object, func: Function, params: any[], callback: (...args: any[]) => void)\r\n    {\r\n        // 获取唯一编号\r\n        var cuuid = uuid.getArrayUuid([func].concat(params));\r\n        // 检查是否执行过\r\n        var result = this._wrapFResult[cuuid];\r\n        if (result)\r\n        {\r\n            callback.apply(null, result);\r\n            return;\r\n        }\r\n        // 监听执行完成事件\r\n        event.once(this, cuuid, () =>\r\n        {\r\n            // 完成时重新执行函数\r\n            this.wrapAsyncFunc(funcHost, func, params, callback);\r\n        });\r\n        // 正在执行时直接返回等待完成事件\r\n        if (this._state[cuuid]) return;\r\n        // 标记正在执行中\r\n        this._state[cuuid] = true;\r\n\r\n        // 执行函数\r\n        func.apply(funcHost, params.concat((...args: any[]) =>\r\n        {\r\n            // 清理执行标记\r\n            delete this._state[cuuid];\r\n            // 保存执行结果\r\n            this._wrapFResult[cuuid] = args;\r\n            // 通知执行完成\r\n            event.emit(this, cuuid);\r\n        }));\r\n    }\r\n\r\n    private _wrapFResult: { [cuuid: string]: any } = {};\r\n    private _state: { [uuid: string]: boolean } = {};\r\n}\r\n\r\nexport const __functionwrap__ = \"__functionwrap__\";\r\nexport const functionwrap = new FunctionWrap();\r\n","import { functionwrap } from \"./FunctionWarp\";\r\n\r\n/**\r\n * 是否开启调试\r\n */\r\nexport const debuger = true;\r\n\r\n/**\r\n * 调试工具\r\n */\r\nexport class Debug\r\n{\r\n\r\n    constructor()\r\n    {\r\n        // 断言失败前进入断点调试\r\n        functionwrap.wrap(console, \"assert\", (test: boolean) => { if (!test) debugger; });\r\n        // 输出错误前进入断点调试\r\n        functionwrap.wrap(console, \"error\", () => { debugger; });\r\n        functionwrap.wrap(console, \"warn\", () => { debugger; });\r\n    }\r\n\r\n    /**\r\n     * 测试代码运行时间\r\n     * @param fn 被测试的方法\r\n     * @param labal 标签\r\n     */\r\n    time(fn: Function, labal?: string)\r\n    {\r\n        labal = labal || fn[\"name\"] || \"Anonymous function \" + Math.random();\r\n        console.time(labal);\r\n        fn();\r\n        console.timeEnd(labal);\r\n    }\r\n}\r\n\r\n/**\r\n * 调试工具\r\n */\r\nexport const debug = new Debug();\r\n","import { Constructor } from \"@feng3d/polyfill\";\r\n\r\n/**\r\n * 对象池\r\n * \r\n * 对象池并不能带来性能的提升，反而会严重影响性能。但是在管理内存时可以考虑使用。\r\n * \r\n * js虚拟机会在对象没有被引用时自动释放内存，谨慎使用对象池。\r\n * \r\n */\r\nexport class Pool<T>\r\n{\r\n    private _objects: T[] = [];\r\n    private _type: new (...args: any[]) => T;\r\n\r\n    constructor(type: Constructor<T>)\r\n    {\r\n        this._type = type;\r\n    }\r\n\r\n    /**\r\n     * 获取对象\r\n     */\r\n    get()\r\n    {\r\n        var obj = this._objects.pop();\r\n        if (obj) return obj;\r\n        return new this._type();\r\n    }\r\n\r\n    /**\r\n     * 释放对象\r\n     * \r\n     * @param args 被释放对象列表\r\n     */\r\n    release(...args: T[])\r\n    {\r\n        args.forEach(element =>\r\n        {\r\n            this._objects.push(element);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取指定数量的对象\r\n     * \r\n     * @param num 数量\r\n     */\r\n    getArray(num: number)\r\n    {\r\n        var arr: T[];\r\n        if (this._objects.length <= num)\r\n        {\r\n            arr = this._objects.concat();\r\n            this._objects.length = 0;\r\n        } else\r\n        {\r\n            arr = this._objects.splice(0, num);\r\n        }\r\n        while (arr.length < num)\r\n        {\r\n            arr.push(new this._type());\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 释放对象\r\n     * \r\n     * @param objects 被释放对象列表\r\n     */\r\n    releaseArray(objects: T[])\r\n    {\r\n        objects.forEach(element =>\r\n        {\r\n            this._objects.push(element);\r\n        });\r\n    }\r\n}\r\n","\r\n/**\r\n * 常用正则表示式\r\n */\r\nexport class RegExps\r\n{\r\n    /**\r\n     * json文件\r\n     */\r\n    json = /(\\.json)\\b/i;\r\n\r\n    /**\r\n     * 图片\r\n     */\r\n    image = /(\\.jpg|\\.png|\\.jpeg|\\.gif)\\b/i;\r\n\r\n    /**\r\n     * 声音\r\n     */\r\n    audio = /(\\.ogg|\\.mp3|\\.wav)\\b/i;\r\n\r\n    /**\r\n     * 命名空间\r\n     */\r\n    namespace = /namespace\\s+([\\w$_\\d\\.]+)/;\r\n\r\n    /**\r\n     * 类\r\n     */\r\n    classReg = /(export\\s+)?(abstract\\s+)?class\\s+([\\w$_\\d]+)(\\s+extends\\s+([\\w$_\\d\\.]+))?/;\r\n}\r\n\r\n/**\r\n * 常用正则表示式\r\n */\r\nexport const regExps = new RegExps();\r\n","import { ticker } from \"./Ticker\";\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\ndeclare global\r\n{\r\n    interface Performance\r\n    {\r\n        memory: any;\r\n    }\r\n}\r\n\r\nexport class Stats\r\n{\r\n    static instance: Stats;\r\n    static init(parent?: HTMLElement)\r\n    {\r\n        if (!this.instance)\r\n        {\r\n            this.instance = new Stats();\r\n            parent = parent || document.body;\r\n            parent.appendChild(this.instance.dom);\r\n        }\r\n        ticker.onframe(this.instance.update, this.instance);\r\n    }\r\n\r\n    REVISION: number;\r\n    dom: HTMLDivElement;\r\n    domElement: HTMLDivElement;\r\n    addPanel: (panel: StatsPanel) => StatsPanel;\r\n    showPanel: (id: number) => void;\r\n    setMode: (id: number) => void;\r\n    begin: () => void;\r\n    end: () => number;\r\n    update: () => void;\r\n\r\n    constructor()\r\n    {\r\n        var mode = 0;\r\n        if (typeof document == \"undefined\") return;\r\n\r\n        var container = document.createElement('div');\r\n        container.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;';\r\n        container.addEventListener('click', function (event)\r\n        {\r\n            event.preventDefault();\r\n            showPanel(++mode % container.children.length);\r\n        }, false);\r\n\r\n        //\r\n        function addPanel(panel: StatsPanel)\r\n        {\r\n            container.appendChild(panel.dom);\r\n            return panel;\r\n        }\r\n\r\n        function showPanel(id: number)\r\n        {\r\n            for (var i = 0; i < container.children.length; i++)\r\n            {\r\n                (<HTMLCanvasElement>container.children[i]).style.display = i === id ? 'block' : 'none';\r\n            }\r\n            mode = id;\r\n        }\r\n\r\n        //\r\n        var beginTime = (performance || Date).now(), prevTime = beginTime, frames = 0;\r\n\r\n        var fpsPanel = addPanel(new StatsPanel('FPS', '#0ff', '#002'));\r\n        var msPanel = addPanel(new StatsPanel('MS', '#0f0', '#020'));\r\n\r\n        if (self.performance && self.performance.memory)\r\n        {\r\n            var memPanel = addPanel(new StatsPanel('MB', '#f08', '#201'));\r\n        }\r\n\r\n        showPanel(0);\r\n\r\n        this.REVISION = 16;\r\n        this.dom = container;\r\n        this.addPanel = addPanel;\r\n        this.showPanel = showPanel;\r\n\r\n        this.begin = () =>\r\n        {\r\n            beginTime = (performance || Date).now();\r\n        }\r\n\r\n        this.end = () =>\r\n        {\r\n            frames++;\r\n            var time = (performance || Date).now();\r\n            msPanel.update(time - beginTime, 200);\r\n            if (time > prevTime + 1000)\r\n            {\r\n                fpsPanel.update((frames * 1000) / (time - prevTime), 100);\r\n                prevTime = time;\r\n                frames = 0;\r\n                if (memPanel)\r\n                {\r\n                    var memory = performance.memory;\r\n                    memPanel.update(memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576);\r\n                }\r\n            }\r\n            return time;\r\n        }\r\n\r\n        this.update = () =>\r\n        {\r\n            beginTime = this.end();\r\n        }\r\n\r\n        // Backwards Compatibility\r\n\r\n        this.domElement = container;\r\n        this.setMode = showPanel;\r\n    };\r\n}\r\n\r\nexport class StatsPanel\r\n{\r\n    dom: HTMLCanvasElement;\r\n    update: (value: number, maxValue: number) => void;\r\n\r\n    constructor(name: string, fg: string, bg: string)\r\n    {\r\n        var min = Infinity, max = 0, round = Math.round;\r\n        var PR = round(window.devicePixelRatio || 1);\r\n\r\n        var WIDTH = 80 * PR, HEIGHT = 48 * PR,\r\n            TEXT_X = 3 * PR, TEXT_Y = 2 * PR,\r\n            GRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\r\n            GRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\r\n\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width = WIDTH;\r\n        canvas.height = HEIGHT;\r\n        canvas.style.cssText = 'width:80px;height:48px';\r\n\r\n        var context0 = canvas.getContext('2d');\r\n        if (context0 == null)\r\n        {\r\n            console.log(`无法创建 CanvasRenderingContext2D `);\r\n            return;\r\n        }\r\n        var context = context0;\r\n        context.font = 'bold ' + (9 * PR) + 'px Helvetica,Arial,sans-serif';\r\n        context.textBaseline = 'top';\r\n\r\n        context.fillStyle = bg;\r\n        context.fillRect(0, 0, WIDTH, HEIGHT);\r\n\r\n        context.fillStyle = fg;\r\n        context.fillText(name, TEXT_X, TEXT_Y);\r\n        context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\r\n\r\n        context.fillStyle = bg;\r\n        context.globalAlpha = 0.9;\r\n        context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\r\n\r\n        this.dom = canvas;\r\n\r\n        this.update = (value: number, maxValue: number) =>\r\n        {\r\n            min = Math.min(min, value);\r\n            max = Math.max(max, value);\r\n\r\n            context.fillStyle = bg;\r\n            context.globalAlpha = 1;\r\n            context.fillRect(0, 0, WIDTH, GRAPH_Y);\r\n            context.fillStyle = fg;\r\n            context.fillText(round(value) + ' ' + name + ' (' + round(min) + '-' + round(max) + ')', TEXT_X, TEXT_Y);\r\n\r\n            context.drawImage(canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT);\r\n\r\n            context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT);\r\n\r\n            context.fillStyle = bg;\r\n            context.globalAlpha = 0.9;\r\n            context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round((1 - (value / maxValue)) * GRAPH_HEIGHT));\r\n        }\r\n    }\r\n}\r\n","import { Matrix4x4, Plane, Vector3, Vector4 } from \"@feng3d/math\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { RegisterComponent } from \"../component/Component\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { Renderable } from \"../core/Renderable\";\r\nimport { Geometry } from \"../geometry/Geometry\";\r\nimport { Material } from \"../materials/Material\";\r\nimport { AddComponentMenu } from \"../Menu\";\r\nimport { PlaneGeometry } from \"../primitives/PlaneGeometry\";\r\nimport { FrameBufferObject } from \"../render/FrameBufferObject\";\r\nimport { RenderAtomic } from \"@feng3d/renderer\";\r\nimport { Scene } from \"../scene/Scene\";\r\nimport { serialization } from \"@feng3d/serialization\";\r\nimport { WaterUniforms } from \"./WaterMaterial\";\r\n\r\ndeclare module \"../component/Component\"\r\n{\r\n    export interface ComponentMap { Water: Water }\r\n}\r\n\r\ndeclare module \"../core/Entity\"\r\n{\r\n    export interface PrimitiveEntity\r\n    {\r\n        Water: Entity;\r\n    }\r\n}\r\n\r\n/**\r\n * The Water component renders the terrain.\r\n */\r\n@AddComponentMenu(\"Graphics/Water\")\r\n@RegisterComponent()\r\nexport class Water extends Renderable\r\n{\r\n    __class__: \"feng3d.Water\";\r\n\r\n    geometry: PlaneGeometry = Geometry.getDefault(\"Plane\");\r\n\r\n    protected _material = Material.getDefault(\"Water-Material\");\r\n\r\n    /**\r\n     * 帧缓冲对象，用于处理水面反射\r\n     */\r\n    private frameBufferObject = new FrameBufferObject();\r\n\r\n    beforeRender(renderAtomic: RenderAtomic, scene: Scene, camera: Camera)\r\n    {\r\n        var uniforms = <WaterUniforms>this.material.uniforms;\r\n        var sun = this.node3d.scene.activeDirectionalLights[0];\r\n        if (sun)\r\n        {\r\n            uniforms.u_sunColor = sun.color;\r\n            uniforms.u_sunDirection = sun.node3d.localToWorldMatrix.getAxisZ().negate();\r\n        }\r\n\r\n        var clipBias = 0;\r\n\r\n        uniforms.u_time += 1.0 / 60.0;\r\n\r\n        // this.material.uniforms.s_mirrorSampler.url = \"Assets/floor_diffuse.jpg\";\r\n\r\n        super.beforeRender(renderAtomic, scene, camera);\r\n\r\n        if (1) return;\r\n        //\r\n        var mirrorWorldPosition = this.node3d.worldPosition;\r\n        var cameraWorldPosition = camera.node3d.worldPosition;\r\n\r\n        var rotationMatrix = this.node3d.rotationMatrix;\r\n\r\n        var normal = rotationMatrix.getAxisZ();\r\n\r\n        var view = mirrorWorldPosition.subTo(cameraWorldPosition);\r\n        if (view.dot(normal) > 0) return;\r\n\r\n        view.reflect(normal).negate();\r\n        view.add(mirrorWorldPosition);\r\n\r\n        rotationMatrix = camera.node3d.rotationMatrix;\r\n\r\n        var lookAtPosition = new Vector3(0, 0, -1);\r\n        lookAtPosition.applyMatrix4x4(rotationMatrix);\r\n        lookAtPosition.add(cameraWorldPosition);\r\n\r\n        var target = mirrorWorldPosition.subTo(lookAtPosition);\r\n        target.reflect(normal).negate();\r\n        target.add(mirrorWorldPosition);\r\n\r\n        var mirrorCamera = serialization.setValue(new Entity(), { name: \"waterMirrorCamera\" }).addComponent(Camera);\r\n        mirrorCamera.node3d.x = view.x;\r\n        mirrorCamera.node3d.y = view.y;\r\n        mirrorCamera.node3d.z = view.z;\r\n        mirrorCamera.node3d.lookAt(target, rotationMatrix.getAxisY());\r\n\r\n        mirrorCamera.lens = camera.lens.clone();\r\n\r\n        var textureMatrix = new Matrix4x4(\r\n            [\r\n                0.5, 0.0, 0.0, 0.0,\r\n                0.0, 0.5, 0.0, 0.0,\r\n                0.0, 0.0, 0.5, 0.0,\r\n                0.5, 0.5, 0.5, 1.0\r\n            ]\r\n        );\r\n        textureMatrix.append(mirrorCamera.viewProjection);\r\n\r\n        var mirrorPlane = Plane.fromNormalAndPoint(mirrorCamera.node3d.worldToLocalMatrix.transformVector3(normal), mirrorCamera.node3d.worldToLocalMatrix.transformPoint3(mirrorWorldPosition));\r\n        var clipPlane = new Vector4(mirrorPlane.a, mirrorPlane.b, mirrorPlane.c, mirrorPlane.d);\r\n\r\n        var projectionMatrix = mirrorCamera.lens.matrix;\r\n\r\n        var q = new Vector4();\r\n        q.x = (clipPlane.x / Math.abs(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\r\n        q.y = (clipPlane.y / Math.abs(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\r\n        q.z = - 1.0;\r\n        q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\r\n\r\n        clipPlane.scale(2.0 / clipPlane.dot(q));\r\n\r\n        projectionMatrix.elements[2] = clipPlane.x;\r\n        projectionMatrix.elements[6] = clipPlane.y;\r\n        projectionMatrix.elements[10] = clipPlane.z + 1.0 - clipBias;\r\n        projectionMatrix.elements[14] = clipPlane.w;\r\n\r\n        var eye = camera.node3d.worldPosition;\r\n\r\n        // 不支持直接操作gl，下面代码暂时注释掉！\r\n        // // \r\n        // var frameBufferObject = this.frameBufferObject;\r\n        // FrameBufferObject.active(gl, frameBufferObject);\r\n\r\n        // //\r\n        // gl.viewport(0, 0, frameBufferObject.OFFSCREEN_WIDTH, frameBufferObject.OFFSCREEN_HEIGHT);\r\n        // gl.clearColor(1.0, 1.0, 1.0, 1.0);\r\n        // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        // skyboxRenderer.draw(gl, scene, mirrorCamera);\r\n        // // forwardRenderer.draw(gl, scene, mirrorCamera);\r\n        // // forwardRenderer.draw(gl, scene, camera);\r\n\r\n        // frameBufferObject.deactive(gl);\r\n\r\n        //\r\n        // this.material.uniforms.s_mirrorSampler = frameBufferObject.texture;\r\n\r\n        uniforms.u_textureMatrix = textureMatrix;\r\n    }\r\n}\r\n\r\nEntity.registerPrimitive(\"Water\", (g) =>\r\n{\r\n    g.addComponent(Water);\r\n});","import { Material } from \"../materials/Material\";\r\nimport { Color3 } from \"@feng3d/math\";\r\nimport { Matrix4x4 } from \"@feng3d/math\";\r\nimport { Vector3 } from \"@feng3d/math\";\r\nimport { shaderlib } from \"@feng3d/renderer\";\r\nimport { Texture2D, Texture2DEventMap } from \"../textures/Texture2D\";\r\nimport { oav } from \"@feng3d/objectview\";\r\nimport { serialize } from \"@feng3d/serialization\";\r\n\r\ndeclare module \"../materials/Material\"\r\n{\r\n    export interface UniformsTypes { water: WaterUniforms }\r\n\r\n    export interface DefaultMaterial\r\n    {\r\n        \"Water-Material\": Material;\r\n    }\r\n}\r\n\r\nexport class WaterUniforms\r\n{\r\n    __class__: \"feng3d.WaterUniforms\";\r\n\r\n    @serialize\r\n    @oav({ tooltip: \"透明度\" })\r\n    u_alpha = 1.0;\r\n\r\n    /**\r\n     * 水体运动时间，默认自动递增\r\n     */\r\n    // @serialize\r\n    // @oav({ tooltip: \"水体运动时间，默认自动递增\" })\r\n    u_time = 0.0;\r\n\r\n    @serialize\r\n    @oav({ tooltip: \"水体展现的尺寸\" })\r\n    u_size = 10.0;\r\n\r\n    @oav()\r\n    @serialize\r\n    u_distortionScale = 20.0;\r\n\r\n    @serialize\r\n    @oav({ tooltip: \"水体颜色\" })\r\n    u_waterColor = new Color3().fromUnit(0x555555);\r\n\r\n    @oav()\r\n    @serialize\r\n    @oav({ tooltip: \"水体法线图\" })\r\n    s_normalSampler: Texture2D<Texture2DEventMap> = Texture2D.default;\r\n\r\n    /**\r\n     * 镜面反射贴图\r\n     */\r\n    @oav()\r\n    // s_mirrorSampler = new RenderTargetTexture2D();\r\n    s_mirrorSampler = Texture2D.default;\r\n\r\n    u_textureMatrix = new Matrix4x4();\r\n    u_sunColor = new Color3().fromUnit(0x7F7F7F);\r\n    u_sunDirection = new Vector3(0.70707, 0.70707, 0);\r\n}\r\n\r\nshaderlib.shaderConfig.shaders[\"water\"].cls = WaterUniforms;\r\n\r\nMaterial.setDefault(\"Water-Material\", { shaderName: \"water\" });\r\n"],"names":["arguments","super","this","const","let","prototypeAccessors","i","SkyBoxRenderer","skyboxRenderer"],"mappings":"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"}