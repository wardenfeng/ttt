{"version":3,"file":"index.js","sources":["../../src/EventProxy.ts","../../src/handle/KeyState.ts","../../src/handle/ShortCutCapture.ts","../../src/Keyboard.ts","../../src/WindowEventProxy.ts","../../src/handle/KeyCapture.ts","../../src/ShortCut.ts"],"sourcesContent":["import { Event, EventEmitter } from \"@feng3d/event\";\r\n\r\n/**\r\n * 代理 EventTarget, 处理js事件中this关键字问题\r\n */\r\nexport class EventProxy<T = any> extends EventEmitter<T>\r\n{\r\n    pageX = 0;\r\n    pageY = 0;\r\n    clientX = 0;\r\n    clientY = 0;\r\n\r\n    /**\r\n     * 是否右击\r\n     */\r\n    rightmouse = false;\r\n\r\n    key: string = \"\";\r\n\r\n    keyCode: number = 0;\r\n\r\n    deltaY: number = 0;\r\n\r\n    private listentypes: (keyof T)[] = [];\r\n\r\n    get target()\r\n    {\r\n        return this._target;\r\n    }\r\n    set target(v)\r\n    {\r\n        if (this._target == v) return;\r\n        if (this._target)\r\n        {\r\n            this.listentypes.forEach(element =>\r\n            {\r\n                this._target.removeEventListener(<any>element, this.onMouseKey);\r\n            });\r\n        }\r\n        this._target = v;\r\n        if (this._target)\r\n        {\r\n            this.listentypes.forEach(element =>\r\n            {\r\n                this._target.addEventListener(<any>element, this.onMouseKey);\r\n            });\r\n        }\r\n    }\r\n\r\n    private _target: EventTarget;\r\n\r\n    constructor(target?: EventTarget)\r\n    {\r\n        super();\r\n        this.target = target;\r\n    }\r\n\r\n    /**\r\n     * 监听一次事件后将会被移除\r\n     * @param type\t\t\t\t\t\t事件的类型。\r\n     * @param listener\t\t\t\t\t处理事件的侦听器函数。\r\n     * @param thisObject                listener函数作用域\r\n     * @param priority\t\t\t\t\t事件侦听器的优先级。数字越大，优先级越高。默认优先级为 0。\r\n     */\r\n    once<K extends keyof T>(type: K, listener: (event: Event<T[K]>) => void, thisObject?: any, priority?: number)\r\n    {\r\n        this.on(<any>type, listener, thisObject, priority, true);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 添加监听\r\n     * @param type\t\t\t\t\t\t事件的类型。\r\n     * @param listener\t\t\t\t\t处理事件的侦听器函数。\r\n     * @param priority\t\t\t\t\t事件侦听器的优先级。数字越大，优先级越高。默认优先级为 0。\r\n     */\r\n    on<K extends keyof T & string>(type: K, listener: (event: Event<T[K]>) => void, thisObject?: any, priority = 0, once = false): this\r\n    {\r\n        super.on(type, listener, thisObject, priority, once);\r\n        if (this.listentypes.indexOf(type) == -1)\r\n        {\r\n            this.listentypes.push(type);\r\n            this._target.addEventListener(<any>type, this.onMouseKey);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 移除监听\r\n     * @param dispatcher 派发器\r\n     * @param type\t\t\t\t\t\t事件的类型。\r\n     * @param listener\t\t\t\t\t要删除的侦听器对象。\r\n     */\r\n    off<K extends keyof T & string>(type?: K, listener?: (event: Event<T[K]>) => void, thisObject?: any): this\r\n    {\r\n        super.off(type, listener, thisObject);\r\n        if (!type)\r\n        {\r\n            this.listentypes.forEach(element =>\r\n            {\r\n                this._target.removeEventListener(<any>element, this.onMouseKey);\r\n            });\r\n            this.listentypes.length = 0;\r\n        } else if (!this.has(type))\r\n        {\r\n            this._target.removeEventListener(<any>type, this.onMouseKey);\r\n            this.listentypes.splice(this.listentypes.indexOf(type), 1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 处理鼠标按下时同时出发 \"mousemove\" 事件bug\r\n     */\r\n    private handleMouseMoveBug = true;\r\n    private mousedownposition: { x: number, y: number };\r\n    /**\r\n     * 键盘按下事件\r\n     */\r\n    private onMouseKey = (event) =>\r\n    {\r\n        // this.clear();\r\n\r\n        if (event[\"clientX\"] != undefined)\r\n        {\r\n            event = <MouseEvent>event;\r\n            this.clientX = event.clientX;\r\n            this.clientY = event.clientY;\r\n            this.pageX = event.pageX;\r\n            this.pageY = event.pageY;\r\n        }\r\n\r\n        if (event instanceof MouseEvent)\r\n        {\r\n            this.rightmouse = event.button == 2;\r\n\r\n            // 处理鼠标按下时同时出发 \"mousemove\" 事件bug\r\n            if (this.handleMouseMoveBug)\r\n            {\r\n                if (event.type == \"mousedown\")\r\n                {\r\n                    this.mousedownposition = { x: event.clientX, y: event.clientY };\r\n                }\r\n                if (event.type == \"mousemove\")\r\n                {\r\n                    if (this.mousedownposition)\r\n                    {\r\n                        if (this.mousedownposition.x == event.clientX && this.mousedownposition.y == event.clientY)\r\n                        {\r\n                            // console.log(`由于系统原因，触发mousedown同时触发了mousemove，此处屏蔽mousemove事件派发！`);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                if (event.type == \"mouseup\")\r\n                {\r\n                    this.mousedownposition = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (event instanceof KeyboardEvent)\r\n        {\r\n            this.keyCode = event.keyCode;\r\n            this.key = event.key;\r\n        }\r\n\r\n        if (event instanceof WheelEvent)\r\n        {\r\n            this.deltaY = event.deltaY;\r\n        }\r\n\r\n        // 赋值上次鼠标事件值\r\n        // event.clientX = this.clientX;\r\n        // event.clientY = this.clientY;\r\n        // event.pageX = this.pageX;\r\n        // event.pageY = this.pageY;\r\n\r\n        this.emit(event.type, event);\r\n    }\r\n\r\n    /**\r\n     * 清理数据\r\n     */\r\n    private clear()\r\n    {\r\n        this.clientX = 0;\r\n        this.clientY = 0;\r\n        this.rightmouse = false;\r\n        this.key = \"\";\r\n        this.keyCode = 0;\r\n        this.deltaY = 0;\r\n    }\r\n}\r\n","import { EventEmitter } from \"@feng3d/event\";\r\n\r\n/**\r\n * 按键状态\r\n\r\n */\r\nexport class KeyState extends EventEmitter\r\n{\r\n\t/**\r\n\t * 按键状态{key:键名称,value:是否按下}\r\n\t */\r\n\tprivate _keyStateDic: {};\r\n\r\n\t/**\r\n\t * 构建\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._keyStateDic = {};\r\n\t}\r\n\r\n\t/**\r\n\t * 按下键\r\n\t * @param key \t键名称\r\n\t * @param data\t携带数据\r\n\t */\r\n\tpressKey(key: string, data: KeyboardEvent | WheelEvent | MouseEvent): void\r\n\t{\r\n\t\t// 处理鼠标中键与右键\r\n\t\tif (data instanceof MouseEvent)\r\n\t\t{\r\n\t\t\tif ([\"click\", \"mousedown\", \"mouseup\"].indexOf(data.type) != -1)\r\n\t\t\t{\r\n\t\t\t\tkey = [\"\", \"middle\", \"right\"][data.button] + data.type;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._keyStateDic[key] = true;\r\n\t\tthis.emit(key, data);\r\n\t}\r\n\r\n\t/**\r\n\t * 释放键\r\n\t * @param key\t键名称\r\n\t * @param data\t携带数据\r\n\t */\r\n\treleaseKey(key: string, data: KeyboardEvent | WheelEvent | MouseEvent): void\r\n\t{\r\n\t\t// 处理鼠标中键与右键\r\n\t\tif (data instanceof MouseEvent)\r\n\t\t{\r\n\t\t\tif ([\"click\", \"mousedown\", \"mouseup\"].indexOf(data.type) != -1)\r\n\t\t\t{\r\n\t\t\t\tkey = [\"\", \"middle\", \"right\"][data.button] + data.type;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._keyStateDic[key] = false;\r\n\t\tthis.emit(key, data);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取按键状态\r\n\t * @param key 按键名称\r\n\t */\r\n\tgetKeyState(key: string): boolean\r\n\t{\r\n\t\treturn !!this._keyStateDic[key];\r\n\t}\r\n}\r\n","import { ShortCut } from \"../ShortCut\";\r\nimport { KeyState } from \"./KeyState\";\r\nimport { Event } from \"@feng3d/event\";\r\n\r\n/**\r\n * 快捷键捕获\r\n */\r\nexport class ShortCutCapture\r\n{\r\n\t/**\r\n\t * 快捷键环境\r\n\t */\r\n\tprivate _shortCut: ShortCut;\r\n\r\n\t/**\r\n\t * 快捷键\r\n\t */\r\n\tprivate _key: string;\r\n\r\n\t/**\r\n\t * 要执行的命令名称\r\n\t */\r\n\tprivate _command: string | undefined;\r\n\r\n\t/**\r\n\t * 可执行的状态命令\r\n\t */\r\n\tprivate _stateCommand: string | undefined;\r\n\r\n\t/**\r\n\t * 快捷键处于活动状态的条件\r\n\t */\r\n\tprivate _when: string | undefined;\r\n\r\n\t/**\r\n\t * 按键状态\r\n\t */\r\n\tprivate _keyState: KeyState;\r\n\r\n\t/**\r\n\t * 按键列表\r\n\t */\r\n\tprivate _keys: Key[];\r\n\r\n\t/**\r\n\t * 状态列表\r\n\t */\r\n\tprivate _states: State[];\r\n\r\n\t/**\r\n\t * 命令列表\r\n\t */\r\n\tprivate _commands: string[];\r\n\r\n\t/**\r\n\t * 命令列表\r\n\t */\r\n\tprivate _stateCommands: StateCommand[];\r\n\r\n\t/**\r\n\t * 构建快捷键捕获\r\n\t * @param shortCut\t\t\t\t快捷键环境\r\n\t * @param key\t\t\t\t\t快捷键；用“+”连接多个按键，“!”表示没按下某键；例如 “a+!b”表示按下“a”与没按下“b”时触发。\r\n\t * @param command\t\t\t\t要执行的command的id；使用“,”连接触发多个命令；例如 “commandA,commandB”表示满足触发条件后依次执行commandA与commandB命令。\r\n\t * @param stateCommand\t\t\t要执行的状态命令id；使用“,”连接触发多个状态命令，没带“!”表示激活该状态，否则表示使其处于非激活状态；例如 “stateA,!stateB”表示满足触发条件后激活状态“stateA，使“stateB处于非激活状态。\r\n\t * @param when\t\t\t\t\t快捷键激活的条件；使用“+”连接多个状态，没带“!”表示需要处于激活状态，否则需要处于非激活状态； 例如 “stateA+!stateB”表示stateA处于激活状态且stateB处于非激活状态时会判断按键是否满足条件。\r\n\t */\r\n\tconstructor(shortCut: ShortCut, key: string, command?: string, stateCommand?: string, when?: string)\r\n\t{\r\n\t\tthis._shortCut = shortCut;\r\n\t\tthis._keyState = shortCut.keyState;\r\n\t\tthis._key = key;\r\n\t\tthis._command = command;\r\n\t\tthis._stateCommand = stateCommand;\r\n\t\tthis._when = when;\r\n\r\n\t\tthis._keys = this.getKeys(key);\r\n\t\tthis._states = this.getStates(when);\r\n\t\tthis._commands = this.getCommands(command);\r\n\t\tthis._stateCommands = this.getStateCommand(stateCommand);\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化\r\n\t */\r\n\tprivate init(): void\r\n\t{\r\n\t\tfor (var i = 0; i < this._keys.length; i++)\r\n\t\t{\r\n\t\t\tthis._keyState.on(this._keys[i].key, this.onCapture, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 处理捕获事件\r\n\t */\r\n\tprivate onCapture(event: Event<any>): void\r\n\t{\r\n\t\tvar inWhen = this.checkActivityStates(this._states);\r\n\t\tvar pressKeys = this.checkActivityKeys(this._keys);\r\n\r\n\t\tif (pressKeys && inWhen)\r\n\t\t{\r\n\t\t\tthis.dispatchCommands(this._commands, event);\r\n\t\t\tthis.executeStateCommands(this._stateCommands);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 派发命令\r\n\t */\r\n\tprivate dispatchCommands(commands: string[], data: Event<any>): void\r\n\t{\r\n\t\tfor (var i = 0; i < commands.length; i++)\r\n\t\t{\r\n\t\t\tthis._shortCut.emit(commands[i], data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 执行状态命令\r\n\t */\r\n\tprivate executeStateCommands(stateCommands: StateCommand[]): void\r\n\t{\r\n\t\tfor (var i = 0; i < stateCommands.length; i++)\r\n\t\t{\r\n\t\t\tvar stateCommand: StateCommand = stateCommands[i];\r\n\t\t\tif (stateCommand.not)\r\n\t\t\t\tthis._shortCut.deactivityState(stateCommand.state);\r\n\t\t\telse\r\n\t\t\t\tthis._shortCut.activityState(stateCommand.state);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 检测快捷键是否处于活跃状态\r\n\t */\r\n\tprivate checkActivityStates(states: State[]): boolean\r\n\t{\r\n\t\tfor (var i = 0; i < states.length; i++)\r\n\t\t{\r\n\t\t\tif (!this.getState(states[i]))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取是否处于指定状态中（支持一个！取反）\r\n\t * @param state 状态名称\r\n\t */\r\n\tprivate getState(state: State): boolean\r\n\t{\r\n\r\n\t\tvar result = this._shortCut.getState(state.state);\r\n\t\tif (state.not)\r\n\t\t{\r\n\t\t\tresult = !result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * 检测是否按下给出的键\r\n\t * @param keys 按键数组\r\n\t */\r\n\tprivate checkActivityKeys(keys: Key[]): boolean\r\n\t{\r\n\r\n\t\tfor (var i = 0; i < keys.length; i++)\r\n\t\t{\r\n\t\t\tif (!this.getKeyValue(keys[i]))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取按键状态（true：按下状态，false：弹起状态）\r\n\t */\r\n\tprivate getKeyValue(key: Key): boolean\r\n\t{\r\n\r\n\t\tvar value = this._keyState.getKeyState(key.key);\r\n\r\n\t\tif (key.not)\r\n\t\t{\r\n\t\t\tvalue = !value;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取状态列表\r\n\t * @param when\t\t状态字符串\r\n\t */\r\n\tprivate getStates(when?: string): State[]\r\n\t{\r\n\t\tvar states: State[] = [];\r\n\t\tif (!when)\r\n\t\t\treturn states;\r\n\t\tvar state: string = when.trim();\r\n\t\tif (state.length == 0)\r\n\t\t{\r\n\t\t\treturn states;\r\n\t\t}\r\n\r\n\t\tvar stateStrs = state.split(\"+\");\r\n\t\tfor (var i = 0; i < stateStrs.length; i++)\r\n\t\t{\r\n\t\t\tstates.push(new State(stateStrs[i]));\r\n\t\t}\r\n\r\n\t\treturn states;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取键列表\r\n\t * @param key\t\t快捷键\r\n\t */\r\n\tprivate getKeys(key: string): Key[]\r\n\t{\r\n\t\tvar keyStrs = key.split(\"+\");\r\n\t\tvar keys: Key[] = [];\r\n\t\tfor (var i = 0; i < keyStrs.length; i++)\r\n\t\t{\r\n\t\t\tkeys.push(new Key(keyStrs[i]));\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取命令列表\r\n\t * @param command\t命令\r\n\t */\r\n\tprivate getCommands(command?: string): string[]\r\n\t{\r\n\t\tvar commands: string[] = [];\r\n\t\tif (!command)\r\n\t\t\treturn commands;\r\n\r\n\t\tcommand = command.trim();\r\n\t\tvar commandStrs = command.split(\",\");\r\n\t\tfor (var i = 0; i < commandStrs.length; i++)\r\n\t\t{\r\n\t\t\tvar commandStr: string = commandStrs[i].trim();\r\n\t\t\tif (commandStr.length > 0)\r\n\t\t\t{\r\n\t\t\t\tcommands.push(commandStr);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn commands;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取状态命令列表\r\n\t * @param stateCommand\t状态命令\r\n\t */\r\n\tprivate getStateCommand(stateCommand?: string): StateCommand[]\r\n\t{\r\n\t\tvar stateCommands: StateCommand[] = [];\r\n\t\tif (!stateCommand)\r\n\t\t\treturn stateCommands;\r\n\r\n\t\tstateCommand = stateCommand.trim();\r\n\t\tvar stateCommandStrs = stateCommand.split(\",\");\r\n\t\tfor (var i = 0; i < stateCommandStrs.length; i++)\r\n\t\t{\r\n\t\t\tvar commandStr: string = stateCommandStrs[i].trim();\r\n\t\t\tif (commandStr.length > 0)\r\n\t\t\t{\r\n\t\t\t\tstateCommands.push(new StateCommand(commandStr));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn stateCommands;\r\n\t}\r\n\r\n\t/**\r\n\t * 销毁\r\n\t */\r\n\tdestroy(): void\r\n\t{\r\n\t\tfor (var i = 0; i < this._keys.length; i++)\r\n\t\t{\r\n\t\t\tthis._keyState.off(this._keys[i].key, this.onCapture, this);\r\n\t\t}\r\n\t\tthis._shortCut = <any>null;\r\n\t\tthis._keys = <any>null;\r\n\t\tthis._states = <any>null;\r\n\t}\r\n}\r\n\r\n/**\r\n * 按键\r\n */\r\nclass Key\r\n{\r\n\t/**\r\n\t * 是否取反\r\n\t */\r\n\tnot: boolean;\r\n\r\n\t/**\r\n\t * 状态名称\r\n\t */\r\n\tkey: string;\r\n\r\n\tconstructor(key: string)\r\n\t{\r\n\t\tkey = key.trim();\r\n\t\tif (key.charAt(0) == \"!\")\r\n\t\t{\r\n\t\t\tthis.not = true;\r\n\t\t\tkey = key.substr(1).trim();\r\n\t\t}\r\n\t\tthis.key = key;\r\n\t}\r\n}\r\n\r\n/**\r\n * 状态\r\n */\r\nclass State\r\n{\r\n\t/**\r\n\t * 是否取反\r\n\t */\r\n\tnot: boolean;\r\n\r\n\t/**\r\n\t * 状态名称\r\n\t */\r\n\tstate: string;\r\n\r\n\tconstructor(state: string)\r\n\t{\r\n\t\tstate = state.trim();\r\n\t\tif (state.charAt(0) == \"!\")\r\n\t\t{\r\n\t\t\tthis.not = true;\r\n\t\t\tstate = state.substr(1).trim();\r\n\t\t}\r\n\t\tthis.state = state;\r\n\t}\r\n}\r\n\r\n/**\r\n * 状态命令\r\n */\r\nclass StateCommand\r\n{\r\n\t/**\r\n\t * 是否取反\r\n\t */\r\n\tnot: boolean;\r\n\r\n\t/**\r\n\t * 状态名称\r\n\t */\r\n\tstate: string;\r\n\r\n\tconstructor(state: string)\r\n\t{\r\n\t\tstate = state.trim();\r\n\t\tif (state.charAt(0) == \"!\")\r\n\t\t{\r\n\t\t\tthis.not = true;\r\n\t\t\tstate = state.substr(1).trim();\r\n\t\t}\r\n\t\tthis.state = state;\r\n\t}\r\n}\r\n\r\n\r\n","/**\r\n * 键盘按键字典 （补充常量，a-z以及鼠标按键不必再次列出）\r\n * 例如 boardKeyDic[17] = \"ctrl\";\r\n */\r\nvar boardKeyDic: { [keyCode: number]: string } = {\r\n    17: \"ctrl\",\r\n    16: \"shift\",\r\n    32: \"escape\",\r\n    18: \"alt\",\r\n    46: \"del\",\r\n};\r\n\r\nexport class KeyBoard\r\n{\r\n    /**\r\n     * 获取键盘按键名称\r\n     * @param code   按键值\r\n     */\r\n    static getKey(code: number): string\r\n    {\r\n        var key = boardKeyDic[code];\r\n        if (key == null && 65 <= code && code <= 90)\r\n        {\r\n            key = String.fromCharCode(code).toLocaleLowerCase();\r\n        }\r\n        return key;\r\n    }\r\n\r\n    /**\r\n     * 获取按键值\r\n     * @param key 按键\r\n     */\r\n    static getCode(key: string)\r\n    {\r\n        key = key.toLocaleLowerCase();\r\n        var code = key.charCodeAt(0);\r\n        if (key.length == 1 && 65 <= code && code <= 90)\r\n        {\r\n            return code;\r\n        }\r\n        for (const code in boardKeyDic)\r\n        {\r\n            if (boardKeyDic.hasOwnProperty(code))\r\n            {\r\n                if (boardKeyDic[code] == key)\r\n                    return Number(code);\r\n            }\r\n        }\r\n        console.error(`无法获取按键 ${key} 的值！`);\r\n        return code;\r\n    }\r\n}\r\n","import { EventProxy } from \"./EventProxy\";\r\n\r\n/**\r\n * 键盘鼠标输入\r\n */\r\nexport const windowEventProxy = new EventProxy<WindowEventMap>(self);\r\n","import { Event } from \"@feng3d/event\";\r\nimport { KeyBoard } from \"../Keyboard\";\r\nimport type { ShortCut } from \"../ShortCut\";\r\nimport { windowEventProxy } from \"../WindowEventProxy\";\r\nimport { KeyState } from \"./KeyState\";\r\n\r\n/**\r\n * 按键捕获\r\n\r\n */\r\nexport class KeyCapture\r\n{\r\n\t/**\r\n\t * 捕获的按键字典\r\n\t */\r\n\tprivate _mouseKeyDic = {};\r\n\r\n\t/**\r\n\t * 按键状态\r\n\t */\r\n\tprivate _keyState: KeyState;\r\n\tprivate shortcut: ShortCut;\r\n\r\n\t/**\r\n\t * 构建\r\n\t * @param stage\t\t舞台\r\n\t */\r\n\tconstructor(shortcut: ShortCut)\r\n\t{\r\n\t\tthis.shortcut = shortcut;\r\n\t\tthis._keyState = shortcut.keyState;\r\n\t\t//\r\n\t\tif (!windowEventProxy)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\twindowEventProxy.on(\"keydown\", this.onKeydown, this);\r\n\t\twindowEventProxy.on(\"keyup\", this.onKeyup, this);\r\n\r\n\t\t//监听鼠标事件\r\n\t\tvar mouseEvents = [ //\r\n\t\t\t\"dblclick\", //\r\n\t\t\t\"click\", //\r\n\t\t\t\"mousedown\",\r\n\t\t\t\"mouseup\",\r\n\t\t\t\"mousemove\",\r\n\t\t\t\"mouseover\",\r\n\t\t\t\"mouseout\",\r\n\t\t];\r\n\t\tfor (var i = 0; i < mouseEvents.length; i++)\r\n\t\t{\r\n\t\t\twindowEventProxy.on(<any>mouseEvents[i], this.onMouseOnce, this);\r\n\t\t}\r\n\t\twindowEventProxy.on(\"wheel\", this.onMousewheel, this);\r\n\t}\r\n\r\n\t/**\r\n\t * 鼠标事件\r\n\t */\r\n\tprivate onMouseOnce(event: Event<MouseEvent>): void\r\n\t{\r\n\t\tif (!this.shortcut.enable)\r\n\t\t\treturn;\r\n\t\tvar mouseKey: string = event.type;\r\n\t\tthis._keyState.pressKey(mouseKey, event.data);\r\n\t\tthis._keyState.releaseKey(mouseKey, event.data);\r\n\t}\r\n\r\n\t/**\r\n\t * 鼠标事件\r\n\t */\r\n\tprivate onMousewheel(event: Event<WheelEvent>): void\r\n\t{\r\n\t\tif (!this.shortcut.enable)\r\n\t\t\treturn;\r\n\t\tvar mouseKey: string = event.type;\r\n\t\tthis._keyState.pressKey(mouseKey, event.data);\r\n\t\tthis._keyState.releaseKey(mouseKey, event.data);\r\n\t}\r\n\r\n\t/**\r\n\t * 键盘按下事件\r\n\t */\r\n\tprivate onKeydown(event: Event<KeyboardEvent>): void\r\n\t{\r\n\t\tif (!this.shortcut.enable)\r\n\t\t\treturn;\r\n\t\tvar boardKey: string = KeyBoard.getKey(event.data.keyCode);\r\n\t\tboardKey = boardKey || event.data.key;\r\n\t\tif (boardKey)\r\n\t\t{\r\n\t\t\tboardKey = boardKey.toLocaleLowerCase();\r\n\t\t\tthis._keyState.pressKey(boardKey, event.data);\r\n\t\t} else\r\n\t\t{\r\n\t\t\tconsole.error(`无法识别按钮 ${event.data.key}`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 键盘弹起事件\r\n\t */\r\n\tprivate onKeyup(event: Event<KeyboardEvent>): void\r\n\t{\r\n\t\tif (!this.shortcut.enable)\r\n\t\t\treturn;\r\n\t\tvar boardKey: string = KeyBoard.getKey(event.data.keyCode);\r\n\t\tboardKey = boardKey || event.data.key;\r\n\t\tif (boardKey)\r\n\t\t{\r\n\t\t\tboardKey = boardKey.toLocaleLowerCase();\r\n\t\t\tthis._keyState.releaseKey(boardKey, event.data);\r\n\t\t} else\r\n\t\t{\r\n\t\t\tconsole.error(`无法识别按钮 ${event.data.key}`);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import { EventEmitter } from \"@feng3d/event\";\r\nimport { KeyCapture } from \"./handle/KeyCapture\";\r\nimport { KeyState } from \"./handle/KeyState\";\r\nimport { ShortCutCapture } from \"./handle/ShortCutCapture\";\r\n\r\n/**\r\n * 初始化快捷键模块\r\n *\r\n * <pre>\r\nvar shortcuts:Array = [ //\r\n//在按下key1时触发命令command1\r\n{key: \"key1\", command: \"command1\", when: \"\"}, //\r\n //在按下key1时触发状态命令改变stateCommand1为激活状态\r\n{key: \"key1\", stateCommand: \"stateCommand1\", when: \"state1\"}, //\r\n //处于state1状态时按下key1触发命令command1\r\n{key: \"key1\", command: \"command1\", when: \"state1\"}, //\r\n//处于state1状态不处于state2时按下key1与没按下key2触发command1与command2，改变stateCommand1为激活状态，stateCommand2为非激活状态\r\n{key: \"key1+ ! key2\", command: \"command1,command2\", stateCommand: \"stateCommand1,!stateCommand2\", when: \"state1+!state2\"}, //\r\n];\r\n//添加快捷键\r\nshortCut.addShortCuts(shortcuts);\r\n//监听命令\r\nEvent.on(shortCut,<any>\"run\", function(e:Event):void\r\n{\r\ntrace(\"接受到命令：\" + e.type);\r\n});\r\n * </pre>\r\n */\r\nexport class ShortCut extends EventEmitter\r\n{\r\n\t/**\r\n\t * 按键状态\r\n\t */\r\n\tkeyState: KeyState;\r\n\r\n\t/**\r\n\t * 状态字典\r\n\t */\r\n\tstateDic: {};\r\n\r\n\t/**\r\n\t * 按键捕获\r\n\t */\r\n\tkeyCapture: KeyCapture;\r\n\r\n\t/**\r\n\t * 捕获字典\r\n\t */\r\n\tcaptureDic: {};\r\n\r\n\t/**\r\n\t * 启动\r\n\t */\r\n\tenable = true;\r\n\r\n\t/**\r\n\t * 初始化快捷键模块\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.keyState = new KeyState();\r\n\t\tthis.keyCapture = new KeyCapture(this)\r\n\r\n\t\tthis.captureDic = {};\r\n\t\tthis.stateDic = {};\r\n\t}\r\n\r\n\t/**\r\n\t * 添加快捷键\r\n\t * @param shortcuts\t\t快捷键列表\r\n\t */\r\n\taddShortCuts(shortcuts: { key: string, command?: string, stateCommand?: string, when?: string }[]): void\r\n\t{\r\n\t\tfor (var i = 0; i < shortcuts.length; i++)\r\n\t\t{\r\n\t\t\tvar shortcut = shortcuts[i];\r\n\t\t\tvar shortcutUniqueKey: string = this.getShortcutUniqueKey(shortcut);\r\n\t\t\tthis.captureDic[shortcutUniqueKey] = this.captureDic[shortcutUniqueKey] || new ShortCutCapture(this, shortcut.key, shortcut.command, shortcut.stateCommand, shortcut.when);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 删除快捷键\r\n\t * @param shortcuts\t\t快捷键列表\r\n\t */\r\n\tremoveShortCuts(shortcuts: { key: string, command?: string, stateCommand?: string, when?: string }[]): void\r\n\t{\r\n\t\tfor (var i = 0; i < shortcuts.length; i++)\r\n\t\t{\r\n\t\t\tvar shortcutUniqueKey: string = this.getShortcutUniqueKey(shortcuts[i]);\r\n\t\t\tvar shortCutCapture: ShortCutCapture = this.captureDic[shortcutUniqueKey];\r\n\t\t\tif (ShortCutCapture != null)\r\n\t\t\t{\r\n\t\t\t\tshortCutCapture.destroy();\r\n\t\t\t}\r\n\t\t\tdelete this.captureDic[shortcutUniqueKey];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 移除所有快捷键\r\n\t */\r\n\tremoveAllShortCuts(): void\r\n\t{\r\n\t\tvar keys: string[] = [];\r\n\t\tvar key: string;\r\n\t\tfor (key in this.captureDic)\r\n\t\t{\r\n\t\t\tkeys.push(key);\r\n\t\t}\r\n\r\n\t\tkeys.forEach(key =>\r\n\t\t{\r\n\t\t\tvar shortCutCapture: ShortCutCapture = this.captureDic[key];\r\n\t\t\tshortCutCapture.destroy();\r\n\t\t\tdelete this.captureDic[key];\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * 激活状态\r\n\t * @param state 状态名称\r\n\t */\r\n\tactivityState(state: string): void\r\n\t{\r\n\t\tthis.stateDic[state] = true;\r\n\t}\r\n\r\n\t/**\r\n\t * 取消激活状态\r\n\t * @param state 状态名称\r\n\t */\r\n\tdeactivityState(state: string): void\r\n\t{\r\n\t\tdelete this.stateDic[state];\r\n\t}\r\n\r\n\t/**\r\n\t * 获取状态\r\n\t * @param state 状态名称\r\n\t */\r\n\tgetState(state: string): boolean\r\n\t{\r\n\t\treturn !!this.stateDic[state];\r\n\t}\r\n\r\n\t/**\r\n\t * 获取快捷键唯一字符串\r\n\t */\r\n\tprivate getShortcutUniqueKey(shortcut: { key: string, command?: string, stateCommand?: string, when?: string }): string\r\n\t{\r\n\t\treturn shortcut.key + \",\" + shortcut.command + \",\" + shortcut.stateCommand + \",\" + shortcut.when;\r\n\t}\r\n}\r\n\r\n/**\r\n * 快捷键\r\n */\r\nexport const shortcut = new ShortCut();\r\n"],"names":["super","this","EventEmitter","const","code"],"mappings":"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"}